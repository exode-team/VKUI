{"version":3,"sources":["../../../src/hooks/useKeyboardInputTracker.ts"],"names":["React","Keys","pressedKey","useDOM","useGlobalEventListener","useKeyboardInputTracker","document","useState","isKeyboardInputActive","toggleKeyboardInput","enableKeyboardInput","useCallback","e","TAB","disableKeyboardInput","eventOptions","passive","capture"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,UAAf;AACA,SAASC,MAAT;AACA,SAASC,sBAAT;AAEA,OAAO,SAASC,uBAAT,GAA4C;AACjD,gBAAqBF,MAAM,EAA3B;AAAA,MAAQG,QAAR,WAAQA,QAAR;;AAEA,wBACEN,KAAK,CAACO,QAAN,CAAwB,KAAxB,CADF;AAAA;AAAA,MAAOC,qBAAP;AAAA,MAA8BC,mBAA9B;;AAGA,MAAMC,mBAAmB,GAAGV,KAAK,CAACW,WAAN,CAAkB,UAACC,CAAD,EAAsB;AAClE,QAAIV,UAAU,CAACU,CAAD,CAAV,KAAkBX,IAAI,CAACY,GAA3B,EAAgC;AAC9BJ,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AACF,GAJ2B,EAIzB,EAJyB,CAA5B;AAMA,MAAMK,oBAAoB,GAAGd,KAAK,CAACW,WAAN,CAAkB,YAAM;AACnDF,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAF4B,EAE1B,EAF0B,CAA7B;AAIA,MAAMM,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE,IADU;AAEnBC,IAAAA,OAAO,EAAE;AAFU,GAArB;AAKAb,EAAAA,sBAAsB,CACpBE,QADoB,EAEpB,SAFoB,EAGpBI,mBAHoB,EAIpBK,YAJoB,CAAtB;AAMAX,EAAAA,sBAAsB,CACpBE,QADoB,EAEpB,WAFoB,EAGpBQ,oBAHoB,EAIpBC,YAJoB,CAAtB;AAMAX,EAAAA,sBAAsB,CACpBE,QADoB,EAEpB,YAFoB,EAGpBQ,oBAHoB,EAIpBC,YAJoB,CAAtB;AAOA,SAAOP,qBAAP;AACD","sourcesContent":["import * as React from \"react\";\nimport { Keys, pressedKey } from \"../lib/accessibility\";\nimport { useDOM } from \"../lib/dom\";\nimport { useGlobalEventListener } from \"./useGlobalEventListener\";\n\nexport function useKeyboardInputTracker(): boolean {\n  const { document } = useDOM();\n\n  const [isKeyboardInputActive, toggleKeyboardInput] =\n    React.useState<boolean>(false);\n\n  const enableKeyboardInput = React.useCallback((e: KeyboardEvent) => {\n    if (pressedKey(e) === Keys.TAB) {\n      toggleKeyboardInput(true);\n    }\n  }, []);\n\n  const disableKeyboardInput = React.useCallback(() => {\n    toggleKeyboardInput(false);\n  }, []);\n\n  const eventOptions = {\n    passive: true,\n    capture: true,\n  };\n\n  useGlobalEventListener(\n    document,\n    \"keydown\",\n    enableKeyboardInput,\n    eventOptions\n  );\n  useGlobalEventListener(\n    document,\n    \"mousedown\",\n    disableKeyboardInput,\n    eventOptions\n  );\n  useGlobalEventListener(\n    document,\n    \"touchstart\",\n    disableKeyboardInput,\n    eventOptions\n  );\n\n  return isKeyboardInputActive;\n}\n"],"file":"useKeyboardInputTracker.js"}