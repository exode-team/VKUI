{"version":3,"sources":["../../../../src/components/Input/Input.tsx"],"names":["useRef","useEffect","getClassName","classNames","FormField","withAdaptivity","usePlatform","InputComponent","type","align","getRef","className","getRootRef","sizeY","style","before","after","onInput","onBlur","value","caretPosition","alwaysInFocus","isFocus","restProps","platform","ref","handleChange","e","caret","target","selectionStart","element","window","requestAnimationFrame","selectionEnd","handleBlur","current","focus","setSelectionRange","disabled","Input"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { FormField, FormFieldProps } from \"../FormField/FormField\";\nimport { HasAlign, HasRef, HasRootRef } from \"../../types\";\nimport { withAdaptivity, AdaptivityProps } from \"../../hoc/withAdaptivity\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport \"./Input.css\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement>,\n    HasRef<HTMLInputElement>,\n    HasRootRef<HTMLDivElement>,\n    HasAlign,\n    AdaptivityProps,\n    FormFieldProps {\n  isFocus?: boolean;\n  alwaysInFocus?: boolean;\n  caretPosition?: number;\n}\n\nconst InputComponent: React.FunctionComponent<InputProps> = ({\n  type = \"text\",\n  align,\n  getRef,\n  className,\n  getRootRef,\n  sizeY,\n  style,\n  before,\n  after,\n  onInput,\n  onBlur,\n  value,\n  caretPosition,\n  alwaysInFocus,\n  isFocus = false,\n  ...restProps\n}: InputProps) => {\n\n  const platform = usePlatform();\n  const ref = useRef<HTMLInputElement>(null);\n\n  const handleChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n      const caret = e.target.selectionStart\n      const element = e.target\n\n    window.requestAnimationFrame(() => {\n        element.selectionStart = caret\n        element.selectionEnd = caret\n      })\n\n    onInput && onInput(e);\n  };\n\n  const handleBlur = () => ref.current?.focus();\n\n  useEffect(() => {\n    isFocus && ref.current?.focus()\n    caretPosition && ref.current?.setSelectionRange(caretPosition, caretPosition)\n  }, [])\n\n  return (\n    <FormField\n      vkuiClass={classNames(\n        getClassName(\"Input\", platform),\n        !!align && `Input--${align}`,\n        `Input--sizeY-${sizeY}`\n      )}\n      style={style}\n      className={className}\n      getRootRef={getRootRef}\n      before={before}\n      after={after}\n      disabled={restProps.disabled}\n    >\n      <input {...restProps} type={type} onBlur={alwaysInFocus ? handleBlur : onBlur}  onInput={handleChange} value={value} vkuiClass=\"Input__el\" ref={ref || getRef} />\n    </FormField>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Input\n */\nexport const Input = withAdaptivity(InputComponent, {\n  sizeY: true,\n});\n"],"file":"Input.js"}