{"version":3,"sources":["../../../../src/components/ActionSheet/ActionSheet.tsx"],"names":["React","PopoutWrapper","IOS","ActionSheetDropdownDesktop","ActionSheetDropdown","hasReactNode","noop","ActionSheetContext","Caption","usePlatform","useTimeout","useAdaptivityIsDesktop","useObjectMemo","warnOnce","useScrollLock","warn","ActionSheet","children","className","header","text","style","iosCloseItem","restProps","platform","useState","closing","setClosing","onClose","_action","useRef","afterClose","current","process","env","NODE_ENV","isDesktop","timeout","fallbackTransitionFinish","useEffect","set","clear","onItemClick","useCallback","action","immediateAction","autoclose","event","persist","contextValue","DropdownComponent","actionSheet","undefined","defaultProps","popupDirection"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { PopoutWrapper } from \"../PopoutWrapper/PopoutWrapper\";\nimport { IOS } from \"../../lib/platform\";\nimport { ActionSheetDropdownDesktop } from \"./ActionSheetDropdownDesktop\";\nimport { ActionSheetDropdown } from \"./ActionSheetDropdown\";\nimport { hasReactNode, noop } from \"../../lib/utils\";\nimport { ActionSheetContext, ItemClickHandler } from \"./ActionSheetContext\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { useAdaptivityIsDesktop } from \"../../hooks/useAdaptivity\";\nimport { useObjectMemo } from \"../../hooks/useObjectMemo\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { SharedDropdownProps, PopupDirection, ToggleRef } from \"./types\";\nimport { useScrollLock } from \"../AppRoot/ScrollContext\";\nimport \"./ActionSheet.css\";\n\nexport interface ActionSheetProps extends React.HTMLAttributes<HTMLDivElement> {\n  header?: React.ReactNode;\n  text?: React.ReactNode;\n  /**\n   * Закрыть попап по клику снаружи. В v5 будет обязательным.\n   */\n  onClose?: VoidFunction;\n  /**\n   * Элемент, рядом с которым вылезает попап на десктопе.\n   * Лучше передавать RefObject c current.\n   * В v5 будет обязательным.\n   */\n  toggleRef?: ToggleRef;\n  /**\n   * Направление на десктопе\n   */\n  popupDirection?: PopupDirection;\n  /**\n   * Только iOS. В v5 будет обязательным.\n   */\n  iosCloseItem?: React.ReactNode;\n}\n\nconst warn = warnOnce(\"ActionSheet\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ActionSheet\n */\nexport const ActionSheet: React.FC<ActionSheetProps> = ({\n  children,\n  className,\n  header,\n  text,\n  style,\n  iosCloseItem,\n  ...restProps\n}) => {\n  const platform = usePlatform();\n  const [closing, setClosing] = React.useState(false);\n  const onClose = () => setClosing(true);\n  const _action = React.useRef(noop);\n\n  const afterClose = () => {\n    restProps.onClose?.();\n    _action.current();\n    _action.current = noop;\n  };\n\n  if (process.env.NODE_ENV === \"development\" && !restProps.onClose) {\n    warn(\n      `Без свойства \"onClose\" нельзя закрыть ActionSheet по клику вне компонента`,\n      \"error\"\n    );\n  }\n\n  const isDesktop = useAdaptivityIsDesktop();\n\n  useScrollLock(!isDesktop);\n\n  let timeout = platform === IOS ? 300 : 200;\n\n  if (isDesktop) {\n    timeout = 0;\n  }\n\n  const fallbackTransitionFinish = useTimeout(afterClose, timeout);\n  React.useEffect(() => {\n    if (closing) {\n      fallbackTransitionFinish.set();\n    } else {\n      fallbackTransitionFinish.clear();\n    }\n  }, [closing, fallbackTransitionFinish]);\n\n  const onItemClick = React.useCallback<ItemClickHandler>(\n    (action, immediateAction, autoclose) => (event) => {\n      event.persist();\n      immediateAction && immediateAction(event);\n      if (autoclose) {\n        _action.current = () => action && action(event);\n        setClosing(true);\n      } else {\n        action && action(event);\n      }\n    },\n    []\n  );\n  const contextValue = useObjectMemo({ onItemClick, isDesktop });\n\n  const DropdownComponent = isDesktop\n    ? ActionSheetDropdownDesktop\n    : ActionSheetDropdown;\n\n  const actionSheet = (\n    <ActionSheetContext.Provider value={contextValue}>\n      <DropdownComponent\n        closing={closing}\n        timeout={timeout}\n        {...(restProps as Omit<SharedDropdownProps, \"closing\">)}\n        onClose={onClose}\n        className={isDesktop ? className : undefined}\n        style={isDesktop ? style : undefined}\n      >\n        {(hasReactNode(header) || hasReactNode(text)) && (\n          <header vkuiClass=\"ActionSheet__header\">\n            {hasReactNode(header) && (\n              <Caption\n                weight={platform === IOS ? \"1\" : \"2\"}\n                vkuiClass=\"ActionSheet__title\"\n              >\n                {header}\n              </Caption>\n            )}\n            {hasReactNode(text) && (\n              <Caption vkuiClass=\"ActionSheet__text\">{text}</Caption>\n            )}\n          </header>\n        )}\n        {children}\n        {platform === IOS && !isDesktop && iosCloseItem}\n      </DropdownComponent>\n    </ActionSheetContext.Provider>\n  );\n\n  if (isDesktop) {\n    return actionSheet;\n  }\n\n  return (\n    <PopoutWrapper\n      closing={closing}\n      alignY=\"bottom\"\n      className={className}\n      style={style}\n      onClick={onClose}\n      hasMask\n      fixed\n    >\n      {actionSheet}\n    </PopoutWrapper>\n  );\n};\n\nActionSheet.defaultProps = {\n  popupDirection: \"bottom\",\n};\n"],"file":"ActionSheet.js"}