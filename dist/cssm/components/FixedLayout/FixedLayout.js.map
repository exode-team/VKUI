{"version":3,"sources":["../../../../src/components/FixedLayout/FixedLayout.tsx"],"names":["React","IOS","classNames","SplitColContext","TooltipContainer","useDOM","useGlobalEventListener","usePlatform","FixedLayout","children","style","vertical","getRootRef","getRef","filled","restProps","platform","useState","undefined","width","setWidth","window","useContext","colRef","doResize","current","offsetWidth","useEffect"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT;AACA,SAASC,UAAT;AAEA,SAASC,eAAT;AACA,SAASC,gBAAT;AACA,SAASC,MAAT;AACA,SAASC,sBAAT;AACA,SAASC,WAAT;AACA;;AAqBA;AACA;AACA;AACA,OAAO,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAQ/B;AAAA,MAPtBC,QAOsB,QAPtBA,QAOsB;AAAA,MANtBC,KAMsB,QANtBA,KAMsB;AAAA,MALtBC,QAKsB,QALtBA,QAKsB;AAAA,MAJtBC,UAIsB,QAJtBA,UAIsB;AAAA,MAHtBC,MAGsB,QAHtBA,MAGsB;AAAA,MAFtBC,MAEsB,QAFtBA,MAEsB;AAAA,MADnBC,SACmB;;AACtB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AACA,wBAA0BP,KAAK,CAACiB,QAAN,CAAmCC,SAAnC,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,gBAAmBf,MAAM,EAAzB;AAAA,MAAQgB,MAAR,WAAQA,MAAR;;AACA,0BAAmBrB,KAAK,CAACsB,UAAN,CAAiBnB,eAAjB,CAAnB;AAAA,MAAQoB,MAAR,qBAAQA,MAAR;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,WACfJ,QAAQ,CAACG,MAAM,SAAN,IAAAA,MAAM,WAAN,IAAAA,MAAM,CAAEE,OAAR,aAAqBF,MAAM,CAACE,OAAP,CAAeC,WAApC,UAAsDR,SAAvD,CADO;AAAA,GAAjB;;AAEAlB,EAAAA,KAAK,CAAC2B,SAAN,CAAgBH,QAAhB,EAA0B,CAACD,MAAD,CAA1B;AACAjB,EAAAA,sBAAsB,CAACe,MAAD,EAAS,QAAT,EAAmBG,QAAnB,CAAtB;AAEA,SACE,oBAAC,gBAAD,eACMT,SADN;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,GAAG,EAAEH,UAHP;AAIE,IAAA,SAAS,EAAEV,UAAU,CACnB,aADmB,EAEnBc,QAAQ,KAAKf,GAAb,IAAoB,kBAFD,EAGnBa,MAAM,IAAI,qBAHS,yBAIHH,QAJG,EAJvB;AAUE,IAAA,KAAK,kCAAOD,KAAP;AAAcS,MAAAA,KAAK,EAALA;AAAd;AAVP,MAYE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,GAAG,EAAEN;AAAtC,KACGJ,QADH,CAZF,CADF;AAkBD,CApCM","sourcesContent":["import * as React from \"react\";\nimport { IOS } from \"../../lib/platform\";\nimport { classNames } from \"../../lib/classNames\";\nimport { HasRef, HasRootRef } from \"../../types\";\nimport { SplitColContext } from \"../SplitCol/SplitCol\";\nimport { TooltipContainer } from \"../Tooltip/TooltipContainer\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport \"./FixedLayout.css\";\n\nexport interface FixedLayoutProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasRootRef<HTMLDivElement>,\n    HasRef<HTMLDivElement> {\n  vertical?: \"top\" | \"bottom\";\n  /**\n   * Это свойство определяет, будет ли фон компонента окрашен в цвет фона контента.\n   * Это часто необходимо для фиксированных кнопок в нижней части экрана.\n   */\n  filled?: boolean;\n}\n\nexport interface FixedLayoutState {\n  position: \"absolute\" | null;\n  top: number;\n  bottom: number;\n  width: string;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FixedLayout\n */\nexport const FixedLayout: React.FC<FixedLayoutProps> = ({\n  children,\n  style,\n  vertical,\n  getRootRef,\n  getRef,\n  filled,\n  ...restProps\n}: FixedLayoutProps) => {\n  const platform = usePlatform();\n  const [width, setWidth] = React.useState<string | undefined>(undefined);\n  const { window } = useDOM();\n  const { colRef } = React.useContext(SplitColContext);\n  const doResize = () =>\n    setWidth(colRef?.current ? `${colRef.current.offsetWidth}px` : undefined);\n  React.useEffect(doResize, [colRef]);\n  useGlobalEventListener(window, \"resize\", doResize);\n\n  return (\n    <TooltipContainer\n      {...restProps}\n      fixed\n      ref={getRootRef}\n      vkuiClass={classNames(\n        \"FixedLayout\",\n        platform === IOS && \"FixedLayout--ios\",\n        filled && \"FixedLayout--filled\",\n        `FixedLayout--${vertical}`\n      )}\n      style={{ ...style, width }}\n    >\n      <div vkuiClass=\"FixedLayout__in\" ref={getRef}>\n        {children}\n      </div>\n    </TooltipContainer>\n  );\n};\n"],"file":"FixedLayout.js"}