{"version":3,"sources":["../../../../src/components/SegmentedControl/SegmentedControl.tsx"],"names":["React","classNames","useIsomorphicLayoutEffect","generateRandomId","noop","warnOnce","SegmentedControlOption","useAdaptivity","warn","SegmentedControl","size","name","options","getRootRef","onChange","valueProp","value","defaultValue","children","restProps","sizeY","initialValue","process","env","NODE_ENV","undefined","useState","activeOptionIdx","updateActiveOptionIdx","valueLocal","updateValueLocal","nameRef","useRef","_activeOptionIdx","findIndex","option","translateX","handleOnChange","width","length","transform","WebkitTransform","map","label","optionProps","current"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { generateRandomId, noop } from \"../../lib/utils\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { SegmentedControlOption } from \"./SegmentedControlOption/SegmentedControlOption\";\nimport { HasRootRef } from \"../../types\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport \"./SegmentedControl.css\";\n\nexport type SegmentedControlValue = string | number | undefined;\n\nexport interface SegmentedControlOptionInterface\n  extends Omit<React.HTMLAttributes<HTMLElement>, \"label\"> {\n  label: React.ReactChild;\n  value: SegmentedControlValue;\n}\n\nexport interface SegmentedControlProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\">,\n    HasRootRef<HTMLDivElement> {\n  options: SegmentedControlOptionInterface[];\n  size?: \"m\" | \"l\";\n  name?: string;\n  onChange?: (value: SegmentedControlValue) => void;\n  value?: SegmentedControlValue;\n  defaultValue?: SegmentedControlValue;\n}\n\nconst warn = warnOnce(\"SegmentedControl\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SegmentedControl\n */\nexport const SegmentedControl: React.FC<SegmentedControlProps> = ({\n  size = \"l\",\n  name,\n  options,\n  getRootRef,\n  onChange = noop,\n  value: valueProp,\n  defaultValue,\n  children,\n  ...restProps\n}) => {\n  const { sizeY } = useAdaptivity();\n  const initialValue = defaultValue ?? options[0]?.value;\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (valueProp !== undefined && defaultValue !== undefined) {\n      warn(\n        \"SegmentedControl должен быть либо управляемым, либо неуправляемым\" +\n          \"(укажите либо свойство value, либо свойство defaultValue, но не оба).\",\n        \"error\"\n      );\n    }\n  }\n\n  const [activeOptionIdx, updateActiveOptionIdx] = React.useState<number>(0);\n  const [valueLocal, updateValueLocal] =\n    React.useState<SegmentedControlValue>(initialValue);\n\n  const value = valueProp ?? valueLocal;\n\n  const nameRef = React.useRef<string>(name ?? generateRandomId());\n\n  useIsomorphicLayoutEffect(() => {\n    const _activeOptionIdx = options.findIndex(\n      (option) => option.value === value\n    );\n\n    if (_activeOptionIdx === -1 && process.env.NODE_ENV === \"development\") {\n      warn(\"defaultValue: такого значения нет среди опций!\", \"error\");\n    }\n\n    updateActiveOptionIdx(_activeOptionIdx);\n  }, [value, options]);\n\n  const translateX = `translateX(${100 * activeOptionIdx}%)`;\n\n  const handleOnChange = (value: SegmentedControlValue) => {\n    if (valueProp === undefined) {\n      updateValueLocal(value);\n    }\n    onChange(value);\n  };\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\n        \"SegmentedControl\",\n        // TODO v5.0.0 поправить под новую адаптивность\n        `SegmentedControl--sizeY-${sizeY}`,\n        `SegmentedControl--${size}`\n      )}\n      ref={getRootRef}\n    >\n      <div role=\"radiogroup\" vkuiClass=\"SegmentedControl__in\">\n        {activeOptionIdx > -1 && (\n          <div\n            aria-hidden=\"true\"\n            vkuiClass=\"SegmentedControl__slider\"\n            style={{\n              width: `${100 / options.length}%`,\n              transform: translateX,\n              WebkitTransform: translateX,\n            }}\n          />\n        )}\n        {options.map(({ label, ...optionProps }) => (\n          <SegmentedControlOption\n            key={`${optionProps.value}`}\n            {...optionProps}\n            vkuiClass=\"SegmentedControl__option\"\n            name={nameRef.current}\n            checked={value === optionProps.value}\n            onChange={() => handleOnChange(optionProps.value)}\n          >\n            {label}\n          </SegmentedControlOption>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"file":"SegmentedControl.js"}