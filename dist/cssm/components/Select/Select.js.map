{"version":3,"sources":["../../../../src/components/Select/Select.tsx"],"names":["NativeSelect","CustomSelect","withAdaptivity","useAdaptivity","usePlatform","Platform","VKCOM","SizeType","Paragraph","Text","Headline","SelectType","default","plain","accent","SelectTypography","selectType","children","restProps","platform","sizeY","ANDROID","Component","COMPACT","SelectComponent","hasMouse","props","options","popupDirection","renderOption","map","label","value","Select"],"mappings":";;;;;;;AACA,SAASA,YAAT;AACA,SAASC,YAAT;AACA,SAASC,cAAT;AACA,SAASC,aAAT;AACA,SAASC,WAAT;AACA,SAASC,QAAT,EAAmBC,KAAnB;AACA,SAGEC,QAHF;AAKA,SAASC,SAAT;AACA,SAASC,IAAT;AACA,SAASC,QAAT;AAEA,OAAO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,OAAO,EAAE,SADe;AAExBC,EAAAA,KAAK,EAAE,OAFiB;AAGxBC,EAAAA,MAAM,EAAE;AAHgB,CAAnB,C,CAMP;;AACA;AACA;AACA;;AACA,OAAO,IAAMC,gBAEZ,GAAG,SAFSA,gBAET,OAAiE;AAAA,6BAA9DC,UAA8D;AAAA,MAA9DA,UAA8D,gCAAjDL,UAAU,CAACC,OAAsC;AAAA,MAA7BK,QAA6B,QAA7BA,QAA6B;AAAA,MAAhBC,SAAgB;;AACnE,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;;AACA,uBAAkBD,aAAa,EAA/B;AAAA,MAAQiB,KAAR,kBAAQA,KAAR;;AAEA,MAAIJ,UAAU,KAAKL,UAAU,CAACG,MAA9B,EAAsC;AACpC,WACE,oBAAC,SAAD;AACE,MAAA,MAAM,EAAEK,QAAQ,KAAKd,QAAQ,CAACgB,OAAtB,GAAgC,GAAhC,GAAsC;AADhD,OAEMH,SAFN,GAIGD,QAJH,CADF;AAQD;;AAED,MAAMK,SAAS,GACbH,QAAQ,KAAKb,KAAb,IAAsBc,KAAK,KAAKb,QAAQ,CAACgB,OAAzC,GAAmDd,IAAnD,GAA0DC,QAD5D;AAGA,SACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC;AAArB,KAAgCQ,SAAhC,GACGD,QADH,CADF;AAKD,CAzBM;;AA6BP,IAAMO,eAAmE,GAAG,SAAtEA,eAAsE,QAGzD;AAAA,MAFjBC,QAEiB,SAFjBA,QAEiB;AAAA,MADdC,KACc;;AACjB;AACA,MAAID,QAAJ,EAAc;AACZ,QAAQR,QAAR,GAAmCS,KAAnC,CAAQT,QAAR;AAAA,QAAqBC,UAArB,4BAAmCQ,KAAnC;;AAEA,WAAO,oBAAC,YAAD,EAAkBR,UAAlB,CAAP;AACD;;AAED,uBAAqEQ,KAArE,CAAQC,OAAR;AAAA,MAAQA,OAAR,+BAAkB,EAAlB;AAAA,MAAsBC,cAAtB,GAAqEF,KAArE,CAAsBE,cAAtB;AAAA,MAAsCC,YAAtC,GAAqEH,KAArE,CAAsCG,YAAtC;AAAA,MAAuDX,SAAvD,4BAAqEQ,KAArE;;AAEA,SACE,oBAAC,YAAD,EAAkBR,SAAlB,EACGS,OAAO,CAACG,GAAR,CAAY;AAAA,QAAGC,KAAH,SAAGA,KAAH;AAAA,QAAUC,KAAV,SAAUA,KAAV;AAAA,WACX;AAAQ,MAAA,KAAK,EAAEA,KAAf;AAAsB,MAAA,GAAG,YAAKA,KAAL;AAAzB,OACGD,KADH,CADW;AAAA,GAAZ,CADH,CADF;AASD,CAtBD;AAwBA;AACA;AACA;;;AACA,OAAO,IAAME,MAAM,GAAG/B,cAAc,CAACsB,eAAD,EAAkB;AACpDC,EAAAA,QAAQ,EAAE;AAD0C,CAAlB,CAA7B","sourcesContent":["import * as React from \"react\";\nimport { NativeSelect } from \"../NativeSelect/NativeSelect\";\nimport { CustomSelect, CustomSelectProps } from \"../CustomSelect/CustomSelect\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Platform, VKCOM } from \"../../lib/platform\";\nimport {\n  AdaptivityContextInterface,\n  AdaptivityProps,\n  SizeType,\n} from \"../AdaptivityProvider/AdaptivityContext\";\nimport { Paragraph } from \"../Typography/Paragraph/Paragraph\";\nimport { Text } from \"../Typography/Text/Text\";\nimport { Headline } from \"../Typography/Headline/Headline\";\n\nexport const SelectType = {\n  default: \"default\",\n  plain: \"plain\",\n  accent: \"accent\",\n} as const;\n\n// TODO v5.0.0 поправить под новую адаптивность\n/**\n * @see https://vkcom.github.io/VKUI/#/SelectTypography\n */\nexport const SelectTypography: React.FC<\n  Pick<CustomSelectProps, \"selectType\">\n> = ({ selectType = SelectType.default, children, ...restProps }) => {\n  const platform = usePlatform();\n  const { sizeY } = useAdaptivity();\n\n  if (selectType === SelectType.accent) {\n    return (\n      <Paragraph\n        weight={platform === Platform.ANDROID ? \"2\" : \"1\"}\n        {...restProps}\n      >\n        {children}\n      </Paragraph>\n    );\n  }\n\n  const Component =\n    platform === VKCOM || sizeY === SizeType.COMPACT ? Text : Headline;\n\n  return (\n    <Component Component=\"span\" {...restProps}>\n      {children}\n    </Component>\n  );\n};\n\nexport interface SelectProps extends CustomSelectProps, AdaptivityProps {}\n\nconst SelectComponent: React.FC<SelectProps & AdaptivityContextInterface> = ({\n  hasMouse,\n  ...props\n}: SelectProps) => {\n  // Use custom select if device has connected a mouse\n  if (hasMouse) {\n    const { children, ...restProps } = props;\n\n    return <CustomSelect {...restProps} />;\n  }\n\n  const { options = [], popupDirection, renderOption, ...restProps } = props;\n\n  return (\n    <NativeSelect {...restProps}>\n      {options.map(({ label, value }) => (\n        <option value={value} key={`${value}`}>\n          {label}\n        </option>\n      ))}\n    </NativeSelect>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Select\n */\nexport const Select = withAdaptivity(SelectComponent, {\n  hasMouse: true,\n});\n"],"file":"Select.js"}