{"version":3,"sources":["../../../../src/components/CalendarDays/CalendarDays.tsx"],"names":["React","isSameDay","isSameMonth","CalendarDay","getDaysNames","getWeeks","LocaleProviderContext","classNames","useTodayDate","Caption","CalendarDays","viewDate","value","weekStartsOn","onDayChange","isDaySelected","isDayActive","isDaySelectionEnd","isDaySelectionStart","onDayEnter","onDayLeave","isDayHinted","isHintedDaySelectionStart","isHintedDaySelectionEnd","isDayFocused","isDayDisabled","size","showNeighboringMonth","dayProps","listenDayChangesForUpdate","props","locale","useContext","ref","useRef","now","weeks","useMemo","daysNames","handleDayChange","useCallback","date","current","focus","map","dayName","week","i","day","sameMonth","toISOString"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,WAApB;AACA,SACEC,WADF;AAIA,SAASC,YAAT,EAAuBC,QAAvB;AACA,SAASC,qBAAT;AACA,SAASC,UAAT;AACA,SAASC,YAAT;AACA,SAASC,OAAT;AACA;AAyBA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAqBH;AAAA,MApBvBC,QAoBuB,QApBvBA,QAoBuB;AAAA,MAnBvBC,KAmBuB,QAnBvBA,KAmBuB;AAAA,MAlBvBC,YAkBuB,QAlBvBA,YAkBuB;AAAA,MAjBvBC,WAiBuB,QAjBvBA,WAiBuB;AAAA,MAhBvBC,aAgBuB,QAhBvBA,aAgBuB;AAAA,MAfvBC,WAeuB,QAfvBA,WAeuB;AAAA,MAdvBC,iBAcuB,QAdvBA,iBAcuB;AAAA,MAbvBC,mBAauB,QAbvBA,mBAauB;AAAA,MAZvBC,UAYuB,QAZvBA,UAYuB;AAAA,MAXvBC,UAWuB,QAXvBA,UAWuB;AAAA,MAVvBC,WAUuB,QAVvBA,WAUuB;AAAA,MATvBC,yBASuB,QATvBA,yBASuB;AAAA,MARvBC,uBAQuB,QARvBA,uBAQuB;AAAA,MAPvBC,YAOuB,QAPvBA,YAOuB;AAAA,MANvBC,aAMuB,QANvBA,aAMuB;AAAA,MALvBC,IAKuB,QALvBA,IAKuB;AAAA,mCAJvBC,oBAIuB;AAAA,MAJvBA,oBAIuB,sCAJA,KAIA;AAAA,MAHvBC,QAGuB,QAHvBA,QAGuB;AAAA,mCAFvBC,yBAEuB;AAAA,MAFvBA,yBAEuB,sCAFK,KAEL;AAAA,MADpBC,KACoB;;AACvB,MAAMC,MAAM,GAAG/B,KAAK,CAACgC,UAAN,CAAiB1B,qBAAjB,CAAf;AACA,MAAM2B,GAAG,GAAGjC,KAAK,CAACkC,MAAN,CAA6B,IAA7B,CAAZ;AACA,MAAMC,GAAG,GAAG3B,YAAY,CAACqB,yBAAD,CAAxB;AAEA,MAAMO,KAAK,GAAGpC,KAAK,CAACqC,OAAN,CACZ;AAAA,WAAMhC,QAAQ,CAACM,QAAD,EAAWE,YAAX,CAAd;AAAA,GADY,EAEZ,CAACA,YAAD,EAAeF,QAAf,CAFY,CAAd;AAKA,MAAM2B,SAAS,GAAGtC,KAAK,CAACqC,OAAN,CAChB;AAAA,WAAMjC,YAAY,CAAC+B,GAAD,EAAMtB,YAAN,EAAoBkB,MAApB,CAAlB;AAAA,GADgB,EAEhB,CAACA,MAAD,EAASI,GAAT,EAActB,YAAd,CAFgB,CAAlB;AAKA,MAAM0B,eAAe,GAAGvC,KAAK,CAACwC,WAAN,CACtB,UAACC,IAAD,EAAgB;AAAA;;AACd3B,IAAAA,WAAW,CAAC2B,IAAD,CAAX;AAEA,oBAAAR,GAAG,CAACS,OAAJ,8DAAaC,KAAb;AACD,GALqB,EAMtB,CAAC7B,WAAD,CANsB,CAAxB;AASA,SACE,wCAASgB,KAAT;AAAgB,IAAA,SAAS,EAAC,cAA1B;AAAyC,IAAA,GAAG,EAAEG;AAA9C,MACE;AACE,IAAA,SAAS,EAAE1B,UAAU,CACnB,mBADmB,oCAEQmB,IAFR;AADvB,KAMGY,SAAS,CAACM,GAAV,CAAc,UAACC,OAAD;AAAA,WACb,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAd;AAAuB,MAAA,KAAK,EAAC,GAA7B;AAAiC,MAAA,SAAS,EAAC;AAA3C,OACGA,OADH,CADa;AAAA,GAAd,CANH,CADF,EAcGT,KAAK,CAACQ,GAAN,CAAU,UAACE,IAAD,EAAOC,CAAP;AAAA,WACT;AACE,MAAA,SAAS,EAAExC,UAAU,CACnB,mBADmB,oCAEQmB,IAFR,EADvB;AAKE,MAAA,GAAG,EAAEqB;AALP,OAOGD,IAAI,CAACF,GAAL,CAAS,UAACI,GAAD,EAAMD,CAAN,EAAY;AACpB,UAAME,SAAS,GAAG/C,WAAW,CAAC8C,GAAD,EAAMrC,QAAN,CAA7B;AACA,aACE,oBAAC,WAAD;AACE,QAAA,GAAG,EAAEqC,GAAG,CAACE,WAAJ,EADP;AAEE,QAAA,GAAG,EAAEF,GAFP;AAGE,QAAA,KAAK,EAAE/C,SAAS,CAAC+C,GAAD,EAAMb,GAAN,CAHlB;AAIE,QAAA,MAAM,EAAEnB,WAAW,CAACgC,GAAD,CAJrB;AAKE,QAAA,QAAQ,EAAET,eALZ;AAME,QAAA,MAAM,EAAE,CAACZ,oBAAD,IAAyB,CAACsB,SANpC;AAOE,QAAA,QAAQ,EAAExB,aAAa,CAACuB,GAAD,CAPzB;AAQE,QAAA,cAAc,EAAE9B,mBAAmB,CAAC8B,GAAD,EAAMD,CAAN,CARrC;AASE,QAAA,YAAY,EAAE9B,iBAAiB,CAAC+B,GAAD,EAAMD,CAAN,CATjC;AAUE,QAAA,oBAAoB,EAAEzB,yBAAF,aAAEA,yBAAF,uBAAEA,yBAAyB,CAAG0B,GAAH,EAAQD,CAAR,CAVjD;AAWE,QAAA,kBAAkB,EAAExB,uBAAF,aAAEA,uBAAF,uBAAEA,uBAAuB,CAAGyB,GAAH,EAAQD,CAAR,CAX7C;AAYE,QAAA,QAAQ,EAAEhC,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAGiC,GAAH,CAZzB;AAaE,QAAA,OAAO,EAAExB,YAAY,CAACwB,GAAD,CAbvB;AAcE,QAAA,OAAO,EAAE7B,UAdX;AAeE,QAAA,OAAO,EAAEC,UAfX;AAgBE,QAAA,MAAM,EAAEC,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAG2B,GAAH,CAhBrB;AAiBE,QAAA,SAAS,EAAEC,SAjBb;AAkBE,QAAA,IAAI,EAAEvB;AAlBR,SAmBME,QAnBN,EADF;AAuBD,KAzBA,CAPH,CADS;AAAA,GAAV,CAdH,CADF;AAqDD,CAlGM","sourcesContent":["import * as React from \"react\";\nimport { isSameDay, isSameMonth } from \"../../lib/date\";\nimport {\n  CalendarDay,\n  CalendarDayElementProps,\n} from \"../CalendarDay/CalendarDay\";\nimport { getDaysNames, getWeeks } from \"../../lib/calendar\";\nimport { LocaleProviderContext } from \"../LocaleProviderContext/LocaleProviderContext\";\nimport { classNames } from \"../../lib/classNames\";\nimport { useTodayDate } from \"../../hooks/useTodayDate\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport \"./CalendarDays.css\";\n\nexport interface CalendarDaysProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\"> {\n  value?: Date | Array<Date | null>;\n  viewDate: Date;\n  weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  showNeighboringMonth?: boolean;\n  size?: \"s\" | \"m\";\n  dayProps?: CalendarDayElementProps;\n  listenDayChangesForUpdate?: boolean;\n  onDayChange(value: Date): void;\n  isDayDisabled(value: Date): boolean;\n  isDaySelectionStart(value: Date, dayOfWeek: number): boolean;\n  isDaySelectionEnd(value: Date, dayOfWeek: number): boolean;\n  isHintedDaySelectionStart?(value: Date, dayOfWeek: number): boolean;\n  isHintedDaySelectionEnd?(value: Date, dayOfWeek: number): boolean;\n  isDayActive(value: Date): boolean;\n  isDayHinted?(value: Date): boolean;\n  isDaySelected?(value: Date): boolean;\n  isDayFocused(value: Date): boolean;\n  onDayEnter?(value: Date): void;\n  onDayLeave?(value: Date): void;\n}\n\nexport const CalendarDays = ({\n  viewDate,\n  value,\n  weekStartsOn,\n  onDayChange,\n  isDaySelected,\n  isDayActive,\n  isDaySelectionEnd,\n  isDaySelectionStart,\n  onDayEnter,\n  onDayLeave,\n  isDayHinted,\n  isHintedDaySelectionStart,\n  isHintedDaySelectionEnd,\n  isDayFocused,\n  isDayDisabled,\n  size,\n  showNeighboringMonth = false,\n  dayProps,\n  listenDayChangesForUpdate = false,\n  ...props\n}: CalendarDaysProps) => {\n  const locale = React.useContext(LocaleProviderContext);\n  const ref = React.useRef<HTMLDivElement>(null);\n  const now = useTodayDate(listenDayChangesForUpdate);\n\n  const weeks = React.useMemo(\n    () => getWeeks(viewDate, weekStartsOn),\n    [weekStartsOn, viewDate]\n  );\n\n  const daysNames = React.useMemo(\n    () => getDaysNames(now, weekStartsOn, locale),\n    [locale, now, weekStartsOn]\n  );\n\n  const handleDayChange = React.useCallback(\n    (date: Date) => {\n      onDayChange(date);\n\n      ref.current?.focus();\n    },\n    [onDayChange]\n  );\n\n  return (\n    <div {...props} vkuiClass=\"CalendarDays\" ref={ref}>\n      <div\n        vkuiClass={classNames(\n          \"CalendarDays__row\",\n          `CalendarDays__row--size-${size}`\n        )}\n      >\n        {daysNames.map((dayName) => (\n          <Caption key={dayName} level=\"1\" vkuiClass=\"CalendarDays__weekday\">\n            {dayName}\n          </Caption>\n        ))}\n      </div>\n\n      {weeks.map((week, i) => (\n        <div\n          vkuiClass={classNames(\n            \"CalendarDays__row\",\n            `CalendarDays__row--size-${size}`\n          )}\n          key={i}\n        >\n          {week.map((day, i) => {\n            const sameMonth = isSameMonth(day, viewDate);\n            return (\n              <CalendarDay\n                key={day.toISOString()}\n                day={day}\n                today={isSameDay(day, now)}\n                active={isDayActive(day)}\n                onChange={handleDayChange}\n                hidden={!showNeighboringMonth && !sameMonth}\n                disabled={isDayDisabled(day)}\n                selectionStart={isDaySelectionStart(day, i)}\n                selectionEnd={isDaySelectionEnd(day, i)}\n                hintedSelectionStart={isHintedDaySelectionStart?.(day, i)}\n                hintedSelectionEnd={isHintedDaySelectionEnd?.(day, i)}\n                selected={isDaySelected?.(day)}\n                focused={isDayFocused(day)}\n                onEnter={onDayEnter}\n                onLeave={onDayLeave}\n                hinted={isDayHinted?.(day)}\n                sameMonth={sameMonth}\n                size={size}\n                {...dayProps}\n              />\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n};\n"],"file":"CalendarDays.js"}