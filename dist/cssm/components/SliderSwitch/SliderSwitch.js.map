{"version":3,"file":"SliderSwitch.js","names":["React","SliderSwitchButton","classNames","warnOnce","warn","SliderSwitch","props","value","onSwitch","setState","activeValue","options","hoveredOptionId","event","key","preventDefault","state","find","option","undefined","firstButton","current","focus","secondButton","createRef","process","env","NODE_ENV","name","_activeValue","restProps","firstOption","secondOption","firstActive","secondActive","switchByKey","resetFocusedOption","handleFirstClick","handleFirstHover","handleSecondClick","handleSecondHover","nextProps","prevState","Component"],"sources":["../../../../src/components/SliderSwitch/SliderSwitch.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { SliderSwitchButton } from \"./SliderSwitchButton\";\nimport { classNames } from \"../../lib/classNames\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { HasPlatform } from \"../../types\";\nimport \"./SliderSwitch.css\";\n\nexport interface SliderSwitchOptionInterface {\n  name: string;\n  value: string | number;\n}\n\nexport interface SliderSwitchProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasPlatform {\n  options: Array<{\n    name: string;\n    value: string | number;\n  }>;\n  activeValue?: SliderSwitchOptionInterface[\"value\"];\n  name?: string;\n  onSwitch?: (value: SliderSwitchOptionInterface[\"value\"]) => void;\n}\n\ninterface SliderSwitchState {\n  activeValue: SliderSwitchOptionInterface[\"value\"];\n  hoveredOptionId: number;\n}\n\nconst warn = warnOnce(\"SliderSwitch\");\n\n/**\n * @deprecated Этот компонент устарел и будет удален в 5.0.0. Используйте [`SegmentedControl`](https://vkcom.github.io/VKUI/#/SegmentedControl).\n * @see https://vkcom.github.io/VKUI/#/SliderSwitch\n */\nclass SliderSwitch extends React.Component<\n  SliderSwitchProps,\n  SliderSwitchState\n> {\n  public constructor(props: SliderSwitchProps) {\n    super(props);\n\n    this.state = {\n      activeValue: props.activeValue ?? \"\",\n      hoveredOptionId: -1,\n    };\n\n    this.firstButton = React.createRef();\n    this.secondButton = React.createRef();\n  }\n\n  static defaultProps = {\n    options: [\n      { name: \"\", value: \"\" },\n      { name: \"\", value: \"\" },\n    ],\n  };\n\n  firstButton: React.RefObject<HTMLDivElement>;\n  secondButton: React.RefObject<HTMLDivElement>;\n\n  onSwitch = (value: SliderSwitchOptionInterface[\"value\"]) => {\n    const { onSwitch } = this.props;\n\n    this.setState(\n      () => ({\n        activeValue: value,\n      }),\n      () => {\n        onSwitch && onSwitch(value);\n      }\n    );\n  };\n\n  handleFirstClick = () => {\n    const { options } = this.props;\n    const { value } = options[0];\n\n    this.onSwitch(value);\n  };\n\n  handleSecondClick = () => {\n    const { options } = this.props;\n    const { value } = options[1];\n\n    this.onSwitch(value);\n  };\n\n  handleFirstHover = () => {\n    this.setState(() => ({\n      hoveredOptionId: 0,\n    }));\n  };\n\n  handleSecondHover = () => {\n    this.setState(() => ({\n      hoveredOptionId: 1,\n    }));\n  };\n\n  resetFocusedOption = () => {\n    this.setState(() => ({\n      hoveredOptionId: -1,\n    }));\n  };\n\n  switchByKey = (event: React.KeyboardEvent) => {\n    if (\n      event.key !== \"Enter\" &&\n      event.key !== \"Spacebar\" &&\n      event.key !== \" \"\n    ) {\n      return;\n    }\n    event.preventDefault();\n\n    const { options } = this.props;\n    const { activeValue } = this.state;\n    const value = options.find((option) => option.value !== activeValue)?.value;\n\n    if (value !== undefined) {\n      this.onSwitch(value);\n    }\n\n    if (options[0].value === value) {\n      this.firstButton.current?.focus();\n    } else {\n      this.secondButton.current?.focus();\n    }\n  };\n\n  static getDerivedStateFromProps(\n    nextProps: SliderSwitchProps,\n    prevState: SliderSwitchState\n  ) {\n    if (\n      nextProps.activeValue &&\n      nextProps.activeValue !== prevState.activeValue\n    ) {\n      return {\n        activeValue: nextProps.activeValue,\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount(): void {\n    if (process.env.NODE_ENV === \"development\") {\n      warn(\n        \"Этот компонент устарел и будет удален в 5.0.0. Используйте SegmentedControl.\"\n      );\n    }\n  }\n\n  public render() {\n    const {\n      name,\n      options,\n      activeValue: _activeValue,\n      onSwitch,\n      ...restProps\n    } = this.props;\n    const { activeValue, hoveredOptionId } = this.state;\n\n    const [firstOption, secondOption] = options;\n    const firstActive = firstOption.value === activeValue;\n    const secondActive = secondOption.value === activeValue;\n\n    return (\n      <div\n        {...restProps}\n        vkuiClass=\"SliderSwitch\"\n        onKeyDown={this.switchByKey}\n        onMouseLeave={this.resetFocusedOption}\n      >\n        {!firstActive && !secondActive && (\n          <div vkuiClass=\"SliderSwitch__border\" />\n        )}\n        <div\n          vkuiClass={classNames(\n            \"SliderSwitch__slider\",\n            firstActive && \"SliderSwitch--firstActive\",\n            secondActive && \"SliderSwitch--secondActive\"\n          )}\n        />\n        <input type=\"hidden\" name={name} value={activeValue} />\n        <SliderSwitchButton\n          active={firstActive}\n          hovered={hoveredOptionId === 0}\n          aria-pressed={firstActive}\n          onClick={this.handleFirstClick}\n          onMouseEnter={this.handleFirstHover}\n          getRootRef={this.firstButton}\n        >\n          {firstOption.name}\n        </SliderSwitchButton>\n        <SliderSwitchButton\n          active={secondActive}\n          hovered={hoveredOptionId === 1}\n          onClick={this.handleSecondClick}\n          onMouseEnter={this.handleSecondHover}\n          getRootRef={this.secondButton}\n        >\n          {secondOption.name}\n        </SliderSwitchButton>\n      </div>\n    );\n  }\n}\n\nexport { SliderSwitch };\n"],"mappings":"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"}