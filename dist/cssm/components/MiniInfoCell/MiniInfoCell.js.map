{"version":3,"file":"MiniInfoCell.js","names":["React","classNames","Paragraph","Tappable","hasReactNode","MiniInfoCell","before","after","mode","textWrap","textLevel","children","restProps","cellClasses","cellContent","undefined","onClick"],"sources":["../../../../src/components/MiniInfoCell/MiniInfoCell.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { Paragraph } from \"../Typography/Paragraph/Paragraph\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport \"./MiniInfoCell.css\";\n\nexport interface MiniInfoCellProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Иконка слева.<br />\n   * Рекомендуется использовать иконки размера 20.\n   */\n  before: React.ReactNode;\n\n  /**\n   * Содержимое справа.<br />\n   * `<UsersStack size=\"s\" />` или `<Avatar size={24} />`\n   */\n  after?: React.ReactNode;\n\n  /**\n   * Тип ячейки:\n   *\n   * - `base` – базовая ячейка с серой иконкой и серым текстом.<br />\n   * В компонент можно передать `Link`, чтобы визуально сделать часть текста ссылкой.\n   * - `add` – тип ячейки, который показывает, что взаимодействие с ней должно вызывать действие добавления чего-то.\n   * - `more` – взаимодействие с такой ячейкой должно открывать какую-то подробную информацию.\n   */\n  mode?: \"base\" | \"add\" | \"more\";\n\n  /**\n   * Тип отображения текста:\n   *\n   * - `nowrap` – в одну строку, текст не переносится и обрезается.\n   * - `short` – максимально отображается 3 строки, остальное обрезается.\n   * - `full` – текст отображается полностью.\n   */\n  textWrap?: \"nowrap\" | \"short\" | \"full\";\n\n  /**\n   * Стиль текста:\n   *\n   * - `primary` – используйте этот стиль, если хотите выделить информацию в общем списке.<br />Пример использования: подробная информация на странице сообщества\n   * - `secondary` – стиль по-умолчанию.\n   */\n  textLevel?: \"primary\" | \"secondary\";\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/MiniInfoCell\n */\nexport const MiniInfoCell = ({\n  before,\n  after,\n  mode = \"base\",\n  textWrap = \"nowrap\",\n  textLevel = \"secondary\",\n  children,\n  ...restProps\n}: MiniInfoCellProps) => {\n  const cellClasses = classNames(\n    \"MiniInfoCell\",\n    mode !== \"base\" && `MiniInfoCell--md-${mode}`,\n    textWrap !== \"nowrap\" && `MiniInfoCell--wr-${textWrap}`,\n    `MiniInfoCell--lvl-${textLevel}`\n  );\n\n  const cellContent = (\n    <React.Fragment>\n      <span vkuiClass=\"MiniInfoCell__icon\">{before}</span>\n      <Paragraph\n        vkuiClass=\"MiniInfoCell__content\"\n        weight={mode === \"more\" ? \"2\" : undefined}\n      >\n        {children}\n      </Paragraph>\n      {hasReactNode(after) && (\n        <span vkuiClass=\"MiniInfoCell__after\">{after}</span>\n      )}\n    </React.Fragment>\n  );\n\n  return restProps.onClick ? (\n    <Tappable\n      Component=\"div\"\n      role=\"button\"\n      {...restProps}\n      vkuiClass={cellClasses}\n    >\n      {cellContent}\n    </Tappable>\n  ) : (\n    <div {...restProps} vkuiClass={cellClasses}>\n      {cellContent}\n    </div>\n  );\n};\n"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU;AACnB,SAASC,SAAS;AAClB,SAASC,QAAQ;AACjB,SAASC,YAAY;AACrB;AA4CA;AACA;AACA;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAQA;EAAA,IAPvBC,MAAM,QAANA,MAAM;IACNC,KAAK,QAALA,KAAK;IAAA,iBACLC,IAAI;IAAJA,IAAI,0BAAG,MAAM;IAAA,qBACbC,QAAQ;IAARA,QAAQ,8BAAG,QAAQ;IAAA,sBACnBC,SAAS;IAATA,SAAS,+BAAG,WAAW;IACvBC,QAAQ,QAARA,QAAQ;IACLC,SAAS;EAEZ,IAAMC,WAAW,GAAGZ,UAAU,CAC5B,cAAc,EACdO,IAAI,KAAK,MAAM,+BAAwBA,IAAI,CAAE,EAC7CC,QAAQ,KAAK,QAAQ,+BAAwBA,QAAQ,CAAE,8BAClCC,SAAS,EAC/B;EAED,IAAMI,WAAW,GACf,oBAAC,KAAK,CAAC,QAAQ,QACb;IAAM,SAAS,EAAC;EAAoB,GAAER,MAAM,CAAQ,EACpD,oBAAC,SAAS;IACR,SAAS,EAAC,uBAAuB;IACjC,MAAM,EAAEE,IAAI,KAAK,MAAM,GAAG,GAAG,GAAGO;EAAU,GAEzCJ,QAAQ,CACC,EACXP,YAAY,CAACG,KAAK,CAAC,IAClB;IAAM,SAAS,EAAC;EAAqB,GAAEA,KAAK,CAC7C,CAEJ;EAED,OAAOK,SAAS,CAACI,OAAO,GACtB,oBAAC,QAAQ;IACP,SAAS,EAAC,KAAK;IACf,IAAI,EAAC;EAAQ,GACTJ,SAAS;IACb,SAAS,EAAEC;EAAY,IAEtBC,WAAW,CACH,GAEX,wCAASF,SAAS;IAAE,SAAS,EAAEC;EAAY,IACxCC,WAAW,CAEf;AACH,CAAC"}