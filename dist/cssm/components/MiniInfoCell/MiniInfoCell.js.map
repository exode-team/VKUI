{"version":3,"sources":["../../../../src/components/MiniInfoCell/MiniInfoCell.tsx"],"names":["React","classNames","Paragraph","Tappable","hasReactNode","MiniInfoCell","before","after","mode","textWrap","textLevel","children","restProps","cellClasses","cellContent","undefined","onClick"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT;AACA,SAASC,SAAT;AACA,SAASC,QAAT;AACA,SAASC,YAAT;AACA;;AA4CA;AACA;AACA;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAQH;AAAA,MAPvBC,MAOuB,QAPvBA,MAOuB;AAAA,MANvBC,KAMuB,QANvBA,KAMuB;AAAA,uBALvBC,IAKuB;AAAA,MALvBA,IAKuB,0BALhB,MAKgB;AAAA,2BAJvBC,QAIuB;AAAA,MAJvBA,QAIuB,8BAJZ,QAIY;AAAA,4BAHvBC,SAGuB;AAAA,MAHvBA,SAGuB,+BAHX,WAGW;AAAA,MAFvBC,QAEuB,QAFvBA,QAEuB;AAAA,MADpBC,SACoB;;AACvB,MAAMC,WAAW,GAAGZ,UAAU,CAC5B,cAD4B,EAE5BO,IAAI,KAAK,MAAT,+BAAuCA,IAAvC,CAF4B,EAG5BC,QAAQ,KAAK,QAAb,+BAA6CA,QAA7C,CAH4B,8BAIPC,SAJO,EAA9B;AAOA,MAAMI,WAAW,GACf,oBAAC,KAAD,CAAO,QAAP,QACE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAsCR,MAAtC,CADF,EAEE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,MAAM,EAAEE,IAAI,KAAK,MAAT,GAAkB,GAAlB,GAAwBO;AAFlC,KAIGJ,QAJH,CAFF,EAQGP,YAAY,CAACG,KAAD,CAAZ,IACC;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAuCA,KAAvC,CATJ,CADF;AAeA,SAAOK,SAAS,CAACI,OAAV,GACL,oBAAC,QAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,IAAI,EAAC;AAFP,KAGMJ,SAHN;AAIE,IAAA,SAAS,EAAEC;AAJb,MAMGC,WANH,CADK,GAUL,wCAASF,SAAT;AAAoB,IAAA,SAAS,EAAEC;AAA/B,MACGC,WADH,CAVF;AAcD,CA7CM","sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { Paragraph } from \"../Typography/Paragraph/Paragraph\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport \"./MiniInfoCell.css\";\n\nexport interface MiniInfoCellProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Иконка слева.<br />\n   * Рекомендуется использовать иконки размера 20.\n   */\n  before: React.ReactNode;\n\n  /**\n   * Содержимое справа.<br />\n   * `<UsersStack size=\"s\" />` или `<Avatar size={24} />`\n   */\n  after?: React.ReactNode;\n\n  /**\n   * Тип ячейки:\n   *\n   * - `base` – базовая ячейка с серой иконкой и серым текстом.<br />\n   * В компонент можно передать `Link`, чтобы визуально сделать часть текста ссылкой.\n   * - `add` – тип ячейки, который показывает, что взаимодействие с ней должно вызывать действие добавления чего-то.\n   * - `more` – взаимодействие с такой ячейкой должно открывать какую-то подробную информацию.\n   */\n  mode?: \"base\" | \"add\" | \"more\";\n\n  /**\n   * Тип отображения текста:\n   *\n   * - `nowrap` – в одну строку, текст не переносится и обрезается.\n   * - `short` – максимально отображается 3 строки, остальное обрезается.\n   * - `full` – текст отображается полностью.\n   */\n  textWrap?: \"nowrap\" | \"short\" | \"full\";\n\n  /**\n   * Стиль текста:\n   *\n   * - `primary` – используйте этот стиль, если хотите выделить информацию в общем списке.<br />Пример использования: подробная информация на странице сообщества\n   * - `secondary` – стиль по-умолчанию.\n   */\n  textLevel?: \"primary\" | \"secondary\";\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/MiniInfoCell\n */\nexport const MiniInfoCell = ({\n  before,\n  after,\n  mode = \"base\",\n  textWrap = \"nowrap\",\n  textLevel = \"secondary\",\n  children,\n  ...restProps\n}: MiniInfoCellProps) => {\n  const cellClasses = classNames(\n    \"MiniInfoCell\",\n    mode !== \"base\" && `MiniInfoCell--md-${mode}`,\n    textWrap !== \"nowrap\" && `MiniInfoCell--wr-${textWrap}`,\n    `MiniInfoCell--lvl-${textLevel}`\n  );\n\n  const cellContent = (\n    <React.Fragment>\n      <span vkuiClass=\"MiniInfoCell__icon\">{before}</span>\n      <Paragraph\n        vkuiClass=\"MiniInfoCell__content\"\n        weight={mode === \"more\" ? \"2\" : undefined}\n      >\n        {children}\n      </Paragraph>\n      {hasReactNode(after) && (\n        <span vkuiClass=\"MiniInfoCell__after\">{after}</span>\n      )}\n    </React.Fragment>\n  );\n\n  return restProps.onClick ? (\n    <Tappable\n      Component=\"div\"\n      role=\"button\"\n      {...restProps}\n      vkuiClass={cellClasses}\n    >\n      {cellContent}\n    </Tappable>\n  ) : (\n    <div {...restProps} vkuiClass={cellClasses}>\n      {cellContent}\n    </div>\n  );\n};\n"],"file":"MiniInfoCell.js"}