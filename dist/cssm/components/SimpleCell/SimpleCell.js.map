{"version":3,"sources":["../../../../src/components/SimpleCell/SimpleCell.tsx"],"names":["classNames","getClassName","Tappable","Icon24Chevron","IOS","usePlatform","hasReactNode","useAdaptivity","withAdaptivity","SizeType","Subhead","Headline","Footnote","Caption","SubtitleTypography","props","sizeY","COMPACT","SimpleCellComponent","badge","badgeBeforeTitle","badgeAfterTitle","badgeBeforeSubtitle","badgeAfterSubtitle","before","indicator","children","after","description","expandable","multiline","subhead","subtitle","extraSubtitle","restProps","platform","hasAfter","SimpleCell","displayName"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { HasComponent } from \"../../types\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { TappableProps, Tappable } from \"../Tappable/Tappable\";\nimport { Icon24Chevron } from \"@vkontakte/icons\";\nimport { IOS } from \"../../lib/platform\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { withAdaptivity, SizeType } from \"../../hoc/withAdaptivity\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nimport { Headline } from \"../Typography/Headline/Headline\";\nimport { Footnote } from \"../Typography/Footnote/Footnote\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport \"./SimpleCell.css\";\n\nexport interface SimpleCellOwnProps extends HasComponent {\n  /**\n   * Иконка 28 или `<Avatar size={28|32|40|48|72} />`\n   */\n  before?: React.ReactNode;\n  /**\n   * @deprecated будет удалено в v5.0.0, используйте свойство rightBadge\n   * Иконка 12 или `<Badge />`. Добавится справа от текста `children`.\n   */\n  badge?: React.ReactNode;\n  /**\n   * Иконка 12 или `<Badge />`. Добавится слева от текста `children`.\n   */\n  badgeBeforeTitle?: React.ReactNode;\n  /**\n   * Иконка 12 или `<Badge />`. Добавится справа от текста `children`.\n   */\n  badgeAfterTitle?: React.ReactNode;\n  /**\n   * Иконка 12. Добавится слева от текста `subtitle`.\n   */\n  badgeBeforeSubtitle?: React.ReactNode;\n  /**\n   * Иконка 12. Добавится справа от текста `subtitle`.\n   */\n  badgeAfterSubtitle?: React.ReactNode;\n  /**\n   * Контейнер для текста справа от `children`.\n   */\n  indicator?: React.ReactNode;\n  /**\n   * Дополнительная строка текста над `children`.\n   */\n  subhead?: React.ReactNode;\n  /**\n   * Дополнительная строка текста под `children`.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Дополнительная строка текста под `children` и `subtitle`.\n   */\n  extraSubtitle?: React.ReactNode;\n  /**\n   * Иконка 24|28 или `<Switch />`. Располагается справа от `indicator`.\n   */\n  after?: React.ReactNode;\n  /**\n   * @deprecated будет удалено в v5.0.0, используйте свойство subtitle\n   * Контейнер для текста под `children`.\n   */\n  description?: React.ReactNode;\n  /**\n   * Убирает анимацию нажатия\n   */\n  disabled?: boolean;\n  /**\n   * В iOS добавляет chevron справа. Передавать `true`, если предполагается переход при клике по ячейке.\n   */\n  expandable?: boolean;\n  /**\n   * Включает многострочный режим для отображения текста\n   */\n  multiline?: boolean;\n}\n\nexport interface SimpleCellProps extends SimpleCellOwnProps, TappableProps {}\n\ntype SubtitleTypographyProps = React.HTMLAttributes<HTMLDivElement> &\n  HasComponent;\n\nconst SubtitleTypography = (props: SubtitleTypographyProps) => {\n  const { sizeY } = useAdaptivity();\n\n  if (sizeY === SizeType.COMPACT) {\n    return <Caption level=\"2\" {...props} />;\n  }\n\n  return <Footnote {...props} />;\n};\n\nconst SimpleCellComponent = ({\n  badge,\n  badgeBeforeTitle,\n  badgeAfterTitle = badge,\n  badgeBeforeSubtitle,\n  badgeAfterSubtitle,\n  before,\n  indicator,\n  children,\n  after,\n  description,\n  expandable,\n  multiline,\n  sizeY,\n  subhead,\n  subtitle = description,\n  extraSubtitle,\n  ...restProps\n}: SimpleCellProps) => {\n  const platform = usePlatform();\n  const hasAfter = hasReactNode(after) || (expandable && platform === IOS);\n\n  return (\n    <Tappable\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName(\"SimpleCell\", platform),\n        expandable && \"SimpleCell--exp\",\n        multiline && \"SimpleCell--mult\",\n        `SimpleCell--sizeY-${sizeY}`\n      )}\n    >\n      {before}\n      <div vkuiClass=\"SimpleCell__main\">\n        {subhead && (\n          <Subhead\n            Component=\"span\"\n            vkuiClass=\"SimpleCell__text SimpleCell__subhead\"\n          >\n            {subhead}\n          </Subhead>\n        )}\n        <div vkuiClass=\"SimpleCell__content\">\n          {badgeBeforeTitle && (\n            <span vkuiClass=\"SimpleCell__badge\">{badgeBeforeTitle}</span>\n          )}\n          <Headline\n            Component=\"span\"\n            vkuiClass=\"SimpleCell__children\"\n            weight=\"3\"\n          >\n            {children}\n          </Headline>\n          {hasReactNode(badgeAfterTitle) && (\n            <span vkuiClass=\"SimpleCell__badge\">{badgeAfterTitle}</span>\n          )}\n        </div>\n        {subtitle && (\n          <div vkuiClass=\"SimpleCell__content\">\n            {badgeBeforeSubtitle && (\n              <span vkuiClass=\"SimpleCell__badge\">{badgeBeforeSubtitle}</span>\n            )}\n            <SubtitleTypography vkuiClass=\"SimpleCell__text SimpleCell__subtitle\">\n              {subtitle}\n            </SubtitleTypography>\n            {badgeAfterSubtitle && (\n              <span vkuiClass=\"SimpleCell__badge\">{badgeAfterSubtitle}</span>\n            )}\n          </div>\n        )}\n        {extraSubtitle && (\n          <SubtitleTypography vkuiClass=\"SimpleCell__text SimpleCell__extraSubtitle\">\n            {extraSubtitle}\n          </SubtitleTypography>\n        )}\n      </div>\n      {hasReactNode(indicator) && (\n        <Headline Component=\"span\" weight=\"3\" vkuiClass=\"SimpleCell__indicator\">\n          {indicator}\n        </Headline>\n      )}\n      {hasAfter && (\n        <div vkuiClass=\"SimpleCell__after\">\n          {after}\n          {expandable && platform === IOS && <Icon24Chevron />}\n        </div>\n      )}\n    </Tappable>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SimpleCell\n */\nexport const SimpleCell = withAdaptivity(SimpleCellComponent, { sizeY: true });\n\nSimpleCell.displayName = \"SimpleCell\";\n"],"file":"SimpleCell.js"}