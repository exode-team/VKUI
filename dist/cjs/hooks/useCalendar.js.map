{"version":3,"sources":["../../../src/hooks/useCalendar.ts"],"names":["useCalendar","value","disablePast","disableFuture","shouldDisableDate","onHeaderChange","onNextMonth","onPrevMonth","React","useState","Array","isArray","Date","viewDate","setViewDate","focusedDay","setFocusedDay","setPrevMonth","useCallback","setNextMonth","handleSetViewDate","isDayFocused","day","Boolean","isDayDisabled","now","disabled","resetSelectedDay","undefined"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  subMonths,\n  addMonths,\n  isSameDay,\n  isBefore,\n  endOfDay,\n  isAfter,\n  startOfDay,\n} from \"../lib/date\";\nimport { CalendarProps } from \"../components/Calendar/Calendar\";\n\nexport interface UseCalendarDependencies\n  extends Pick<\n    CalendarProps,\n    \"onHeaderChange\" | \"onNextMonth\" | \"onPrevMonth\"\n  > {\n  value?: Array<Date | null> | Date;\n  disablePast?: boolean;\n  disableFuture?: boolean;\n  shouldDisableDate?(value: Date): boolean;\n}\n\nexport function useCalendar({\n  value,\n  disablePast,\n  disableFuture,\n  shouldDisableDate,\n  onHeaderChange,\n  onNextMonth,\n  onPrevMonth,\n}: UseCalendarDependencies) {\n  const [viewDate, setViewDate] = React.useState(\n    (Array.isArray(value) ? value[0] : value) ?? new Date()\n  );\n  const [focusedDay, setFocusedDay] = React.useState<Date>();\n\n  const setPrevMonth = React.useCallback(() => {\n    onPrevMonth?.();\n    setViewDate(subMonths(viewDate, 1));\n  }, [viewDate, onPrevMonth]);\n  const setNextMonth = React.useCallback(() => {\n    onNextMonth?.();\n    setViewDate(addMonths(viewDate, 1));\n  }, [viewDate, onNextMonth]);\n\n  const handleSetViewDate = React.useCallback(\n    (value: Date) => {\n      onHeaderChange?.(value);\n      setViewDate(value);\n    },\n    [onHeaderChange]\n  );\n\n  const isDayFocused = React.useCallback(\n    (day: Date) => Boolean(focusedDay && isSameDay(day, focusedDay)),\n    [focusedDay]\n  );\n\n  const isDayDisabled = React.useCallback(\n    (day: Date) => {\n      const now = new Date();\n      let disabled = false;\n      if (disablePast) {\n        disabled = isBefore(endOfDay(day), now);\n      }\n      if (disableFuture) {\n        disabled = isAfter(startOfDay(day), now);\n      }\n      if (shouldDisableDate) {\n        disabled = shouldDisableDate(day);\n      }\n\n      return disabled;\n    },\n    [disableFuture, disablePast, shouldDisableDate]\n  );\n\n  const resetSelectedDay = React.useCallback(() => {\n    setFocusedDay(undefined);\n  }, [setFocusedDay]);\n\n  return {\n    viewDate,\n    setViewDate: handleSetViewDate,\n    setPrevMonth,\n    setNextMonth,\n    focusedDay,\n    setFocusedDay,\n    isDayFocused,\n    isDayDisabled,\n    resetSelectedDay,\n  };\n}\n"],"file":"useCalendar.js"}