{"version":3,"sources":["../../../src/hooks/useTodayDate.ts"],"names":["useTodayDate","listenDayChangesForUpdate","React","useState","Date","todayDate","setTodayDate","useEffect","timeToDayChange","timeout","setTimeout","clearTimeout"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,YAAT,GAAyD;AAAA,MAAnCC,yBAAmC,uEAAP,KAAO;;AAC9D,wBAAkCC,eAAMC,QAAN,CAAe;AAAA,WAAM,IAAIC,IAAJ,EAAN;AAAA,GAAf,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAEAJ,iBAAMK,SAAN,CAAgB,YAAM;AACpB,QAAI,CAACN,yBAAL,EAAgC;AAC9B;AACD;;AAED,QAAMO,eAAe,GAAG,qCAA0BH,SAA1B,CAAxB;AAEA,QAAMI,OAAO,GAAGC,UAAU,CAAC,YAAM;AAC/BJ,MAAAA,YAAY,CAAC,IAAIF,IAAJ,EAAD,CAAZ;AACD,KAFyB,EAEvBI,eAFuB,CAA1B;AAIA,WAAO,YAAM;AACXG,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACD,KAFD;AAGD,GAdD,EAcG,CAACR,yBAAD,EAA4BI,SAA5B,CAdH;;AAgBA,SAAOA,SAAP;AACD","sourcesContent":["import React from \"react\";\n\nimport { getMillisecondsToTomorrow } from \"../lib/date\";\n\n/**\n * Опционально обновляемая дата сегодняшнего дня\n *\n * Дата - сегодня (в соответствии с системным временем)\n *\n * Часы, минуты, секунды, миллисекунды - произвольные\n *\n * @param listenDayChangesForUpdate - флаг по которому определяется, будет ли создаваться подписка на смену календарного дня\n */\nexport function useTodayDate(listenDayChangesForUpdate = false) {\n  const [todayDate, setTodayDate] = React.useState(() => new Date());\n\n  React.useEffect(() => {\n    if (!listenDayChangesForUpdate) {\n      return;\n    }\n\n    const timeToDayChange = getMillisecondsToTomorrow(todayDate);\n\n    const timeout = setTimeout(() => {\n      setTodayDate(new Date());\n    }, timeToDayChange);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [listenDayChangesForUpdate, todayDate]);\n\n  return todayDate;\n}\n"],"file":"useTodayDate.js"}