{"version":3,"sources":["../../../src/hooks/useBridgeAdaptivity.ts"],"names":["initialState","type","viewportWidth","viewportHeight","resolveAdaptivity","e","detail","data","adaptivity","viewport_width","viewport_height","bridgeAdaptivity","isFinite","vkBridge","subscribe","useBridgeAdaptivity","React","useState","setBridgeAdaptivity","bridgeListener","newBridgeAdaptivity","unsubscribe"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAiBA,IAAIA,YAA8B,GAAG;AACnCC,EAAAA,IAAI,EAAE,EAD6B;AAEnCC,EAAAA,aAAa,EAAE,CAFoB;AAGnCC,EAAAA,cAAc,EAAE;AAHmB,CAArC;;AAMA,SAASC,iBAAT,CAA2BC,CAA3B,EAAoE;AAClE,kBAAuBA,CAAC,CAACC,MAAzB;AAAA,MAAQL,IAAR,aAAQA,IAAR;AAAA,MAAcM,IAAd,aAAcA,IAAd;;AAEA,MAAIN,IAAI,KAAK,sBAAT,IAAmC,CAACM,IAAxC,EAA8C;AAC5C,WAAO,IAAP;AACD;;AAED,MACEC,UADF,GAIID,IAJJ,CACEC,UADF;AAAA,MAEkBN,aAFlB,GAIIK,IAJJ,CAEEE,cAFF;AAAA,MAGmBN,cAHnB,GAIII,IAJJ,CAGEG,eAHF;AAMA,MAAMC,gBAAkC,GAAG;AACzCV,IAAAA,IAAI,EAAE,EADmC;AAEzCC,IAAAA,aAAa,EAAEU,QAAQ,CAACV,aAAD,CAAR,GAA0B,CAACA,aAA3B,GAA2C,CAFjB;AAGzCC,IAAAA,cAAc,EAAES,QAAQ,CAACT,cAAD,CAAR,GAA2B,CAACA,cAA5B,GAA6C;AAHpB,GAA3C;;AAMA,UAAQK,UAAR;AACE,SAAK,cAAL;AACA,SAAK,sBAAL;AACA,SAAK,UAAL;AACEG,MAAAA,gBAAgB,CAACV,IAAjB,GAAwBO,UAAxB;AAJJ;;AAOA,SAAOG,gBAAP;AACD;;AAEDE,kBAASC,SAAT,CAAmB,UAACT,CAAD,EAAoB;AACrC,MAAMM,gBAAgB,GAAGP,iBAAiB,CAACC,CAAD,CAA1C;;AAEA,MAAIM,gBAAJ,EAAsB;AACpBX,IAAAA,YAAY,GAAGW,gBAAf;AACD;AACF,CAND;;AAQO,SAASI,mBAAT,GAAiD;AACtD,wBACEC,KAAK,CAACC,QAAN,CAAiCjB,YAAjC,CADF;AAAA;AAAA,MAAOW,gBAAP;AAAA,MAAyBO,mBAAzB;;AAGA,4DAA0B,YAAM;AAC9B,aAASC,cAAT,CAAwBd,CAAxB,EAAwC;AACtC,UAAMe,mBAAmB,GAAGhB,iBAAiB,CAACC,CAAD,CAA7C;;AAEA,UAAIe,mBAAJ,EAAyB;AACvBF,QAAAA,mBAAmB,CAACE,mBAAD,CAAnB;AACD;AACF;;AAEDP,sBAASC,SAAT,CAAmBK,cAAnB;;AACA,WAAO,YAAM;AACXN,wBAASQ,WAAT,CAAqBF,cAArB;AACD,KAFD;AAGD,GAbD,EAaG,EAbH;AAeA,SAAOR,gBAAP;AACD","sourcesContent":["import * as React from \"react\";\nimport vkBridge from \"@vkontakte/vk-bridge\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\n\nexport interface BridgeAdaptivity {\n  type: \"\" | \"force_mobile\" | \"force_mobile_compact\" | \"adaptive\";\n  viewportWidth: number;\n  viewportHeight: number;\n}\n\ninterface BridgeEvent {\n  detail: {\n    type: string;\n    data: {\n      [index: string]: any;\n    };\n  };\n}\n\nlet initialState: BridgeAdaptivity = {\n  type: \"\",\n  viewportWidth: 0,\n  viewportHeight: 0,\n};\n\nfunction resolveAdaptivity(e: BridgeEvent): BridgeAdaptivity | null {\n  const { type, data } = e.detail;\n\n  if (type !== \"VKWebAppUpdateConfig\" || !data) {\n    return null;\n  }\n\n  const {\n    adaptivity,\n    viewport_width: viewportWidth,\n    viewport_height: viewportHeight,\n  } = data;\n\n  const bridgeAdaptivity: BridgeAdaptivity = {\n    type: \"\",\n    viewportWidth: isFinite(viewportWidth) ? +viewportWidth : 0,\n    viewportHeight: isFinite(viewportHeight) ? +viewportHeight : 0,\n  };\n\n  switch (adaptivity) {\n    case \"force_mobile\":\n    case \"force_mobile_compact\":\n    case \"adaptive\":\n      bridgeAdaptivity.type = adaptivity;\n  }\n\n  return bridgeAdaptivity;\n}\n\nvkBridge.subscribe((e: BridgeEvent) => {\n  const bridgeAdaptivity = resolveAdaptivity(e);\n\n  if (bridgeAdaptivity) {\n    initialState = bridgeAdaptivity;\n  }\n});\n\nexport function useBridgeAdaptivity(): BridgeAdaptivity {\n  const [bridgeAdaptivity, setBridgeAdaptivity] =\n    React.useState<BridgeAdaptivity>(initialState);\n\n  useIsomorphicLayoutEffect(() => {\n    function bridgeListener(e: BridgeEvent) {\n      const newBridgeAdaptivity = resolveAdaptivity(e);\n\n      if (newBridgeAdaptivity) {\n        setBridgeAdaptivity(newBridgeAdaptivity);\n      }\n    }\n\n    vkBridge.subscribe(bridgeListener);\n    return () => {\n      vkBridge.unsubscribe(bridgeListener);\n    };\n  }, []);\n\n  return bridgeAdaptivity;\n}\n"],"file":"useBridgeAdaptivity.js"}