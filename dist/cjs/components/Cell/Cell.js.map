{"version":3,"file":"Cell.js","names":["warn","warnOnce","Cell","propsMode","mode","onRemove","noop","removePlaceholder","onDragFinish","before","after","disabled","deprecatedRemovable","removable","draggable","deprecatedSelectable","selectable","Component","onChange","name","value","checked","defaultChecked","getRootRef","draggerLabel","className","style","restProps","process","env","NODE_ENV","platform","usePlatform","rootElRef","useExternRef","useDraggable","dragging","draggableProps","React","useContext","ListContext","toggleDrag","useEffect","undefined","dragger","checkbox","checkboxProps","simpleCellDisabled","hasActive","cellClasses","classNames","IOS","simpleCell","e","current"],"sources":["../../../../src/components/Cell/Cell.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { noop } from \"../../lib/utils\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { IOS } from \"../../lib/platform\";\nimport { SimpleCell, SimpleCellProps } from \"../SimpleCell/SimpleCell\";\nimport { HasPlatform, HasRootRef } from \"../../types\";\nimport { Removable, RemovableProps } from \"../Removable/Removable\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useDraggable } from \"./useDraggable\";\nimport { ListContext } from \"../List/ListContext\";\nimport { CellDragger } from \"./CellDragger/CellDragger\";\nimport { CellCheckbox, CellCheckboxProps } from \"./CellCheckbox/CellCheckbox\";\nimport \"./Cell.css\";\n\nexport interface CellProps\n  extends Omit<SimpleCellProps, \"getRootRef\">,\n    HasPlatform,\n    RemovableProps,\n    HasRootRef<HTMLDivElement> {\n  mode?: \"removable\" | \"selectable\";\n  /**\n   * В режиме перетаскивания ячейка перестает быть кликабельной, то есть при клике переданный onClick вызываться не будет\n   */\n  draggable?: boolean;\n  /**\n   * @deprecated Будет удалено в 5.0.0. Используйте mode=\"removable\"\n   */\n  removable?: boolean;\n  /**\n   * Имя для input в режиме selectable\n   */\n  name?: string;\n  /**\n   * @deprecated Будет удалено в 5.0.0. Используйте mode=\"selectable\"\n   */\n  selectable?: boolean;\n  /**\n   * В режиме selectable реагирует на входящие значения пропса checked, как зависящий напрямую от входящего значения\n   */\n  checked?: boolean;\n  /**\n   * В режиме selectable реагирует на входящие значения пропса defaultChecked как неконтролируемый компонент\n   */\n  defaultChecked?: boolean;\n  /**\n   * Коллбэк срабатывает при завершении перетаскивания.\n   * **Важно:** режим перетаскивания не меняет порядок ячеек в DOM. В коллбэке есть объект с полями `from` и `to`.\n   * Эти числа нужны для того, чтобы разработчик понимал, с какого индекса на какой произошел переход. В песочнице\n   * есть рабочий пример с обработкой этих чисел и перерисовкой списка.\n   */\n  onDragFinish?: ({ from, to }: { from: number; to: number }) => void;\n  /**\n   * aria-label для кнопки перетаскивания ячейки\n   */\n  draggerLabel?: string;\n}\n\nconst warn = warnOnce(\"Cell\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Cell\n */\nexport const Cell = ({\n  mode: propsMode, // TODO: убрать переименование в propsMode перед 5.0.0\n  onRemove = noop,\n  removePlaceholder = \"Удалить\",\n  onDragFinish,\n  before,\n  after,\n  disabled,\n  removable: deprecatedRemovable, // TODO: удалить перед 5.0.0\n  draggable,\n  selectable: deprecatedSelectable, // TODO: удалить перед 5.0.0\n  Component,\n  onChange,\n  name,\n  value,\n  checked,\n  defaultChecked,\n  getRootRef,\n  draggerLabel = \"Перенести ячейку\",\n  className,\n  style,\n  ...restProps\n}: CellProps) => {\n  // TODO: удалить перед 5.0.0\n  let mode: CellProps[\"mode\"] = propsMode;\n\n  if (!propsMode && (deprecatedSelectable || deprecatedRemovable)) {\n    mode = deprecatedSelectable ? \"selectable\" : \"removable\";\n\n    if (process.env.NODE_ENV === \"development\") {\n      deprecatedSelectable &&\n        warn(\n          'Свойство selectable устарело и будет удалено в 5.0.0. Используйте mode=\"selectable\".'\n        );\n      deprecatedRemovable &&\n        warn(\n          'Свойство removable устарело и будет удалено в 5.0.0. Используйте mode=\"removable\".'\n        );\n    }\n  }\n  // /end TODO\n\n  const selectable = mode === \"selectable\";\n  const removable = mode === \"removable\";\n\n  const platform = usePlatform();\n\n  const rootElRef = useExternRef(getRootRef);\n\n  const { dragging, ...draggableProps } = useDraggable({\n    rootElRef,\n    onDragFinish,\n  });\n\n  const { toggleDrag } = React.useContext(ListContext);\n  React.useEffect(() => {\n    if (dragging) {\n      toggleDrag(true);\n      return () => toggleDrag(false);\n    }\n    return undefined;\n  }, [dragging, toggleDrag]);\n\n  let dragger;\n  if (draggable) {\n    dragger = (\n      <CellDragger\n        vkuiClass=\"Cell__dragger\"\n        aria-label={draggerLabel}\n        {...draggableProps}\n      />\n    );\n  }\n\n  let checkbox;\n  if (selectable) {\n    const checkboxProps: CellCheckboxProps = {\n      name,\n      value,\n      onChange,\n      defaultChecked,\n      checked,\n      disabled,\n    };\n    checkbox = <CellCheckbox vkuiClass=\"Cell__checkbox\" {...checkboxProps} />;\n  }\n\n  const simpleCellDisabled =\n    (draggable && !selectable) || removable || disabled;\n  const hasActive = !simpleCellDisabled && !dragging;\n\n  const cellClasses = classNames(\n    \"Cell\",\n    platform === IOS && \"Cell--ios\",\n    dragging && \"Cell--dragging\",\n    removable && \"Cell--removable\",\n    selectable && \"Cell--selectable\",\n    disabled && \"Cell--disabled\"\n  );\n\n  const simpleCell = (\n    <SimpleCell\n      hasActive={hasActive}\n      hasHover={hasActive}\n      {...restProps}\n      vkuiClass=\"Cell__content\"\n      disabled={simpleCellDisabled}\n      Component={selectable ? \"label\" : Component}\n      before={\n        <React.Fragment>\n          {draggable && platform !== IOS && dragger}\n          {selectable && checkbox}\n          {before}\n        </React.Fragment>\n      }\n      after={\n        <React.Fragment>\n          {draggable && platform === IOS && dragger}\n          {after}\n        </React.Fragment>\n      }\n    />\n  );\n\n  if (removable) {\n    return (\n      <Removable\n        vkuiClass={cellClasses}\n        className={className}\n        style={style}\n        getRootRef={rootElRef}\n        removePlaceholder={removePlaceholder}\n        onRemove={(e) => onRemove(e, rootElRef.current)}\n      >\n        {simpleCell}\n      </Removable>\n    );\n  }\n\n  return (\n    <div\n      vkuiClass={cellClasses}\n      className={className}\n      style={style}\n      ref={rootElRef}\n    >\n      {simpleCell}\n    </div>\n  );\n};\n"],"mappings":"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"}