{"version":3,"sources":["../../../../src/components/Textarea/Textarea.tsx"],"names":["TextareaComponent","defaultValue","grow","style","onResize","className","getRootRef","getRef","sizeY","rows","maxHeight","status","restProps","value","onChange","currentScrollHeight","React","useRef","elementRef","useEffect","el","current","offsetParent","height","scrollHeight","disabled","Textarea","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;AAeA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,OAaL;AAAA,+BAZnBC,YAYmB;AAAA,MAZnBA,YAYmB,kCAZJ,EAYI;AAAA,uBAXnBC,IAWmB;AAAA,MAXnBA,IAWmB,0BAXZ,IAWY;AAAA,MAVnBC,KAUmB,QAVnBA,KAUmB;AAAA,MATnBC,QASmB,QATnBA,QASmB;AAAA,MARnBC,SAQmB,QARnBA,SAQmB;AAAA,MAPnBC,UAOmB,QAPnBA,UAOmB;AAAA,MANnBC,MAMmB,QANnBA,MAMmB;AAAA,MALnBC,KAKmB,QALnBA,KAKmB;AAAA,uBAJnBC,IAImB;AAAA,MAJnBA,IAImB,0BAJZ,CAIY;AAAA,MAHnBC,SAGmB,QAHnBA,SAGmB;AAAA,MAFnBC,MAEmB,QAFnBA,MAEmB;AAAA,MADhBC,SACgB;;AACnB,2BAA0B,2CAAkBA,SAAlB,EAA6B;AAAEX,IAAAA,YAAY,EAAZA;AAAF,GAA7B,CAA1B;AAAA;AAAA,MAAOY,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,mBAAmB,GAAGC,KAAK,CAACC,MAAN,EAA5B;AACA,MAAMC,UAAU,GAAG,gCAAaX,MAAb,CAAnB,CAHmB,CAKnB;;AACAS,EAAAA,KAAK,CAACG,SAAN,CAAgB,YAAM;AACpB,QAAMC,EAAE,GAAGF,UAAU,CAACG,OAAtB;;AAEA,QAAInB,IAAI,IAAIkB,EAAJ,aAAIA,EAAJ,eAAIA,EAAE,CAAEE,YAAhB,EAA8B;AAC5BF,MAAAA,EAAE,CAACjB,KAAH,CAASoB,MAAT,GAAkB,EAAlB;AACAH,MAAAA,EAAE,CAACjB,KAAH,CAASoB,MAAT,aAAqBH,EAAE,CAACI,YAAxB;;AAEA,UAAIJ,EAAE,CAACI,YAAH,KAAoBT,mBAAmB,CAACM,OAAxC,IAAmDjB,QAAvD,EAAiE;AAC/DA,QAAAA,QAAQ,CAACgB,EAAD,CAAR;AACAL,QAAAA,mBAAmB,CAACM,OAApB,GAA8BD,EAAE,CAACI,YAAjC;AACD;AACF;AACF,GAZD,EAYG,CAACtB,IAAD,EAAOW,KAAP,EAAcL,KAAd,EAAqBU,UAArB,EAAiCd,QAAjC,CAZH;AAcA,SACE,qCAAC,oBAAD;AACE,IAAA,SAAS,EAAE,4BACT,UADS,EAET;AAFS,8BAGUI,KAHV,EADb;AAME,IAAA,SAAS,EAAEH,SANb;AAOE,IAAA,KAAK,EAAEF,KAPT;AAQE,IAAA,UAAU,EAAEG,UARd;AASE,IAAA,QAAQ,EAAEM,SAAS,CAACa,QATtB;AAUE,IAAA,MAAM,EAAEd;AAVV,KAYE,4EACMC,SADN;AAEE,IAAA,KAAK,EAAE;AAAEF,MAAAA,SAAS,EAATA;AAAF,KAFT;AAGE,IAAA,IAAI,EAAED,IAHR;AAIE,IAAA,SAAS,EAAC,cAJZ;AAKE,IAAA,KAAK,EAAEI,KALT;AAME,IAAA,QAAQ,EAAEC,QANZ;AAOE,IAAA,GAAG,EAAEI;AAPP,KAZF,CADF;AAwBD,CAzDD;AA2DA;AACA;AACA;;;AACO,IAAMQ,QAAQ,GAAG,oCAAe1B,iBAAf,EAAkC;AAAEQ,EAAAA,KAAK,EAAE;AAAT,CAAlC,CAAjB;;AAEPkB,QAAQ,CAACC,WAAT,GAAuB,UAAvB","sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { FormField, FormFieldProps } from \"../FormField/FormField\";\nimport { HasRef, HasRootRef } from \"../../types\";\nimport { withAdaptivity, AdaptivityProps } from \"../../hoc/withAdaptivity\";\nimport { useEnsuredControl } from \"../../hooks/useEnsuredControl\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport \"./Textarea.css\";\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HasRef<HTMLTextAreaElement>,\n    HasRootRef<HTMLElement>,\n    AdaptivityProps,\n    Pick<React.CSSProperties, \"maxHeight\">,\n    Pick<FormFieldProps, \"status\"> {\n  grow?: boolean;\n  onResize?(el: HTMLTextAreaElement): void;\n  defaultValue?: string;\n}\n\nconst TextareaComponent = ({\n  defaultValue = \"\",\n  grow = true,\n  style,\n  onResize,\n  className,\n  getRootRef,\n  getRef,\n  sizeY,\n  rows = 2,\n  maxHeight,\n  status,\n  ...restProps\n}: TextareaProps) => {\n  const [value, onChange] = useEnsuredControl(restProps, { defaultValue });\n  const currentScrollHeight = React.useRef<number>();\n  const elementRef = useExternRef(getRef);\n\n  // autosize input\n  React.useEffect(() => {\n    const el = elementRef.current;\n\n    if (grow && el?.offsetParent) {\n      el.style.height = \"\";\n      el.style.height = `${el.scrollHeight}px`;\n\n      if (el.scrollHeight !== currentScrollHeight.current && onResize) {\n        onResize(el);\n        currentScrollHeight.current = el.scrollHeight;\n      }\n    }\n  }, [grow, value, sizeY, elementRef, onResize]);\n\n  return (\n    <FormField\n      vkuiClass={classNames(\n        \"Textarea\",\n        // TODO. v5.0.0 Новая адаптивность\n        `Textarea--sizeY-${sizeY}`\n      )}\n      className={className}\n      style={style}\n      getRootRef={getRootRef}\n      disabled={restProps.disabled}\n      status={status}\n    >\n      <textarea\n        {...restProps}\n        style={{ maxHeight }}\n        rows={rows}\n        vkuiClass=\"Textarea__el\"\n        value={value}\n        onChange={onChange}\n        ref={elementRef}\n      />\n    </FormField>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Textarea\n */\nexport const Textarea = withAdaptivity(TextareaComponent, { sizeY: true });\n\nTextarea.displayName = \"Textarea\";\n"],"file":"Textarea.js"}