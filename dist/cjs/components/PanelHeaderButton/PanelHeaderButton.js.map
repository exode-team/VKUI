{"version":3,"sources":["../../../../src/components/PanelHeaderButton/PanelHeaderButton.tsx"],"names":["ButtonTypography","primary","children","platform","IOS","VKCOM","undefined","warn","PanelHeaderButton","label","restProps","isPrimitive","isPrimitiveLabel","hoverMode","activeMode","ANDROID","process","env","NODE_ENV","hasAccessibleName","Boolean","href"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAYA,IAAMA,gBAAiD,GAAG,SAApDA,gBAAoD,OAG7B;AAAA,MAF3BC,OAE2B,QAF3BA,OAE2B;AAAA,MAD3BC,QAC2B,QAD3BA,QAC2B;AAC3B,MAAMC,QAAQ,GAAG,+BAAjB;;AAEA,MAAIA,QAAQ,KAAKC,aAAjB,EAAsB;AACpB,WACE,qCAAC,YAAD;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAwB,MAAA,KAAK,EAAC,GAA9B;AAAkC,MAAA,MAAM,EAAEH,OAAO,GAAG,GAAH,GAAS;AAA1D,OACGC,QADH,CADF;AAKD;;AAED,SAAO,qCAAC,UAAD;AAAM,IAAA,MAAM,EAAEC,QAAQ,KAAKE,eAAb,GAAqBC,SAArB,GAAiC;AAA/C,KAAqDJ,QAArD,CAAP;AACD,CAfD;;AAiBA,IAAMK,IAAI,GAAG,wBAAS,mBAAT,CAAb;AAEA;AACA;AACA;;AACO,IAAMC,iBAAmD,GAAG,SAAtDA,iBAAsD,QAKrC;AAAA,MAJ5BN,QAI4B,SAJ5BA,QAI4B;AAAA,4BAH5BD,OAG4B;AAAA,MAH5BA,OAG4B,8BAHlB,KAGkB;AAAA,MAF5BQ,KAE4B,SAF5BA,KAE4B;AAAA,MADzBC,SACyB;AAC5B,MAAMC,WAAW,GAAG,iCAAqBT,QAArB,CAApB;AACA,MAAMU,gBAAgB,GAAG,iCAAqBH,KAArB,CAAzB;AACA,MAAMN,QAAQ,GAAG,+BAAjB;AAEA,MAAIU,SAAJ;AACA,MAAIC,UAAJ;;AAEA,UAAQX,QAAR;AACE,SAAKY,iBAAL;AACEF,MAAAA,SAAS,GAAG,YAAZ;AACAC,MAAAA,UAAU,GAAG,YAAb;AACA;;AACF,SAAKV,aAAL;AACES,MAAAA,SAAS,GAAG,YAAZ;AACAC,MAAAA,UAAU,GAAG,SAAb;AACA;;AACF,SAAKT,eAAL;AACEQ,MAAAA,SAAS,GAAG,0BAAZ;AACAC,MAAAA,UAAU,GAAG,2BAAb;AAXJ;;AAcA,MAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,QAAMC,iBAAiB,GAAGC,OAAO,CAC/B,iCAAqBlB,QAArB,KACE,iCAAqBO,KAArB,CADF,IAEEC,SAAS,CAAC,YAAD,CAFX,IAGEA,SAAS,CAAC,iBAAD,CAJoB,CAAjC;;AAOA,QAAI,CAACS,iBAAL,EAAwB;AACtBZ,MAAAA,IAAI,CACF,oMADE,EAEF,OAFE,CAAJ;AAID;AACF;;AAED,SACE,qCAAC,kBAAD,6BACMG,SADN;AAEE,IAAA,SAAS,EAAEG,SAFb;AAGE,IAAA,SAAS,EAAEH,SAAS,CAACW,IAAV,GAAiB,GAAjB,GAAuB,QAHpC;AAIE,IAAA,iBAAiB,EAAE,GAJrB;AAKE,IAAA,UAAU,EAAEP,UALd,CAME;AANF;AAOE,IAAA,SAAS,EAAE,4BAAW,gCAAa,mBAAb,EAAkCX,QAAlC,CAAX,EAAwD;AACjE,oCAA8BF,OADmC;AAEjE,sCAAgCU,WAFiC;AAGjE,yCAAmC,CAACA,WAAD,IAAgB,CAACC;AAHa,KAAxD;AAPb,MAaGD,WAAW,GACV,qCAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEV;AAA3B,KAAqCC,QAArC,CADU,GAGVA,QAhBJ,EAkBGU,gBAAgB,GACf,qCAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEX;AAA3B,KAAqCQ,KAArC,CADe,GAGfA,KArBJ,CADF;AA0BD,CArEM","sourcesContent":["import * as React from \"react\";\nimport { TappableProps, Tappable } from \"../Tappable/Tappable\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getTitleFromChildren, isPrimitiveReactNode } from \"../../lib/utils\";\nimport { IOS, VKCOM, ANDROID } from \"../../lib/platform\";\nimport { Text } from \"../Typography/Text/Text\";\nimport { Title } from \"../Typography/Title/Title\";\nimport \"./PanelHeaderButton.css\";\n\nexport interface PanelHeaderButtonProps extends Omit<TappableProps, \"label\"> {\n  primary?: boolean;\n  label?: React.ReactNode;\n}\n\ninterface ButtonTypographyProps extends React.AllHTMLAttributes<HTMLElement> {\n  primary?: PanelHeaderButtonProps[\"primary\"];\n}\n\nconst ButtonTypography: React.FC<ButtonTypographyProps> = ({\n  primary,\n  children,\n}: ButtonTypographyProps) => {\n  const platform = usePlatform();\n\n  if (platform === IOS) {\n    return (\n      <Title Component=\"span\" level=\"3\" weight={primary ? \"1\" : \"3\"}>\n        {children}\n      </Title>\n    );\n  }\n\n  return <Text weight={platform === VKCOM ? undefined : \"2\"}>{children}</Text>;\n};\n\nconst warn = warnOnce(\"PanelHeaderButton\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton\n */\nexport const PanelHeaderButton: React.FC<PanelHeaderButtonProps> = ({\n  children,\n  primary = false,\n  label,\n  ...restProps\n}: PanelHeaderButtonProps) => {\n  const isPrimitive = isPrimitiveReactNode(children);\n  const isPrimitiveLabel = isPrimitiveReactNode(label);\n  const platform = usePlatform();\n\n  let hoverMode;\n  let activeMode;\n\n  switch (platform) {\n    case ANDROID:\n      hoverMode = \"background\";\n      activeMode = \"background\";\n      break;\n    case IOS:\n      hoverMode = \"background\";\n      activeMode = \"opacity\";\n      break;\n    case VKCOM:\n      hoverMode = \"PanelHeaderButton--hover\";\n      activeMode = \"PanelHeaderButton--active\";\n  }\n\n  if (process.env.NODE_ENV === \"development\") {\n    const hasAccessibleName = Boolean(\n      getTitleFromChildren(children) ||\n        getTitleFromChildren(label) ||\n        restProps[\"aria-label\"] ||\n        restProps[\"aria-labelledby\"]\n    );\n\n    if (!hasAccessibleName) {\n      warn(\n        \"a11y: У кнопки нет названия, которое может прочитать скринридер, и она недоступна для части пользователей. Замените содержимое на текст или добавьте описание действия с помощью пропа aria-label.\",\n        \"error\"\n      );\n    }\n  }\n\n  return (\n    <Tappable\n      {...restProps}\n      hoverMode={hoverMode}\n      Component={restProps.href ? \"a\" : \"button\"}\n      activeEffectDelay={200}\n      activeMode={activeMode}\n      // eslint-disable-next-line vkui/no-object-expression-in-arguments\n      vkuiClass={classNames(getClassName(\"PanelHeaderButton\", platform), {\n        \"PanelHeaderButton--primary\": primary,\n        \"PanelHeaderButton--primitive\": isPrimitive,\n        \"PanelHeaderButton--notPrimitive\": !isPrimitive && !isPrimitiveLabel,\n      })}\n    >\n      {isPrimitive ? (\n        <ButtonTypography primary={primary}>{children}</ButtonTypography>\n      ) : (\n        children\n      )}\n      {isPrimitiveLabel ? (\n        <ButtonTypography primary={primary}>{label}</ButtonTypography>\n      ) : (\n        label\n      )}\n    </Tappable>\n  );\n};\n"],"file":"PanelHeaderButton.js"}