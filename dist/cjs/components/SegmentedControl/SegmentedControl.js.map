{"version":3,"sources":["../../../../src/components/SegmentedControl/SegmentedControl.tsx"],"names":["warn","SegmentedControl","size","name","options","getRootRef","onChange","noop","valueProp","value","defaultValue","children","restProps","sizeY","initialValue","process","env","NODE_ENV","undefined","React","useState","activeOptionIdx","updateActiveOptionIdx","valueLocal","updateValueLocal","nameRef","useRef","_activeOptionIdx","findIndex","option","translateX","handleOnChange","width","length","transform","WebkitTransform","map","label","optionProps","current"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { generateRandomId, noop } from \"../../lib/utils\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { SegmentedControlOption } from \"./SegmentedControlOption/SegmentedControlOption\";\nimport { HasRootRef } from \"../../types\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport \"./SegmentedControl.css\";\n\nexport type SegmentedControlValue = string | number | undefined;\n\nexport interface SegmentedControlOptionInterface\n  extends Omit<React.HTMLAttributes<HTMLElement>, \"label\"> {\n  label: React.ReactChild;\n  value: SegmentedControlValue;\n}\n\nexport interface SegmentedControlProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\">,\n    HasRootRef<HTMLDivElement> {\n  options: SegmentedControlOptionInterface[];\n  size?: \"m\" | \"l\";\n  name?: string;\n  onChange?: (value: SegmentedControlValue) => void;\n  value?: SegmentedControlValue;\n  defaultValue?: SegmentedControlValue;\n}\n\nconst warn = warnOnce(\"SegmentedControl\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SegmentedControl\n */\nexport const SegmentedControl: React.FC<SegmentedControlProps> = ({\n  size = \"l\",\n  name,\n  options,\n  getRootRef,\n  onChange = noop,\n  value: valueProp,\n  defaultValue,\n  children,\n  ...restProps\n}) => {\n  const { sizeY } = useAdaptivity();\n  const initialValue = defaultValue ?? options[0]?.value;\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (valueProp !== undefined && defaultValue !== undefined) {\n      warn(\n        \"SegmentedControl должен быть либо управляемым, либо неуправляемым\" +\n          \"(укажите либо свойство value, либо свойство defaultValue, но не оба).\",\n        \"error\"\n      );\n    }\n  }\n\n  const [activeOptionIdx, updateActiveOptionIdx] = React.useState<number>(0);\n  const [valueLocal, updateValueLocal] =\n    React.useState<SegmentedControlValue>(initialValue);\n\n  const value = valueProp ?? valueLocal;\n\n  const nameRef = React.useRef<string>(name ?? generateRandomId());\n\n  useIsomorphicLayoutEffect(() => {\n    const _activeOptionIdx = options.findIndex(\n      (option) => option.value === value\n    );\n\n    if (_activeOptionIdx === -1 && process.env.NODE_ENV === \"development\") {\n      warn(\"defaultValue: такого значения нет среди опций!\", \"error\");\n    }\n\n    updateActiveOptionIdx(_activeOptionIdx);\n  }, [value, options]);\n\n  const translateX = `translateX(${100 * activeOptionIdx}%)`;\n\n  const handleOnChange = (value: SegmentedControlValue) => {\n    if (valueProp === undefined) {\n      updateValueLocal(value);\n    }\n    onChange(value);\n  };\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\n        \"SegmentedControl\",\n        // TODO v5.0.0 поправить под новую адаптивность\n        `SegmentedControl--sizeY-${sizeY}`,\n        `SegmentedControl--${size}`\n      )}\n      ref={getRootRef}\n    >\n      <div role=\"radiogroup\" vkuiClass=\"SegmentedControl__in\">\n        {activeOptionIdx > -1 && (\n          <div\n            aria-hidden=\"true\"\n            vkuiClass=\"SegmentedControl__slider\"\n            style={{\n              width: `${100 / options.length}%`,\n              transform: translateX,\n              WebkitTransform: translateX,\n            }}\n          />\n        )}\n        {options.map(({ label, ...optionProps }) => (\n          <SegmentedControlOption\n            key={`${optionProps.value}`}\n            {...optionProps}\n            vkuiClass=\"SegmentedControl__option\"\n            name={nameRef.current}\n            checked={value === optionProps.value}\n            onChange={() => handleOnChange(optionProps.value)}\n          >\n            {label}\n          </SegmentedControlOption>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"file":"SegmentedControl.js"}