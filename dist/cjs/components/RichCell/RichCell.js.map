{"version":3,"sources":["../../../../src/components/RichCell/RichCell.tsx"],"names":["RichCellComponent","subhead","children","text","caption","before","after","afterCaption","bottom","actions","multiline","sizeY","restProps","RichCell","displayName"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;;;AAqDA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,OAaL;AAAA,MAZnBC,OAYmB,QAZnBA,OAYmB;AAAA,MAXnBC,QAWmB,QAXnBA,QAWmB;AAAA,MAVnBC,IAUmB,QAVnBA,IAUmB;AAAA,MATnBC,OASmB,QATnBA,OASmB;AAAA,MARnBC,MAQmB,QARnBA,MAQmB;AAAA,MAPnBC,KAOmB,QAPnBA,KAOmB;AAAA,MANnBC,YAMmB,QANnBA,YAMmB;AAAA,MALnBC,MAKmB,QALnBA,MAKmB;AAAA,MAJnBC,OAImB,QAJnBA,OAImB;AAAA,MAHnBC,SAGmB,QAHnBA,SAGmB;AAAA,MAFnBC,KAEmB,QAFnBA,KAEmB;AAAA,MADhBC,SACgB;AACnB,SACE,qCAAC,kBAAD,6BACMA,SADN;AAEE,IAAA,SAAS,EAAE,4BACT,UADS,EAET,CAACF,SAAD,IAAc,yBAFL,4BAGUC,KAHV;AAFb,MAQGN,MAAM,IAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAmCA,MAAnC,CARb,EASE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGJ,OAAO,IACN,qCAAC,gBAAD;AAAS,IAAA,SAAS,EAAC,KAAnB;AAAyB,IAAA,SAAS,EAAC;AAAnC,KACGA,OADH,CAFJ,EAME;AAAK,IAAA,SAAS,EAAC;AAAf,KAAqCC,QAArC,CANF,EAOGC,IAAI,IAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAiCA,IAAjC,CAPX,EAQGC,OAAO,IACN,qCAAC,gBAAD;AAAS,IAAA,SAAS,EAAC,KAAnB;AAAyB,IAAA,SAAS,EAAC;AAAnC,KACGA,OADH,CATJ,CADF,EAeG,CAACE,KAAK,IAAIC,YAAV,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGD,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAA2CA,KAA3C,CADZ,EAEGC,YAAY,IACX;AAAK,IAAA,SAAS,EAAC;AAAf,KAA0CA,YAA1C,CAHJ,CAhBJ,CADF,EAyBGC,MAAM,IAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAmCA,MAAnC,CAzBb,EA0BGC,OAAO,IAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAoCA,OAApC,CA1Bd,CATF,CADF;AAwCD,CAtDD;AAwDA;AACA;AACA;;;AACO,IAAMI,QAAQ,GAAG,oCAAeb,iBAAf,EAAkC;AAAEW,EAAAA,KAAK,EAAE;AAAT,CAAlC,CAAjB;;AAEPE,QAAQ,CAACC,WAAT,GAAuB,UAAvB","sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { TappableProps, Tappable } from \"../Tappable/Tappable\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport \"./RichCell.css\";\n\nexport interface RichCellProps extends TappableProps {\n  /**\n   * Контейнер для текста над `children`.\n   */\n  subhead?: React.ReactNode;\n  /**\n   * Контейнер для текста под `children`.\n   */\n  text?: React.ReactNode;\n  /**\n   * Контейнер для текста под `text`.\n   */\n  caption?: React.ReactNode;\n  /**\n   * Контейнер для контента под `caption`. Например `<UsersStack size=\"s\" />`.\n   */\n  bottom?: React.ReactNode;\n  /**\n   * Кнопки-действия. Принимает [`Button`](https://vkcom.github.io/VKUI/#/Button) с параметрами:\n   *\n   * - `mode=\"primary\" size=\"s\"`\n   * - `mode=\"secondary\" size=\"s\"`\n   *\n   * Для набора кнопок используйте [`ButtonGroup`](https://vkcom.github.io/VKUI/#/ButtonGroup) с параметрами:\n   *\n   * - `mode=\"horizontal\" gap=\"s\" stretched`\n   */\n  actions?: React.ReactNode;\n  /**\n   * `<Avatar size={40|48|72} />`.\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка 24 или текст.\n   */\n  after?: React.ReactNode;\n  /**\n   * Текст под `after`.\n   */\n  afterCaption?: React.ReactNode;\n  /**\n   * Убирает анимацию нажатия.\n   */\n  disabled?: boolean;\n  /**\n   * Включает многострочный режим для `subhead`, `children`, `text` и `caption`.\n   */\n  multiline?: boolean;\n}\n\nconst RichCellComponent = ({\n  subhead,\n  children,\n  text,\n  caption,\n  before,\n  after,\n  afterCaption,\n  bottom,\n  actions,\n  multiline,\n  sizeY,\n  ...restProps\n}: RichCellProps) => {\n  return (\n    <Tappable\n      {...restProps}\n      vkuiClass={classNames(\n        \"RichCell\",\n        !multiline && \"RichCell--text-ellipsis\",\n        `RichCell--sizeY-${sizeY}`\n      )}\n    >\n      {before && <div vkuiClass=\"RichCell__before\">{before}</div>}\n      <div vkuiClass=\"RichCell__in\">\n        <div vkuiClass=\"RichCell__content\">\n          <div vkuiClass=\"RichCell__content-before\">\n            {subhead && (\n              <Subhead Component=\"div\" vkuiClass=\"RichCell__subhead\">\n                {subhead}\n              </Subhead>\n            )}\n            <div vkuiClass=\"RichCell__children\">{children}</div>\n            {text && <div vkuiClass=\"RichCell__text\">{text}</div>}\n            {caption && (\n              <Subhead Component=\"div\" vkuiClass=\"RichCell__caption\">\n                {caption}\n              </Subhead>\n            )}\n          </div>\n          {(after || afterCaption) && (\n            <div vkuiClass=\"RichCell__content-after\">\n              {after && <div vkuiClass=\"RichCell__after-children\">{after}</div>}\n              {afterCaption && (\n                <div vkuiClass=\"RichCell__after-caption\">{afterCaption}</div>\n              )}\n            </div>\n          )}\n        </div>\n        {bottom && <div vkuiClass=\"RichCell__bottom\">{bottom}</div>}\n        {actions && <div vkuiClass=\"RichCell__actions\">{actions}</div>}\n      </div>\n    </Tappable>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/RichCell\n */\nexport const RichCell = withAdaptivity(RichCellComponent, { sizeY: true });\n\nRichCell.displayName = \"RichCell\";\n"],"file":"RichCell.js"}