{"version":3,"file":"FormLayoutGroup.js","names":["FormLayoutGroup","children","mode","removable","segmented","removePlaceholder","onRemove","noop","getRootRef","restProps","platform","usePlatform","useAdaptivity","sizeY","isRemovable","isSegmented","rootEl","useExternRef","classNames","getClassName","e","current"],"sources":["../../../../src/components/FormLayoutGroup/FormLayoutGroup.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { HasRootRef } from \"../../types\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { noop } from \"../../lib/utils\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Removable, RemovableProps } from \"../Removable/Removable\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport \"./FormLayoutGroup.css\";\n\nexport interface FormLayoutGroupProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    RemovableProps,\n    HasRootRef<HTMLDivElement> {\n  mode?: \"vertical\" | \"horizontal\";\n  /**\n   * Только для режима horizontal. Дает возможность удалить всю группу `FormItem`.\n   */\n  removable?: boolean;\n\n  /**\n   * Только для режима horizontal. Дает возможность склеить несколько `FormItem`.\n   */\n  segmented?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FormLayoutGroup\n */\nexport const FormLayoutGroup = ({\n  children,\n  mode = \"vertical\",\n  removable,\n  segmented,\n  removePlaceholder = \"Удалить\",\n  onRemove = noop,\n  getRootRef,\n  ...restProps\n}: FormLayoutGroupProps) => {\n  const platform = usePlatform();\n  const { sizeY } = useAdaptivity();\n  const isRemovable = removable && mode === \"horizontal\";\n  const isSegmented = segmented && mode === \"horizontal\";\n  const rootEl = useExternRef(getRootRef);\n\n  return (\n    <div\n      ref={rootEl}\n      vkuiClass={classNames(\n        getClassName(\"FormLayoutGroup\", platform), // TODO: v5 remove\n        `FormLayoutGroup--sizeY-${sizeY}`,\n        `FormLayoutGroup--${mode}`,\n        isRemovable && \"FormLayoutGroup--removable\",\n        isSegmented && \"FormLayoutGroup--segmented\"\n      )}\n      {...restProps}\n    >\n      {isRemovable ? (\n        <Removable\n          vkuiClass=\"FormLayoutGroup__removable\"\n          align=\"start\"\n          removePlaceholder={removePlaceholder}\n          onRemove={(e) => {\n            if (rootEl?.current) {\n              onRemove(e, rootEl.current);\n            }\n          }}\n        >\n          {children}\n        </Removable>\n      ) : (\n        <React.Fragment>\n          {children}\n          <span vkuiClass=\"FormLayoutGroup__offset\" aria-hidden />\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAA0D;AAmB1D;AACA;AACA;AACO,IAAMA,eAAe,GAAG,SAAlBA,eAAe,OASA;EAAA,IAR1BC,QAAQ,QAARA,QAAQ;IAAA,iBACRC,IAAI;IAAJA,IAAI,0BAAG,UAAU;IACjBC,SAAS,QAATA,SAAS;IACTC,SAAS,QAATA,SAAS;IAAA,6BACTC,iBAAiB;IAAjBA,iBAAiB,sCAAG,SAAS;IAAA,qBAC7BC,QAAQ;IAARA,SAAQ,8BAAGC,WAAI;IACfC,UAAU,QAAVA,UAAU;IACPC,SAAS;EAEZ,IAAMC,QAAQ,GAAG,IAAAC,wBAAW,GAAE;EAC9B,qBAAkB,IAAAC,6BAAa,GAAE;IAAzBC,KAAK,kBAALA,KAAK;EACb,IAAMC,WAAW,GAAGX,SAAS,IAAID,IAAI,KAAK,YAAY;EACtD,IAAMa,WAAW,GAAGX,SAAS,IAAIF,IAAI,KAAK,YAAY;EACtD,IAAMc,MAAM,GAAG,IAAAC,0BAAY,EAACT,UAAU,CAAC;EAEvC,OACE;IACE,GAAG,EAAEQ,MAAO;IACZ,SAAS,EAAE,IAAAE,sBAAU,EACnB,IAAAC,0BAAY,EAAC,iBAAiB,EAAET,QAAQ,CAAC,EAAE;IAAA,iCACjBG,KAAK,8BACXX,IAAI,GACxBY,WAAW,IAAI,4BAA4B,EAC3CC,WAAW,IAAI,4BAA4B;EAC3C,GACEN,SAAS,GAEZK,WAAW,GACV,qCAAC,oBAAS;IACR,SAAS,EAAC,4BAA4B;IACtC,KAAK,EAAC,OAAO;IACb,iBAAiB,EAAET,iBAAkB;IACrC,QAAQ,EAAE,kBAACe,CAAC,EAAK;MACf,IAAIJ,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEK,OAAO,EAAE;QACnBf,SAAQ,CAACc,CAAC,EAAEJ,MAAM,CAACK,OAAO,CAAC;MAC7B;IACF;EAAE,GAEDpB,QAAQ,CACC,GAEZ,qCAAC,KAAK,CAAC,QAAQ,QACZA,QAAQ,EACT;IAAM,SAAS,EAAC,yBAAyB;IAAC;EAAW,EAAG,CAE3D,CACG;AAEV,CAAC;AAAC"}