{"version":3,"sources":["../../../../src/components/FormLayoutGroup/FormLayoutGroup.tsx"],"names":["FormLayoutGroup","children","mode","removable","segmented","removePlaceholder","onRemove","noop","getRootRef","restProps","platform","sizeY","isRemovable","isSegmented","rootEl","e","current"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAmBA;AACA;AACA;AACO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,OASH;AAAA,MAR1BC,QAQ0B,QAR1BA,QAQ0B;AAAA,uBAP1BC,IAO0B;AAAA,MAP1BA,IAO0B,0BAPnB,UAOmB;AAAA,MAN1BC,SAM0B,QAN1BA,SAM0B;AAAA,MAL1BC,SAK0B,QAL1BA,SAK0B;AAAA,mCAJ1BC,iBAI0B;AAAA,MAJ1BA,iBAI0B,sCAJN,SAIM;AAAA,2BAH1BC,QAG0B;AAAA,MAH1BA,SAG0B,8BAHfC,WAGe;AAAA,MAF1BC,UAE0B,QAF1BA,UAE0B;AAAA,MADvBC,SACuB;;AAC1B,MAAMC,QAAQ,GAAG,+BAAjB;;AACA,uBAAkB,oCAAlB;AAAA,MAAQC,KAAR,kBAAQA,KAAR;;AACA,MAAMC,WAAW,GAAGT,SAAS,IAAID,IAAI,KAAK,YAA1C;AACA,MAAMW,WAAW,GAAGT,SAAS,IAAIF,IAAI,KAAK,YAA1C;AACA,MAAMY,MAAM,GAAG,gCAAaN,UAAb,CAAf;AAEA,SACE;AACE,IAAA,GAAG,EAAEM,MADP;AAEE,IAAA,SAAS,EAAE,4BACT,gCAAa,iBAAb,EAAgCJ,QAAhC,CADS,EACkC;AADlC,qCAEiBC,KAFjB,8BAGWT,IAHX,GAITU,WAAW,IAAI,4BAJN,EAKTC,WAAW,IAAI,4BALN;AAFb,KASMJ,SATN,GAWGG,WAAW,GACV,qCAAC,oBAAD;AACE,IAAA,SAAS,EAAC,4BADZ;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,iBAAiB,EAAEP,iBAHrB;AAIE,IAAA,QAAQ,EAAE,kBAACU,CAAD,EAAO;AACf,UAAID,MAAJ,aAAIA,MAAJ,eAAIA,MAAM,CAAEE,OAAZ,EAAqB;AACnBV,QAAAA,SAAQ,CAACS,CAAD,EAAID,MAAM,CAACE,OAAX,CAAR;AACD;AACF;AARH,KAUGf,QAVH,CADU,GAcV,qCAAC,KAAD,CAAO,QAAP,QACGA,QADH,EAEE;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAA0C;AAA1C,IAFF,CAzBJ,CADF;AAiCD,CAjDM","sourcesContent":["import * as React from \"react\";\nimport { HasRootRef } from \"../../types\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { noop } from \"../../lib/utils\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Removable, RemovableProps } from \"../Removable/Removable\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport \"./FormLayoutGroup.css\";\n\nexport interface FormLayoutGroupProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    RemovableProps,\n    HasRootRef<HTMLDivElement> {\n  mode?: \"vertical\" | \"horizontal\";\n  /**\n   * Только для режима horizontal. Дает возможность удалить всю группу `FormItem`.\n   */\n  removable?: boolean;\n\n  /**\n   * Только для режима horizontal. Дает возможность склеить несколько `FormItem`.\n   */\n  segmented?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FormLayoutGroup\n */\nexport const FormLayoutGroup = ({\n  children,\n  mode = \"vertical\",\n  removable,\n  segmented,\n  removePlaceholder = \"Удалить\",\n  onRemove = noop,\n  getRootRef,\n  ...restProps\n}: FormLayoutGroupProps) => {\n  const platform = usePlatform();\n  const { sizeY } = useAdaptivity();\n  const isRemovable = removable && mode === \"horizontal\";\n  const isSegmented = segmented && mode === \"horizontal\";\n  const rootEl = useExternRef(getRootRef);\n\n  return (\n    <div\n      ref={rootEl}\n      vkuiClass={classNames(\n        getClassName(\"FormLayoutGroup\", platform), // TODO: v5 remove\n        `FormLayoutGroup--sizeY-${sizeY}`,\n        `FormLayoutGroup--${mode}`,\n        isRemovable && \"FormLayoutGroup--removable\",\n        isSegmented && \"FormLayoutGroup--segmented\"\n      )}\n      {...restProps}\n    >\n      {isRemovable ? (\n        <Removable\n          vkuiClass=\"FormLayoutGroup__removable\"\n          align=\"start\"\n          removePlaceholder={removePlaceholder}\n          onRemove={(e) => {\n            if (rootEl?.current) {\n              onRemove(e, rootEl.current);\n            }\n          }}\n        >\n          {children}\n        </Removable>\n      ) : (\n        <React.Fragment>\n          {children}\n          <span vkuiClass=\"FormLayoutGroup__offset\" aria-hidden />\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n"],"file":"FormLayoutGroup.js"}