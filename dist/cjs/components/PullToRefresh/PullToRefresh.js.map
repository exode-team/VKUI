{"version":3,"file":"PullToRefresh.js","names":["cancelEvent","event","originalEvent","preventDefault","cancelable","stopPropagation","TOUCH_MOVE_EVENT_PARAMS","passive","PullToRefresh","children","isFetching","onRefresh","restProps","platform","usePlatform","scroll","useScroll","useDOM","document","prevIsFetching","usePrevious","initParams","React","useMemo","start","IOS","max","maxY","refreshing","positionMultiplier","useState","spinnerY","setSpinnerY","watching","setWatching","setRefreshing","canRefresh","setCanRefresh","touchDown","setTouchDown","prevTouchDown","touchY","useRef","contentShift","setContentShift","spinnerProgress","setSpinnerProgress","onWindowTouchMove","useGlobalEventListener","resetRefreshingState","useCallback","onRefreshingFinish","useTimeout","setWaitFetchingTimeout","set","clearWaitFetchingTimeout","clear","useIsomorphicLayoutEffect","undefined","runRefreshing","prevSpinnerY","runTapticImpactOccurred","onTouchStart","e","onTouchMove","isY","shiftY","pageYOffset","getScroll","y","shift","Math","current","currentY","min","progress","abs","onTouchEnd","spinnerTransform","contentTransform","classNames","transform","WebkitTransform","opacity"],"sources":["../../../../src/components/PullToRefresh/PullToRefresh.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { AnyFunction, HasPlatform } from \"../../types\";\nimport { DOMProps, useDOM } from \"../../lib/dom\";\nimport { classNames } from \"../../lib/classNames\";\nimport { IOS } from \"../../lib/platform\";\nimport { runTapticImpactOccurred } from \"../../lib/taptic\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { ScrollContextInterface, useScroll } from \"../AppRoot/ScrollContext\";\nimport { Touch, TouchEvent, TouchProps } from \"../Touch/Touch\";\nimport { FixedLayout } from \"../FixedLayout/FixedLayout\";\nimport { PullToRefreshSpinner } from \"./PullToRefreshSpinner\";\nimport TouchRootContext from \"../Touch/TouchContext\";\nimport { usePrevious } from \"../../hooks/usePrevious\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\n\nfunction cancelEvent(event: any) {\n  if (!event) {\n    return false;\n  }\n  while (event.originalEvent) {\n    event = event.originalEvent;\n  }\n  if (event.preventDefault && event.cancelable) {\n    event.preventDefault();\n  }\n  if (event.stopPropagation) {\n    event.stopPropagation();\n  }\n  return false;\n}\n\nexport interface PullToRefreshProps extends DOMProps, TouchProps, HasPlatform {\n  /**\n   * Будет вызвана для обновления контента (прим.: функция должна быть мемоизированным коллбэком)\n   */\n  onRefresh: AnyFunction;\n  /**\n   * Определяет, выполняется ли обновление. Для скрытия спиннера после получения контента необходимо передать `false`\n   */\n  isFetching?: boolean;\n  /** @ignore */\n  scroll?: ScrollContextInterface;\n  children?: React.ReactNode;\n}\n\nconst TOUCH_MOVE_EVENT_PARAMS = {\n  cancelable: true,\n  passive: false,\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PullToRefresh\n */\nexport const PullToRefresh = ({\n  children,\n  isFetching,\n  onRefresh,\n  ...restProps\n}: PullToRefreshProps) => {\n  const platform = usePlatform();\n  const scroll = useScroll();\n  const { document } = useDOM();\n  const prevIsFetching = usePrevious(isFetching);\n\n  const initParams = React.useMemo(\n    () => ({\n      start: platform === IOS ? -10 : -45,\n      max: platform === IOS ? 50 : 80,\n      maxY: platform === IOS ? 400 : 80,\n      refreshing: platform === IOS ? 36 : 50,\n      positionMultiplier: platform === IOS ? 0.21 : 1,\n    }),\n    [platform]\n  );\n\n  const [spinnerY, setSpinnerY] = React.useState(initParams.start);\n  const [watching, setWatching] = React.useState(false);\n  const [refreshing, setRefreshing] = React.useState(false);\n  const [canRefresh, setCanRefresh] = React.useState(false);\n  const [touchDown, setTouchDown] = React.useState(false);\n  const prevTouchDown = usePrevious(touchDown);\n\n  const touchY = React.useRef(0);\n  const [contentShift, setContentShift] = React.useState(0);\n  const [spinnerProgress, setSpinnerProgress] = React.useState(0);\n\n  const onWindowTouchMove = (event: Event) => {\n    if (refreshing) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  useGlobalEventListener(\n    document,\n    \"touchmove\",\n    onWindowTouchMove,\n    TOUCH_MOVE_EVENT_PARAMS\n  );\n\n  const resetRefreshingState = React.useCallback(() => {\n    setWatching(false);\n    setCanRefresh(false);\n    setRefreshing(false);\n    setSpinnerY(initParams.start);\n    setSpinnerProgress(0);\n    setContentShift(0);\n  }, [initParams]);\n\n  const onRefreshingFinish = React.useCallback(() => {\n    if (!touchDown) {\n      resetRefreshingState();\n    }\n  }, [touchDown, resetRefreshingState]);\n\n  const { set: setWaitFetchingTimeout, clear: clearWaitFetchingTimeout } =\n    useTimeout(onRefreshingFinish, 1000);\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevIsFetching !== undefined && prevIsFetching && !isFetching) {\n      onRefreshingFinish();\n    }\n  }, [prevIsFetching, isFetching, onRefreshingFinish]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevIsFetching !== undefined && !prevIsFetching && isFetching) {\n      clearWaitFetchingTimeout();\n    }\n  }, [isFetching, prevIsFetching, clearWaitFetchingTimeout]);\n\n  const runRefreshing = React.useCallback(() => {\n    if (!refreshing && onRefresh) {\n      // cleanup if the consumer does not start fetching in 1s\n      setWaitFetchingTimeout();\n\n      setRefreshing(true);\n      setSpinnerY((prevSpinnerY) =>\n        platform === IOS ? prevSpinnerY : initParams.refreshing\n      );\n\n      onRefresh();\n      runTapticImpactOccurred(\"light\");\n    }\n  }, [\n    refreshing,\n    onRefresh,\n    setWaitFetchingTimeout,\n    platform,\n    initParams.refreshing,\n  ]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevTouchDown !== undefined && prevTouchDown && !touchDown) {\n      if (!refreshing && canRefresh) {\n        runRefreshing();\n      } else if (refreshing && !isFetching) {\n        // only iOS can start refresh before gesture end\n        resetRefreshingState();\n      } else {\n        // refreshing && isFetching: refresh in progress\n        // OR !refreshing && !canRefresh: pull was not strong enough\n        setSpinnerY(refreshing ? initParams.refreshing : initParams.start);\n        setSpinnerProgress(0);\n        setContentShift(0);\n      }\n    }\n  }, [\n    initParams,\n    prevIsFetching,\n    isFetching,\n    onRefreshingFinish,\n    prevTouchDown,\n    touchDown,\n    refreshing,\n    canRefresh,\n    runRefreshing,\n  ]);\n\n  const onTouchStart = (e: TouchEvent) => {\n    if (refreshing) {\n      cancelEvent(e);\n    }\n    setTouchDown(true);\n  };\n\n  const onTouchMove = (e: TouchEvent) => {\n    const { isY, shiftY } = e;\n    const { start, max } = initParams;\n    const pageYOffset = scroll?.getScroll().y;\n\n    if (watching && touchDown) {\n      cancelEvent(e);\n\n      const { positionMultiplier, maxY } = initParams;\n\n      const shift = Math.max(0, shiftY - touchY.current);\n\n      const currentY = Math.max(\n        start,\n        Math.min(maxY, start + shift * positionMultiplier)\n      );\n      const progress =\n        currentY > -10 ? Math.abs((currentY + 10) / max) * 80 : 0;\n\n      setSpinnerY(currentY);\n      setSpinnerProgress(Math.min(80, Math.max(0, progress)));\n      setCanRefresh(progress > 80);\n      setContentShift((currentY + 10) * 2.3);\n\n      if (progress > 85 && !refreshing && platform === IOS) {\n        runRefreshing();\n      }\n    } else if (\n      isY &&\n      pageYOffset === 0 &&\n      shiftY > 0 &&\n      !refreshing &&\n      touchDown\n    ) {\n      cancelEvent(e);\n\n      touchY.current = shiftY;\n      setWatching(true);\n      setSpinnerY(start);\n      setSpinnerProgress(0);\n    }\n  };\n\n  const onTouchEnd = () => {\n    setWatching(false);\n    setTouchDown(false);\n  };\n\n  const spinnerTransform = `translate3d(0, ${spinnerY}px, 0)`;\n  let contentTransform = \"\";\n\n  if (platform === IOS && refreshing && !touchDown) {\n    contentTransform = \"translate3d(0, 100px, 0)\";\n  } else if (platform === IOS && (contentShift || refreshing)) {\n    contentTransform = `translate3d(0, ${contentShift}px, 0)`;\n  }\n\n  return (\n    <TouchRootContext.Provider value={true}>\n      <Touch\n        {...restProps}\n        onStart={onTouchStart}\n        onMove={onTouchMove}\n        onEnd={onTouchEnd}\n        vkuiClass={classNames(\n          \"PullToRefresh\",\n          platform === IOS && \"PullToRefresh--ios\",\n          watching && \"PullToRefresh--watching\",\n          refreshing && \"PullToRefresh--refreshing\"\n        )}\n      >\n        <FixedLayout vkuiClass=\"PullToRefresh__controls\">\n          <PullToRefreshSpinner\n            style={{\n              transform: spinnerTransform,\n              WebkitTransform: spinnerTransform,\n              opacity: watching || refreshing || canRefresh ? 1 : 0,\n            }}\n            on={refreshing}\n            progress={refreshing ? undefined : spinnerProgress}\n          />\n        </FixedLayout>\n\n        <div\n          vkuiClass=\"PullToRefresh__content\"\n          style={{\n            transform: contentTransform,\n            WebkitTransform: contentTransform,\n          }}\n        >\n          {children}\n        </div>\n      </Touch>\n    </TouchRootContext.Provider>\n  );\n};\n"],"mappings":"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"}