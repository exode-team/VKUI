{"version":3,"sources":["../../../../src/components/ActionSheet/ActionSheetDropdownDesktop.tsx"],"names":["warn","getEl","ref","current","ActionSheetDropdownDesktop","children","toggleRef","closing","popupDirection","onClose","className","style","restProps","document","platform","sizeY","elementRef","React","useRef","toggleEl","isPopupDirectionTop","useMemo","bodyClickListener","e","dropdownElement","contains","target","useEffect","setTimeout","add","body","onClick","useCallback","stopPropagation","targetRef","Platform","IOS"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { useDOM } from \"../../lib/dom\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useEffectDev } from \"../../hooks/useEffectDev\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { isRefObject } from \"../../lib/isRefObject\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { Platform } from \"../../lib/platform\";\nimport { useEventListener } from \"../../hooks/useEventListener\";\nimport { SharedDropdownProps } from \"./types\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\nimport { Popper } from \"../Popper/Popper\";\nimport \"./ActionSheet.css\";\n\nconst warn = warnOnce(\"ActionSheet\");\nfunction getEl(\n  ref: SharedDropdownProps[\"toggleRef\"]\n): Element | null | undefined {\n  return ref && \"current\" in ref ? ref.current : ref;\n}\n\nexport const ActionSheetDropdownDesktop = ({\n  children,\n  toggleRef,\n  closing,\n  popupDirection,\n  onClose,\n  className,\n  style,\n  ...restProps\n}: SharedDropdownProps) => {\n  const { document } = useDOM();\n  const platform = usePlatform();\n  const { sizeY } = useAdaptivity();\n  const elementRef = React.useRef<HTMLDivElement | null>(null);\n\n  useEffectDev(() => {\n    const toggleEl = getEl(toggleRef);\n    if (!toggleEl) {\n      warn(`Свойство \"toggleRef\" не передано`, \"error\");\n    }\n  }, [toggleRef]);\n\n  const isPopupDirectionTop = React.useMemo(\n    () =>\n      popupDirection === \"top\" ||\n      (typeof popupDirection === \"function\" &&\n        popupDirection(elementRef) === \"top\"),\n    [popupDirection, elementRef]\n  );\n\n  const bodyClickListener = useEventListener(\"click\", (e: MouseEvent) => {\n    const dropdownElement = elementRef?.current;\n    if (dropdownElement && !dropdownElement.contains(e.target as Node)) {\n      onClose?.();\n    }\n  });\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      bodyClickListener.add(document!.body);\n    });\n  }, [bodyClickListener, document]);\n\n  const onClick = React.useCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => e.stopPropagation(),\n    []\n  );\n\n  const targetRef = React.useMemo(() => {\n    if (isRefObject<SharedDropdownProps[\"toggleRef\"], HTMLElement>(toggleRef)) {\n      return toggleRef;\n    }\n\n    return { current: toggleRef as HTMLElement };\n  }, [toggleRef]);\n\n  return (\n    <Popper\n      targetRef={targetRef}\n      offsetDistance={0}\n      placement={isPopupDirectionTop ? \"top-end\" : \"bottom-end\"}\n      vkuiClass={classNames(\n        \"ActionSheet\",\n        platform === Platform.IOS && \"ActionSheet--ios\",\n        \"ActionSheet--desktop\",\n        `ActionSheet--sizeY-${sizeY}`\n      )}\n      className={className}\n      style={style}\n      getRef={elementRef}\n      forcePortal={false}\n    >\n      <FocusTrap onClose={onClose} {...restProps} onClick={onClick}>\n        {children}\n      </FocusTrap>\n    </Popper>\n  );\n};\n"],"file":"ActionSheetDropdownDesktop.js"}