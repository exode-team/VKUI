{"version":3,"sources":["../../../../src/components/ModalRoot/ModalRootAdaptive.tsx"],"names":["ModalRootComponent","props","isDesktop","activeModal","RootComponent","ModalRootDesktop","ModalRootTouch","displayName","ModalRoot","viewWidth","viewHeight","hasMouse"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AAKA;;AACA;;AA0BA,IAAMA,kBAEL,GAAG,SAFEA,kBAEF,CAACC,KAAD,EAAW;AACb,MAAMC,SAAS,GAAG,4CAAlB;AAEA,oCAAc,CAAC,CAACD,KAAK,CAACE,WAAtB;AAEA,MAAMC,aAAa,GAAGF,SAAS,GAAGG,kCAAH,GAAsBC,yBAArD;AAEA,SAAO,qCAAC,aAAD,EAAmBL,KAAnB,CAAP;AACD,CAVD;;AAYAD,kBAAkB,CAACO,WAAnB,GAAiC,WAAjC;AAEA;AACA;AACA;;AACO,IAAMC,SAAS,GAAG,oCAAeR,kBAAf,EAAmC;AAC1DS,EAAAA,SAAS,EAAE,IAD+C;AAE1DC,EAAAA,UAAU,EAAE,IAF8C;AAG1DC,EAAAA,QAAQ,EAAE;AAHgD,CAAnC,CAAlB","sourcesContent":["import * as React from \"react\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { ModalRootTouch } from \"./ModalRoot\";\nimport { ModalRootDesktop } from \"./ModalRootDesktop\";\nimport {\n  AdaptivityContextInterface,\n  AdaptivityProps,\n} from \"../AdaptivityProvider/AdaptivityContext\";\nimport { useScrollLock } from \"../AppRoot/ScrollContext\";\nimport { useAdaptivityIsDesktop } from \"../../hooks/useAdaptivity\";\n\nexport interface ModalRootProps extends AdaptivityProps {\n  activeModal?: string | null;\n\n  /**\n   * Будет вызвано при начале открытия активной модалки с её id\n   */\n  onOpen?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном открытии активной модалки с её id\n   */\n  onOpened?(modalId: string): void;\n\n  /**\n   * Будет вызвано при начале закрытия активной модалки с её id\n   */\n  onClose?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном закрытии активной модалки с её id\n   */\n  onClosed?(modalId: string): void;\n}\n\nconst ModalRootComponent: React.FC<\n  ModalRootProps & AdaptivityContextInterface\n> = (props) => {\n  const isDesktop = useAdaptivityIsDesktop();\n\n  useScrollLock(!!props.activeModal);\n\n  const RootComponent = isDesktop ? ModalRootDesktop : ModalRootTouch;\n\n  return <RootComponent {...props} />;\n};\n\nModalRootComponent.displayName = \"ModalRoot\";\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ModalRoot\n */\nexport const ModalRoot = withAdaptivity(ModalRootComponent, {\n  viewWidth: true,\n  viewHeight: true,\n  hasMouse: true,\n});\n"],"file":"ModalRootAdaptive.js"}