{"version":3,"sources":["../../../../src/components/AppRoot/AppRootPortal.tsx"],"names":["AppRootPortal","children","className","forcePortal","React","useContext","AppRootContext","portalRoot","mode","disablePortal","appearance"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAQO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAIH;AAAA;;AAAA,MAHxBC,QAGwB,QAHxBA,QAGwB;AAAA,MAFxBC,SAEwB,QAFxBA,SAEwB;AAAA,MADxBC,WACwB,QADxBA,WACwB;;AACxB,0BAA4CC,KAAK,CAACC,UAAN,CAAiBC,8BAAjB,CAA5C;AAAA,MAAQC,UAAR,qBAAQA,UAAR;AAAA,MAAoBC,IAApB,qBAAoBA,IAApB;AAAA,MAA0BC,aAA1B,qBAA0BA,aAA1B;;AACA,MAAMC,UAAU,GAAG,mCAAnB;AAEAP,EAAAA,WAAW,mBAAGA,WAAH,uDAAkBK,IAAI,KAAK,MAAtC;AACA,SAAO,CAACC,aAAD,IAAkBF,UAAlB,IAAgCJ,WAAhC,gBACL,4BACE,qCAAC,sCAAD;AAAoB,IAAA,UAAU,EAAEO;AAAhC,KACE;AAAK,IAAA,SAAS,EAAER;AAAhB,KAA4BD,QAA5B,CADF,CADF,EAIEM,UAJF,CADK,GAQL,qCAAC,KAAD,CAAO,QAAP,QAAiBN,QAAjB,CARF;AAUD,CAnBM","sourcesContent":["import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { AppRootContext } from \"./AppRootContext\";\nimport { AppearanceProvider } from \"../AppearanceProvider/AppearanceProvider\";\nimport { useAppearance } from \"../../hooks/useAppearance\";\n\nexport interface AppRootPortalProps {\n  className?: string;\n  forcePortal?: boolean;\n  children?: React.ReactNode;\n}\n\nexport const AppRootPortal = ({\n  children,\n  className,\n  forcePortal,\n}: AppRootPortalProps) => {\n  const { portalRoot, mode, disablePortal } = React.useContext(AppRootContext);\n  const appearance = useAppearance();\n\n  forcePortal = forcePortal ?? mode !== \"full\";\n  return !disablePortal && portalRoot && forcePortal ? (\n    createPortal(\n      <AppearanceProvider appearance={appearance}>\n        <div className={className}>{children}</div>\n      </AppearanceProvider>,\n      portalRoot\n    )\n  ) : (\n    <React.Fragment>{children}</React.Fragment>\n  );\n};\n"],"file":"AppRootPortal.js"}