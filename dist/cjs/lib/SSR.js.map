{"version":3,"sources":["../../../src/lib/SSR.tsx"],"names":["SSRContext","React","createContext","platform","userAgent","browserInfo","undefined","SSRWrapper","children","contextValue","dom"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAQO,IAAMA,UAAU,gBAAGC,KAAK,CAACC,aAAN,CAAyC;AACjEC,EAAAA,QAAQ,EAAE,IADuD;AAEjEC,EAAAA,SAAS,EAAE,EAFsD;AAGjEC,EAAAA,WAAW,EAAEC;AAHoD,CAAzC,CAAnB;;;AAYP;AACA;AACA;AACO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAIH;AAAA,MAHrBH,SAGqB,QAHrBA,SAGqB;AAAA,MAFrBC,WAEqB,QAFrBA,WAEqB;AAAA,MADrBG,QACqB,QADrBA,QACqB;;AACrB,MAAI,CAACH,WAAD,IAAgBD,SAApB,EAA+B;AAC7BC,IAAAA,WAAW,GAAG,iCAAmBD,SAAnB,CAAd;AACD,GAHoB,CAKrB;;;AACA,MAAMK,YAAY,GAAG;AACnBN,IAAAA,QAAQ,EAAE,wBAASE,WAAT,CADS;AAEnBA,IAAAA,WAAW,EAAXA,WAFmB;AAGnBD,IAAAA,SAAS,EAATA;AAHmB,GAArB,CANqB,CAYrB;;AACA,MAAMM,GAAG,GAAG,kBAAZ;AAEA,SACE,qCAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAED;AAA5B,KACE,qCAAC,eAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEC;AAA5B,KAAkCF,QAAlC,CADF,CADF;AAKD,CAxBM","sourcesContent":["import * as React from \"react\";\nimport { PlatformType, platform } from \"./platform\";\nimport { BrowserInfo, computeBrowserInfo } from \"./browser\";\nimport { DOMContext, getDOM } from \"../lib/dom\";\n\nexport interface SSRContextInterface {\n  platform: PlatformType | null;\n  userAgent?: string;\n  browserInfo?: BrowserInfo;\n}\n\nexport const SSRContext = React.createContext<SSRContextInterface>({\n  platform: null,\n  userAgent: \"\",\n  browserInfo: undefined,\n});\n\nexport interface SSRWrapperProps {\n  userAgent?: string;\n  browserInfo?: BrowserInfo;\n  children?: React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SSR\n */\nexport const SSRWrapper = ({\n  userAgent,\n  browserInfo,\n  children,\n}: SSRWrapperProps) => {\n  if (!browserInfo && userAgent) {\n    browserInfo = computeBrowserInfo(userAgent);\n  }\n\n  // TODO: Каждый раз создаётся новый объект для контекста - плохо\n  const contextValue = {\n    platform: platform(browserInfo),\n    browserInfo,\n    userAgent,\n  };\n\n  // TODO: move to state, and update in effect?\n  const dom = getDOM();\n\n  return (\n    <SSRContext.Provider value={contextValue}>\n      <DOMContext.Provider value={dom}>{children}</DOMContext.Provider>\n    </SSRContext.Provider>\n  );\n};\n"],"file":"SSR.js"}