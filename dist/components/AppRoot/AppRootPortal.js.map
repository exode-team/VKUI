{"version":3,"sources":["../../../src/components/AppRoot/AppRootPortal.tsx"],"names":["React","createPortal","AppRootContext","AppRootPortal","children","className","forcePortal","useContext","portalRoot","mode"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,cAAT;AAEA,OAAO,IAAMC,aAEZ,GAAG,SAFSA,aAET,OAA0C;AAAA;;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;AAAA,MAA7BC,SAA6B,QAA7BA,SAA6B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAC5C,0BAA6BN,KAAK,CAACO,UAAN,CAAiBL,cAAjB,CAA7B;AAAA,MAAQM,UAAR,qBAAQA,UAAR;AAAA,MAAoBC,IAApB,qBAAoBA,IAApB;;AAEAH,EAAAA,WAAW,mBAAGA,WAAH,uDAAkBG,IAAI,KAAK,MAAtC;AACA,SAAOD,UAAU,IAAIF,WAAd,gBACLL,YAAY,CAAC;AAAK,IAAA,SAAS,EAAEI;AAAhB,KAA4BD,QAA5B,CAAD,EAA8CI,UAA9C,CADP,GAGL,oBAAC,KAAD,CAAO,QAAP,QAAiBJ,QAAjB,CAHF;AAKD,CAXM","sourcesContent":["import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { AppRootContext } from \"./AppRootContext\";\n\nexport const AppRootPortal: React.FC<\n  React.PropsWithChildren<{ className?: string; forcePortal?: boolean }>\n> = ({ children, className, forcePortal }) => {\n  const { portalRoot, mode } = React.useContext(AppRootContext);\n\n  forcePortal = forcePortal ?? mode !== \"full\";\n  return portalRoot && forcePortal ? (\n    createPortal(<div className={className}>{children}</div>, portalRoot)\n  ) : (\n    <React.Fragment>{children}</React.Fragment>\n  );\n};\n"],"file":"AppRootPortal.js"}