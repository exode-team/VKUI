{"version":3,"file":"AppRootPortal.js","names":["React","createPortal","AppRootContext","AppearanceProvider","useAppearance","AppRootPortal","children","className","forcePortal","useContext","portalRoot","mode","disablePortal","appearance"],"sources":["../../../src/components/AppRoot/AppRootPortal.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { AppRootContext } from \"./AppRootContext\";\nimport { AppearanceProvider } from \"../AppearanceProvider/AppearanceProvider\";\nimport { useAppearance } from \"../../hooks/useAppearance\";\n\nexport interface AppRootPortalProps {\n  className?: string;\n  forcePortal?: boolean;\n  children?: React.ReactNode;\n}\n\nexport const AppRootPortal = ({\n  children,\n  className,\n  forcePortal,\n}: AppRootPortalProps) => {\n  const { portalRoot, mode, disablePortal } = React.useContext(AppRootContext);\n  const appearance = useAppearance();\n\n  forcePortal = forcePortal ?? mode !== \"full\";\n  return !disablePortal && portalRoot && forcePortal ? (\n    createPortal(\n      <AppearanceProvider appearance={appearance}>\n        <div className={className}>{children}</div>\n      </AppearanceProvider>,\n      portalRoot\n    )\n  ) : (\n    <React.Fragment>{children}</React.Fragment>\n  );\n};\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,YAAY,QAAQ,WAAW;AACxC,SAASC,cAAc;AACvB,SAASC,kBAAkB;AAC3B,SAASC,aAAa;AAQtB,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAa,OAIA;EAAA;EAAA,IAHxBC,QAAQ,QAARA,QAAQ;IACRC,SAAS,QAATA,SAAS;IACTC,WAAW,QAAXA,WAAW;EAEX,wBAA4CR,KAAK,CAACS,UAAU,CAACP,cAAc,CAAC;IAApEQ,UAAU,qBAAVA,UAAU;IAAEC,IAAI,qBAAJA,IAAI;IAAEC,aAAa,qBAAbA,aAAa;EACvC,IAAMC,UAAU,GAAGT,aAAa,EAAE;EAElCI,WAAW,mBAAGA,WAAW,uDAAIG,IAAI,KAAK,MAAM;EAC5C,OAAO,CAACC,aAAa,IAAIF,UAAU,IAAIF,WAAW,gBAChDP,YAAY,CACV,oBAAC,kBAAkB;IAAC,UAAU,EAAEY;EAAW,GACzC;IAAK,SAAS,EAAEN;EAAU,GAAED,QAAQ,CAAO,CACxB,EACrBI,UAAU,CACX,GAED,oBAAC,KAAK,CAAC,QAAQ,QAAEJ,QAAQ,CAC1B;AACH,CAAC"}