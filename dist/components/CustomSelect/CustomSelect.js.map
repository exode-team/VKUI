{"version":3,"sources":["../../../src/components/CustomSelect/CustomSelect.tsx"],"names":["React","SelectMimicry","debounce","setRef","multiRef","getTitleFromChildren","classNames","withAdaptivity","withPlatform","CustomSelectOption","getClassName","Input","DropdownIcon","Caption","warnOnce","defaultFilterFn","getFormFieldModeFromSelectType","is","CustomSelectDropdown","SelectType","findIndexAfter","options","startIndex","length","findIndex","option","i","disabled","findIndexBefore","endIndex","result","undefined","warn","checkOptionsValueType","Set","map","item","value","size","CustomSelectComponent","props","createRef","keyboardInput","state","selectedOptionIndex","inputValue","filterFn","filter","setState","opened","focusedOptionIndex","isValidIndex","scrollToElement","onOpen","resetKeyboardInput","onClose","select","index","nativeSelectValue","event","Event","bubbles","selectEl","dispatchEvent","close","open","scrollTo","prevState","type","nextIndex","beforeIndex","focusOptionByIndex","e","Array","prototype","indexOf","call","currentTarget","parentNode","children","preventDefault","selectFocused","key","fullInput","optionIndex","label","toLowerCase","includes","scrollBoxRef","current","contains","target","newSelectedOptionIndex","findSelectedIndex","isControlledOutside","onChange","onInputChange","process","env","NODE_ENV","areOptionsShown","focusOption","onKeyboardInput","renderOption","hovered","selected","onClick","handleOptionClick","onMouseDown","handleOptionDown","onMouseOver","handleOptionHover","element","getRef","placement","popperPlacement","defaultValue","initialValue","Number","center","dropdown","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","prevProps","searchable","stateOptions","before","name","className","getRootRef","popupDirection","sizeY","platform","style","onBlur","onFocus","emptyText","renderDropdown","fetching","icon","dropdownOffsetDistance","fixDropdownWidth","forceDropdownPortal","selectType","default","restProps","getSelectedItem","defaultDropdownContent","resolvedContent","openedClassNames","containerRef","onLabelClick","onInputKeyDown","placeholder","handleKeyDownSelect","handleKeyUp","selectRef","onNativeSelectChange","onPlacementChange","resetFocusedOption","Component","CustomSelect"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { SelectMimicry } from \"../SelectMimicry/SelectMimicry\";\nimport {\n  debounce,\n  setRef,\n  multiRef,\n  getTitleFromChildren,\n} from \"../../lib/utils\";\nimport { classNames } from \"../../lib/classNames\";\nimport { NativeSelectProps } from \"../NativeSelect/NativeSelect\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport {\n  CustomSelectOption,\n  CustomSelectOptionProps,\n} from \"../CustomSelectOption/CustomSelectOption\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { FormFieldProps } from \"../FormField/FormField\";\nimport { HasPlatform } from \"../../types\";\nimport { Input } from \"../Input/Input\";\nimport { DropdownIcon } from \"../DropdownIcon/DropdownIcon\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport {\n  defaultFilterFn,\n  getFormFieldModeFromSelectType,\n} from \"../../lib/select\";\nimport { is } from \"../../lib/is\";\nimport { Placement } from \"../Popper/Popper\";\nimport { CustomSelectDropdown } from \"../CustomSelectDropdown/CustomSelectDropdown\";\nimport { SelectType } from \"../Select/Select\";\nimport \"./CustomSelect.css\";\n\nconst findIndexAfter = (\n  options: CustomSelectOptionInterface[] = [],\n  startIndex = -1\n) => {\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex((option, i) => i > startIndex && !option.disabled);\n};\n\nconst findIndexBefore = (\n  options: CustomSelectOptionInterface[] = [],\n  endIndex: number = options.length\n) => {\n  let result = -1;\n  if (options === undefined || endIndex <= 0) {\n    return result;\n  }\n  for (let i = endIndex - 1; i >= 0; i--) {\n    let option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n\nconst warn = warnOnce(\"CustomSelect\");\n\nconst checkOptionsValueType = (options: CustomSelectOptionInterface[]) => {\n  if (new Set(options.map((item) => typeof item.value)).size > 1) {\n    warn(\n      \"Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.\",\n      \"error\"\n    );\n  }\n};\n\ntype SelectValue = React.SelectHTMLAttributes<HTMLSelectElement>[\"value\"];\n\nexport interface CustomSelectOptionInterface {\n  value: SelectValue;\n  label: React.ReactElement | string;\n  disabled?: boolean;\n  [index: string]: any;\n}\n\ninterface CustomSelectState {\n  inputValue?: string;\n  opened?: boolean;\n  focusedOptionIndex?: number;\n  selectedOptionIndex?: number;\n  nativeSelectValue?: SelectValue;\n  options?: CustomSelectOptionInterface[];\n  popperPlacement?: Placement;\n}\n\nexport interface CustomSelectProps\n  extends NativeSelectProps,\n    HasPlatform,\n    FormFieldProps {\n  /**\n   * Если `true`, то при клике на селект в нём появится текстовое поле для поиска по `options`. По умолчанию поиск\n   * производится по `option.label`.\n   */\n  searchable?: boolean;\n  /**\n   * Текст, который будет отображен, если приходит пустой `options`.\n   */\n  emptyText?: string;\n  onInputChange?: (\n    e: React.ChangeEvent,\n    options: CustomSelectOptionInterface[]\n  ) => void | CustomSelectOptionInterface[];\n  options: CustomSelectOptionInterface[];\n  /**\n   * Функция для кастомной фильтрации. По умолчанию поиск производится по `option.label`.\n   */\n  filterFn?:\n    | false\n    | ((\n        value: string,\n        option: CustomSelectOptionInterface,\n        getOptionLabel?: (\n          option: Partial<CustomSelectOptionInterface>\n        ) => string\n      ) => boolean);\n  popupDirection?: \"top\" | \"bottom\";\n  /**\n   * Рендер-проп для кастомного рендера опции.\n   * В объекте аргумента приходят [свойства опции](#/CustomSelectOption?id=props)\n   */\n  renderOption?: (props: CustomSelectOptionProps) => React.ReactNode;\n  /**\n   * Рендер-проп для кастомного рендера содержимого дропдауна.\n   * В `defaultDropdownContent` содержится список опций в виде скроллящегося блока.\n   */\n  renderDropdown?: ({\n    defaultDropdownContent,\n  }: {\n    defaultDropdownContent: React.ReactNode;\n  }) => React.ReactNode;\n  /**\n   * Если `true`, то в дропдауне вместо списка опций рисуется спиннер. При переданных `renderDropdown` и `fetching: true`\n   * \"победит\" `renderDropdown`.\n   */\n  fetching?: boolean;\n  onClose?: VoidFunction;\n  onOpen?: VoidFunction;\n  icon?: React.ReactNode;\n  dropdownOffsetDistance?: number;\n  fixDropdownWidth?: boolean;\n  forceDropdownPortal?: boolean;\n  selectType?: keyof typeof SelectType;\n}\n\ntype MouseEventHandler = (event: React.MouseEvent<HTMLElement>) => void;\n\nclass CustomSelectComponent extends React.Component<\n  CustomSelectProps,\n  CustomSelectState\n> {\n  static defaultProps: Partial<CustomSelectProps> = {\n    searchable: false,\n    renderOption({ option, ...props }): React.ReactNode {\n      return <CustomSelectOption {...props} />;\n    },\n    options: [],\n    emptyText: \"Ничего не найдено\",\n    filterFn: defaultFilterFn,\n    icon: <DropdownIcon />,\n    dropdownOffsetDistance: 0,\n    fixDropdownWidth: true,\n  };\n\n  public constructor(props: CustomSelectProps) {\n    super(props);\n\n    const { value, defaultValue } = props;\n\n    const initialValue = value !== undefined ? value : defaultValue;\n\n    this.keyboardInput = \"\";\n\n    if (process.env.NODE_ENV === \"development\") {\n      checkOptionsValueType(props.options);\n    }\n\n    this.state = {\n      opened: false,\n      focusedOptionIndex: -1,\n      selectedOptionIndex: this.findSelectedIndex(props.options, initialValue),\n      nativeSelectValue: initialValue,\n      options: props.options,\n      inputValue: \"\",\n    };\n\n    if (props.value !== undefined) {\n      this.isControlledOutside = true;\n    }\n  }\n\n  private keyboardInput: string;\n  private isControlledOutside = false;\n  private selectEl: HTMLSelectElement | null = null;\n  private readonly scrollBoxRef = React.createRef<HTMLDivElement>();\n  private readonly containerRef = React.createRef<HTMLLabelElement>();\n\n  private readonly resetKeyboardInput = () => {\n    this.keyboardInput = \"\";\n  };\n\n  private readonly getSelectedItem = () => {\n    const { selectedOptionIndex, options } = this.state;\n\n    if (!options?.length) {\n      return null;\n    }\n\n    return selectedOptionIndex !== undefined\n      ? options[selectedOptionIndex]\n      : undefined;\n  };\n\n  get areOptionsShown() {\n    return this.scrollBoxRef.current !== null;\n  }\n\n  filter = (\n    options: CustomSelectProps[\"options\"],\n    inputValue: string,\n    filterFn: CustomSelectProps[\"filterFn\"]\n  ) => {\n    return typeof filterFn === \"function\"\n      ? options.filter((option) => filterFn(inputValue, option))\n      : options;\n  };\n\n  findSelectedIndex(\n    options: CustomSelectOptionInterface[] | undefined,\n    value: SelectValue\n  ) {\n    return (\n      options?.findIndex((item) => {\n        value = typeof item.value === \"number\" ? Number(value) : value;\n        return item.value === value;\n      }) ?? -1\n    );\n  }\n\n  open = () => {\n    this.setState(\n      ({ selectedOptionIndex }) => ({\n        opened: true,\n        focusedOptionIndex: selectedOptionIndex,\n      }),\n      () => {\n        const { selectedOptionIndex } = this.state;\n\n        if (\n          selectedOptionIndex !== undefined &&\n          this.isValidIndex(selectedOptionIndex)\n        ) {\n          this.scrollToElement(selectedOptionIndex, true);\n        }\n      }\n    );\n    typeof this.props.onOpen === \"function\" && this.props.onOpen();\n  };\n\n  close = () => {\n    this.resetKeyboardInput();\n\n    this.setState(() => ({\n      inputValue: \"\",\n      opened: false,\n      focusedOptionIndex: -1,\n      options: this.props.options,\n    }));\n    typeof this.props.onClose === \"function\" && this.props.onClose();\n  };\n\n  private isValidIndex(index: number) {\n    return index >= 0 && index < (this.state.options?.length ?? 0);\n  }\n\n  selectFocused = () => {\n    const { focusedOptionIndex } = this.state;\n\n    if (focusedOptionIndex !== undefined) {\n      this.select(focusedOptionIndex);\n    }\n  };\n\n  select = (index: number) => {\n    if (!this.isValidIndex(index)) {\n      return;\n    }\n\n    const item = this.state.options?.[index];\n\n    this.setState(\n      {\n        nativeSelectValue: item?.value,\n      },\n      () => {\n        const event = new Event(\"change\", { bubbles: true });\n        this.selectEl?.dispatchEvent(event);\n      }\n    );\n    this.close();\n  };\n\n  onClick = () => {\n    this.state.opened ? this.close() : this.open();\n  };\n\n  onFocus = () => {\n    const event = new Event(\"focus\");\n    this.selectEl?.dispatchEvent(event);\n  };\n\n  onBlur = () => {\n    this.close();\n    const event = new Event(\"blur\");\n    this.selectEl?.dispatchEvent(event);\n  };\n\n  private scrollToElement(index: number, center = false) {\n    const dropdown = this.scrollBoxRef.current;\n    const item = dropdown ? (dropdown.children[index] as HTMLElement) : null;\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }\n\n  focusOptionByIndex = (index: number | undefined, scrollTo = true) => {\n    if (\n      index === undefined ||\n      index < 0 ||\n      index > (this.state.options?.length ?? 0) - 1\n    ) {\n      return;\n    }\n\n    const option = this.state.options?.[index];\n\n    if (option?.disabled) {\n      return;\n    }\n\n    scrollTo && this.scrollToElement(index);\n\n    this.setState((prevState) =>\n      // Это оптимизация, прежде всего, под `onMouseOver`\n      prevState.focusedOptionIndex !== index\n        ? {\n            focusedOptionIndex: index,\n          }\n        : null\n    );\n  };\n\n  focusOption = (type: \"next\" | \"prev\") => {\n    const { focusedOptionIndex } = this.state;\n    let index = focusedOptionIndex;\n\n    if (type === \"next\") {\n      const nextIndex = findIndexAfter(this.state.options, index);\n      index = nextIndex === -1 ? findIndexAfter(this.state.options) : nextIndex; // Следующий за index или первый валидный до index\n    } else if (type === \"prev\") {\n      const beforeIndex = findIndexBefore(this.state.options, index);\n      index =\n        beforeIndex === -1 ? findIndexBefore(this.state.options) : beforeIndex; // Предшествующий index или последний валидный после index\n    }\n\n    this.focusOptionByIndex(index);\n  };\n\n  handleOptionHover: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n    this.focusOptionByIndex(\n      Array.prototype.indexOf.call(\n        e.currentTarget.parentNode?.children,\n        e.currentTarget\n      ),\n      false\n    );\n  };\n\n  handleOptionDown: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n  };\n\n  handleOptionClick: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n    const index = Array.prototype.indexOf.call(\n      e.currentTarget.parentNode?.children,\n      e.currentTarget\n    );\n    const option = this.state.options?.[index];\n\n    if (option && !option.disabled) {\n      this.selectFocused();\n    }\n  };\n\n  resetFocusedOption = () => {\n    this.setState({ focusedOptionIndex: -1 });\n  };\n\n  onKeyboardInput = (key: string) => {\n    const fullInput = this.keyboardInput + key;\n\n    const optionIndex = this.state.options?.findIndex((option) => {\n      return getTitleFromChildren(option.label)\n        .toLowerCase()\n        .includes(fullInput);\n    });\n\n    if (optionIndex !== undefined && optionIndex > -1) {\n      this.focusOptionByIndex(optionIndex);\n    }\n\n    this.keyboardInput = fullInput;\n  };\n\n  /**\n   * Нужен для правильного поведения обработчика onClick на select. Фильтрует клики, которые были сделаны по\n   * выпадающему списку.\n   */\n  onLabelClick = (e: React.MouseEvent<HTMLLabelElement>) => {\n    if (this.scrollBoxRef.current?.contains(e.target as Node)) {\n      e.preventDefault();\n    }\n  };\n\n  onNativeSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const newSelectedOptionIndex = this.findSelectedIndex(\n      this.state.options,\n      e.currentTarget.value\n    );\n\n    if (this.state.selectedOptionIndex !== newSelectedOptionIndex) {\n      if (!this.isControlledOutside) {\n        this.setState({\n          selectedOptionIndex: newSelectedOptionIndex,\n        });\n      }\n      this.props.onChange?.(e);\n    }\n  };\n\n  onInputChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    if (this.props.onInputChange) {\n      const options = this.props.onInputChange(e, this.props.options);\n      if (options) {\n        if (process.env.NODE_ENV === \"development\") {\n          warn(\n            \"Этот метод фильтрации устарел. Возвращаемое значение onInputChange будет \" +\n              \"проигнорировано в v5.0.0. Для фильтрации обновляйте props.options самостоятельно или используйте свойство filterFn.\"\n          );\n        }\n        this.setState({\n          options,\n          selectedOptionIndex: this.findSelectedIndex(\n            options,\n            this.state.nativeSelectValue\n          ),\n          inputValue: e.target.value,\n        });\n      } else {\n        this.setState({ inputValue: e.target.value });\n      }\n    } else {\n      const options = this.filter(\n        this.props.options,\n        e.target.value,\n        this.props.filterFn\n      );\n      this.setState({\n        options,\n        selectedOptionIndex: this.findSelectedIndex(\n          options,\n          this.state.nativeSelectValue\n        ),\n        inputValue: e.target.value,\n      });\n    }\n  };\n\n  onInputKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (event) => {\n    [\"ArrowUp\", \"ArrowDown\", \"Escape\", \"Enter\"].includes(event.key) &&\n      this.areOptionsShown &&\n      event.preventDefault();\n\n    switch (event.key) {\n      case \"ArrowUp\":\n        this.areOptionsShown && this.focusOption(\"prev\");\n        break;\n      case \"ArrowDown\":\n        this.areOptionsShown && this.focusOption(\"next\");\n        break;\n      case \"Escape\":\n        this.close();\n        break;\n      case \"Enter\":\n        this.areOptionsShown && this.selectFocused();\n        break;\n    }\n  };\n\n  handleKeyDownSelect = (event: React.KeyboardEvent) => {\n    const { opened } = this.state;\n\n    if (event.key.length === 1 && event.key !== \" \") {\n      this.onKeyboardInput(event.key);\n      return;\n    }\n\n    [\"ArrowUp\", \"ArrowDown\", \"Escape\", \"Enter\"].includes(event.key) &&\n      this.areOptionsShown &&\n      event.preventDefault();\n\n    switch (event.key) {\n      case \"ArrowUp\":\n        if (opened) {\n          this.areOptionsShown && this.focusOption(\"prev\");\n        } else {\n          this.open();\n        }\n        break;\n      case \"ArrowDown\":\n        if (opened) {\n          this.areOptionsShown && this.focusOption(\"next\");\n        } else {\n          this.open();\n        }\n        break;\n      case \"Escape\":\n        this.close();\n        break;\n      case \"Enter\":\n      case \"Spacebar\":\n      case \" \":\n        if (opened) {\n          this.areOptionsShown && this.selectFocused();\n        } else {\n          this.open();\n        }\n        break;\n    }\n  };\n\n  handleKeyUp = debounce(this.resetKeyboardInput, 1000);\n\n  componentDidUpdate(prevProps: CustomSelectProps) {\n    // Внутри useEffect и так is, можно убрать\n    if (\n      !is(prevProps.value, this.props.value) ||\n      prevProps.options !== this.props.options\n    ) {\n      if (process.env.NODE_ENV === \"development\") {\n        checkOptionsValueType(this.props.options);\n      }\n\n      this.isControlledOutside = this.props.value !== undefined;\n      const value =\n        this.props.value === undefined\n          ? this.state.nativeSelectValue\n          : this.props.value;\n      const options =\n        this.props.searchable && this.state.inputValue !== undefined\n          ? this.filter(\n              this.props.options,\n              this.state.inputValue,\n              this.props.filterFn\n            )\n          : this.props.options;\n      this.setState({\n        nativeSelectValue: value,\n        selectedOptionIndex: this.findSelectedIndex(options, value),\n        options,\n      });\n    }\n  }\n\n  renderOption = (option: CustomSelectOptionInterface, index: number) => {\n    const { focusedOptionIndex, selectedOptionIndex } = this.state;\n    const { renderOption } = this.props;\n    const hovered = index === focusedOptionIndex;\n    const selected = index === selectedOptionIndex;\n\n    return (\n      <React.Fragment key={`${option.value}`}>\n        {renderOption!({\n          option,\n          hovered,\n          children: option.label,\n          selected,\n          disabled: option.disabled,\n          onClick: this.handleOptionClick,\n          onMouseDown: this.handleOptionDown,\n          // Используем `onMouseOver` вместо `onMouseEnter`.\n          // При параметре `searchable`, обновляется \"ребёнок\", из-за чего `onMouseEnter` не срабатывает в следующих кейсах:\n          //  1. До загрузки выпадающего списка, курсор мышки находится над произвольным элементом этого списка.\n          //     > Лечение: только увод курсора мыши и возвращении его обратно вызывает событие `onMouseEnter` на этот элемент.\n          //  2. Если это тач-устройство.\n          //     > Лечение: нужно нажать на какой-нибудь произвольный элемент списка, после чего `onMouseEnter` будет работать на соседние элементы,\n          //     но не на тот, на который нажали в первый раз.\n          // Более подробно по ссылке https://github.com/facebook/react/issues/13956#issuecomment-1082055744\n          onMouseOver: this.handleOptionHover,\n        })}\n      </React.Fragment>\n    );\n  };\n\n  selectRef = (element: HTMLSelectElement) => {\n    this.selectEl = element;\n    if (this.props.getRef) {\n      setRef(element, this.props.getRef);\n    }\n  };\n\n  onPlacementChange = (placement?: Placement) => {\n    this.setState(() => ({\n      popperPlacement: placement,\n    }));\n  };\n\n  render() {\n    const { opened, nativeSelectValue, options: stateOptions } = this.state;\n    const {\n      before,\n      searchable,\n      name,\n      className,\n      getRef,\n      getRootRef,\n      popupDirection,\n      options,\n      sizeY,\n      platform,\n      style,\n      onChange,\n      onBlur,\n      onFocus,\n      onClick,\n      renderOption,\n      children,\n      emptyText,\n      onInputChange,\n      filterFn,\n      renderDropdown,\n      onOpen,\n      onClose,\n      fetching,\n      icon,\n      dropdownOffsetDistance,\n      fixDropdownWidth,\n      forceDropdownPortal,\n      selectType = SelectType.default,\n      ...restProps\n    } = this.props;\n    const selected = this.getSelectedItem();\n    const label = selected ? selected.label : undefined;\n\n    const defaultDropdownContent =\n      stateOptions !== undefined && stateOptions.length > 0 ? (\n        stateOptions.map(this.renderOption)\n      ) : (\n        <Caption vkuiClass=\"CustomSelect__empty\">\n          {this.props.emptyText}\n        </Caption>\n      );\n\n    let resolvedContent;\n\n    if (typeof renderDropdown === \"function\") {\n      resolvedContent = renderDropdown({ defaultDropdownContent });\n    } else {\n      resolvedContent = defaultDropdownContent;\n    }\n\n    const openedClassNames = classNames(\n      opened && \"Select--open\",\n      opened &&\n        (dropdownOffsetDistance as number) === 0 &&\n        (this.state.popperPlacement?.includes(\"top\")\n          ? \"Select--pop-up\"\n          : \"Select--pop-down\")\n    );\n\n    return (\n      <label\n        vkuiClass={getClassName(\"CustomSelect\", platform)}\n        className={className}\n        style={style}\n        ref={multiRef(this.containerRef, getRootRef)}\n        onClick={this.onLabelClick}\n      >\n        {opened && searchable ? (\n          <Input\n            {...restProps}\n            autoFocus\n            onBlur={this.onBlur}\n            vkuiClass={openedClassNames}\n            value={this.state.inputValue}\n            onKeyDown={this.onInputKeyDown}\n            onChange={this.onInputChange}\n            // TODO Ожидается, что клик поймает нативный select, но его перехватывает Input. К сожалению, это приводит к конфликтам типизации.\n            // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n            // @ts-ignore\n            onClick={onClick}\n            before={before}\n            after={icon}\n            placeholder={restProps.placeholder}\n            mode={getFormFieldModeFromSelectType(selectType)}\n          />\n        ) : (\n          <SelectMimicry\n            {...restProps}\n            aria-hidden={true}\n            onClick={this.onClick}\n            onKeyDown={this.handleKeyDownSelect}\n            onKeyUp={this.handleKeyUp}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            vkuiClass={openedClassNames}\n            after={icon}\n            selectType={selectType}\n          >\n            {label}\n          </SelectMimicry>\n        )}\n        <select\n          ref={this.selectRef}\n          name={name}\n          onChange={this.onNativeSelectChange}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onClick={onClick}\n          value={nativeSelectValue}\n          aria-hidden={true}\n          vkuiClass=\"CustomSelect__control\"\n        >\n          {options.map((item) => (\n            <option key={`${item.value}`} value={item.value} />\n          ))}\n        </select>\n        {opened && (\n          <CustomSelectDropdown\n            targetRef={this.containerRef}\n            placement={popupDirection}\n            scrollBoxRef={this.scrollBoxRef}\n            onPlacementChange={this.onPlacementChange}\n            onMouseLeave={this.resetFocusedOption}\n            fetching={fetching}\n            offsetDistance={dropdownOffsetDistance}\n            sameWidth={fixDropdownWidth}\n            forcePortal={forceDropdownPortal}\n          >\n            {resolvedContent}\n          </CustomSelectDropdown>\n        )}\n      </label>\n    );\n  }\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomSelect\n */\nexport const CustomSelect = withPlatform(\n  withAdaptivity(CustomSelectComponent, {\n    sizeY: true,\n  })\n);\n"],"file":"CustomSelect.js"}