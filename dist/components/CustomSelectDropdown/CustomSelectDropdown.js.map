{"version":3,"sources":["../../../src/components/CustomSelectDropdown/CustomSelectDropdown.tsx"],"names":["React","CustomScrollView","classNames","Popper","Spinner","useIsomorphicLayoutEffect","noop","calcIsTop","placement","includes","getObserverModifier","element","name","enabled","phase","fn","effect","instance","observer","MutationObserver","forceUpdate","observe","childList","subtree","disconnect","CustomSelectDropdown","children","targetRef","scrollBoxRef","fetching","parentOnPlacementChange","onPlacementChange","offsetDistance","sameWidth","forcePortal","autoHideScrollbar","autoHideScrollbarDelay","observableRefs","restProps","useState","isTop","setIsTop","customModifiers","setCustomModifiers","Array","isArray","ref","current","push","useCallback"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Modifier } from \"react-popper\";\nimport { CustomScrollView } from \"../CustomScrollView/CustomScrollView\";\nimport { TrackerOptionsProps } from \"../CustomScrollView/useTrackerVisibility\";\nimport { classNames } from \"../../lib/classNames\";\nimport { Popper, Placement } from \"../Popper/Popper\";\nimport { Spinner } from \"../Spinner/Spinner\";\nimport { HasRef } from \"../../types\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { noop } from \"../../lib/utils\";\nimport \"./CustomSelectDropdown.css\";\n\nexport interface CustomSelectDropdownProps\n  extends React.HTMLAttributes<HTMLElement>,\n    HasRef<HTMLDivElement>,\n    TrackerOptionsProps {\n  targetRef: React.RefObject<HTMLElement>;\n  placement?: Placement;\n  scrollBoxRef?: React.RefObject<HTMLDivElement>;\n  observableRefs?:\n    | Array<React.RefObject<HTMLElement>>\n    | React.RefObject<HTMLElement>;\n  fetching?: boolean;\n  offsetDistance?: number;\n  sameWidth?: boolean;\n  forcePortal?: boolean;\n  onPlacementChange?: (placement?: Placement) => void;\n}\n\nconst calcIsTop = (placement?: Placement) => placement?.includes(\"top\");\n\nfunction getObserverModifier<T extends HTMLElement>(\n  element: T\n): Modifier<string> {\n  return {\n    name: \"customSelectChildrenChange\",\n    enabled: true,\n    phase: \"main\",\n    fn: noop,\n    effect: ({ instance }) => {\n      const observer = new MutationObserver(instance.forceUpdate);\n\n      observer.observe(element, {\n        childList: true,\n        subtree: true,\n      });\n\n      return () => {\n        observer.disconnect();\n      };\n    },\n  };\n}\n\nexport const CustomSelectDropdown = ({\n  children,\n  targetRef,\n  scrollBoxRef,\n  placement,\n  fetching,\n  onPlacementChange: parentOnPlacementChange,\n  offsetDistance = 0,\n  sameWidth = true,\n  forcePortal = true,\n  autoHideScrollbar,\n  autoHideScrollbarDelay,\n  observableRefs,\n  ...restProps\n}: CustomSelectDropdownProps) => {\n  const [isTop, setIsTop] = React.useState(() => calcIsTop(placement));\n  const [customModifiers, setCustomModifiers] = React.useState<\n    Array<Modifier<string>>\n  >([]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (!observableRefs) {\n      return;\n    }\n    const customModifiers: Array<Modifier<string>> = [];\n\n    if (Array.isArray(observableRefs)) {\n      for (const ref of observableRefs) {\n        if (ref?.current) {\n          customModifiers.push(getObserverModifier(ref.current));\n        }\n      }\n    } else if (observableRefs.current) {\n      customModifiers.push(getObserverModifier(observableRefs.current));\n    }\n\n    setCustomModifiers(customModifiers);\n  }, [observableRefs]);\n\n  const onPlacementChange = React.useCallback(\n    ({ placement }: { placement?: Placement }) => {\n      setIsTop(calcIsTop(placement));\n      parentOnPlacementChange?.(placement);\n    },\n    [parentOnPlacementChange, setIsTop]\n  );\n\n  return (\n    <Popper\n      targetRef={targetRef}\n      offsetDistance={offsetDistance}\n      sameWidth={sameWidth}\n      onPlacementChange={onPlacementChange}\n      placement={placement}\n      vkuiClass={classNames(\n        \"CustomSelectDropdown\",\n        offsetDistance === 0 &&\n          (isTop\n            ? \"CustomSelectDropdown--top\"\n            : \"CustomSelectDropdown--bottom\"),\n        sameWidth && \"CustomSelectDropdown--wide\"\n      )}\n      forcePortal={forcePortal}\n      customModifiers={customModifiers}\n      {...restProps}\n    >\n      <CustomScrollView\n        boxRef={scrollBoxRef}\n        vkuiClass=\"CustomSelectDropdown__in\"\n        autoHideScrollbar={autoHideScrollbar}\n        autoHideScrollbarDelay={autoHideScrollbarDelay}\n      >\n        {fetching ? (\n          <div vkuiClass=\"CustomSelectDropdown__fetching\">\n            <Spinner size=\"small\" />\n          </div>\n        ) : (\n          children\n        )}\n      </CustomScrollView>\n    </Popper>\n  );\n};\n"],"file":"CustomSelectDropdown.js"}