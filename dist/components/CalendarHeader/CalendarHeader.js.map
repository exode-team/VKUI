{"version":3,"sources":["../../../src/components/CalendarHeader/CalendarHeader.tsx"],"names":["React","setMonth","setYear","subMonths","addMonths","Icon20ChevronLeftOutline","Icon20ChevronRightOutline","Icon12Dropdown","Tappable","classNames","SelectType","CustomSelect","SizeType","getMonths","getYears","LocaleProviderContext","Paragraph","AdaptivityProvider","CalendarHeader","viewDate","onChange","prevMonth","nextMonth","disablePickers","onNextMonth","onPrevMonth","className","prevMonthAriaLabel","nextMonthAriaLabel","changeMonthAriaLabel","changeYearAriaLabel","prevMonthIcon","nextMonthIcon","locale","useContext","onMonthsChange","useCallback","event","Number","target","value","onYearChange","months","useMemo","map","label","currentYear","getFullYear","years","formatter","Intl","DateTimeFormat","year","month","REGULAR","format","getMonth","COMPACT","accent"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { setMonth, setYear, subMonths, addMonths } from \"../../lib/date\";\nimport {\n  Icon20ChevronLeftOutline,\n  Icon20ChevronRightOutline,\n  Icon12Dropdown,\n} from \"@vkontakte/icons\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { classNames } from \"../../lib/classNames\";\nimport { SelectType } from \"../Select/Select\";\nimport { CustomSelect } from \"../CustomSelect/CustomSelect\";\nimport { SizeType } from \"../../hoc/withAdaptivity\";\nimport { getMonths, getYears } from \"../../lib/calendar\";\nimport { LocaleProviderContext } from \"../LocaleProviderContext/LocaleProviderContext\";\nimport { Paragraph } from \"../Typography/Paragraph/Paragraph\";\nimport { AdaptivityProvider } from \"../AdaptivityProvider/AdaptivityProvider\";\nimport \"./CalendarHeader.css\";\n\nexport interface CalendarHeaderProps\n  extends Pick<React.HTMLAttributes<HTMLDivElement>, \"className\"> {\n  viewDate: Date;\n  prevMonth?: boolean;\n  nextMonth?: boolean;\n  disablePickers?: boolean;\n  prevMonthAriaLabel?: string;\n  nextMonthAriaLabel?: string;\n  changeMonthAriaLabel?: string;\n  changeYearAriaLabel?: string;\n  prevMonthIcon?: React.ReactNode;\n  nextMonthIcon?: React.ReactNode;\n  onChange(viewDate: Date): void;\n  /**\n   * Нажатие на кнопку переключения на следующий месяц.\n   */\n  onNextMonth?(): void;\n  /**\n   * Нажатие на кнопку переключения на предыдущий месяц.\n   */\n  onPrevMonth?(): void;\n}\n\nexport const CalendarHeader: React.FC<CalendarHeaderProps> = ({\n  viewDate,\n  onChange,\n  prevMonth = true,\n  nextMonth = true,\n  disablePickers = false,\n  onNextMonth,\n  onPrevMonth,\n  className,\n  prevMonthAriaLabel = \"Предыдущий месяц\",\n  nextMonthAriaLabel = \"Следующий месяц\",\n  changeMonthAriaLabel = \"Изменить месяц\",\n  changeYearAriaLabel = \"Изменить год\",\n  prevMonthIcon = (\n    <Icon20ChevronLeftOutline\n      vkuiClass=\"CalendarHeader__nav-icon--accent\"\n      width={30}\n      height={30}\n    />\n  ),\n  nextMonthIcon = (\n    <Icon20ChevronRightOutline\n      vkuiClass=\"CalendarHeader__nav-icon--accent\"\n      width={30}\n      height={30}\n    />\n  ),\n}) => {\n  const locale = React.useContext(LocaleProviderContext);\n  const onMonthsChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) =>\n      onChange(setMonth(viewDate, Number(event.target.value))),\n    [onChange, viewDate]\n  );\n  const onYearChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) =>\n      onChange(setYear(viewDate, Number(event.target.value))),\n    [onChange, viewDate]\n  );\n\n  const months = React.useMemo(\n    () =>\n      getMonths(locale).map(({ value, label }) => ({\n        value,\n        label: <span vkuiClass=\"CalendarHeader__month\">{label}</span>,\n      })),\n    [locale]\n  );\n\n  const currentYear = viewDate.getFullYear();\n\n  const years = React.useMemo(() => getYears(currentYear, 100), [currentYear]);\n\n  const formatter = new Intl.DateTimeFormat(locale, {\n    year: \"numeric\",\n    month: \"long\",\n  });\n\n  return (\n    <div vkuiClass=\"CalendarHeader\" className={className}>\n      {prevMonth && (\n        <AdaptivityProvider sizeX={SizeType.REGULAR}>\n          <Tappable\n            vkuiClass={classNames(\n              \"CalendarHeader__nav-icon\",\n              \"CalendarHeader__nav-icon-prev\"\n            )}\n            onClick={onPrevMonth}\n            aria-label={`${prevMonthAriaLabel}, ${formatter.format(\n              subMonths(viewDate, 1)\n            )}`}\n          >\n            {prevMonthIcon}\n          </Tappable>\n        </AdaptivityProvider>\n      )}\n      {disablePickers ? (\n        <Paragraph vkuiClass=\"CalendarHeader__pickers\" weight=\"2\">\n          <span vkuiClass=\"CalendarHeader__month\">\n            {new Intl.DateTimeFormat(locale, {\n              month: \"long\",\n            }).format(viewDate)}\n          </span>\n          &nbsp;\n          {new Intl.DateTimeFormat(locale, {\n            year: \"numeric\",\n          }).format(viewDate)}\n        </Paragraph>\n      ) : (\n        <div vkuiClass=\"CalendarHeader__pickers\">\n          <CustomSelect\n            vkuiClass=\"CalendarHeader__picker\"\n            value={viewDate.getMonth()}\n            options={months}\n            dropdownOffsetDistance={4}\n            fixDropdownWidth={false}\n            sizeY={SizeType.COMPACT}\n            icon={<Icon12Dropdown />}\n            onChange={onMonthsChange}\n            forceDropdownPortal={false}\n            selectType={SelectType.accent}\n            aria-label={changeMonthAriaLabel}\n          />\n          <CustomSelect\n            vkuiClass=\"CalendarHeader__picker\"\n            value={viewDate.getFullYear()}\n            options={years}\n            dropdownOffsetDistance={4}\n            fixDropdownWidth={false}\n            sizeY={SizeType.COMPACT}\n            icon={<Icon12Dropdown />}\n            onChange={onYearChange}\n            forceDropdownPortal={false}\n            selectType={SelectType.accent}\n            aria-label={changeYearAriaLabel}\n          />\n        </div>\n      )}\n      {nextMonth && (\n        <AdaptivityProvider sizeX={SizeType.REGULAR}>\n          <Tappable\n            vkuiClass={classNames(\n              \"CalendarHeader__nav-icon\",\n              \"CalendarHeader__nav-icon-next\"\n            )}\n            onClick={onNextMonth}\n            aria-label={`${nextMonthAriaLabel}, ${formatter.format(\n              addMonths(viewDate, 1)\n            )}`}\n          >\n            {nextMonthIcon}\n          </Tappable>\n        </AdaptivityProvider>\n      )}\n    </div>\n  );\n};\n"],"file":"CalendarHeader.js"}