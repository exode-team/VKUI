{"version":3,"sources":["../../../src/components/ChipsSelect/ChipsSelect.tsx"],"names":["React","DropdownIcon","classNames","ChipsInputBase","chipsInputDefaultProps","CustomSelectOption","useChipsSelect","noop","useDOM","Caption","prefixClass","useExternRef","useGlobalEventListener","defaultFilterFn","CustomSelectDropdown","FormField","IconButton","FOCUS_ACTION_NEXT","FOCUS_ACTION_PREV","chipsSelectDefaultProps","emptyText","creatableText","onChangeStart","creatable","fetching","showSelected","closeAfterSelect","options","filterFn","renderOption","option","restProps","ChipsSelect","props","propsWithDefault","style","onFocus","onKeyDown","className","getRef","getRootRef","disabled","placeholder","tabIndex","getOptionValue","getOptionLabel","getNewOptionData","renderChip","popupDirection","inputValue","before","fixDropdownWidth","forceDropdownPortal","document","useState","undefined","popperPlacement","setPopperPlacement","scrollBoxRef","useRef","rootRef","fieldValue","selectedOptions","opened","setOpened","addOptionFromInput","filteredOptions","addOption","handleInputChange","clearInput","focusedOption","setFocusedOption","focusedOptionIndex","setFocusedOptionIndex","showCreatable","Boolean","length","handleFocus","e","handleClickOutside","target","current","contains","chipsSelectOptions","scrollToElement","index","center","dropdown","item","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","focusOptionByIndex","oldIndex","focusOption","nextIndex","type","handleKeyDown","key","defaultPrevented","preventDefault","includes","useEffect","findIndex","value","renderChipWrapper","renderChipProps","onRemoveWrapper","stopPropagation","onRemove","isPopperDirectionTop","onPlacementChange","useCallback","placement","onDropdownMouseLeave","observableRefs","useMemo","toggleOpened","prevOpened","readOnly","map","label","hovered","selected","find","selectedOption","children","onMouseDown","onMouseEnter"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { DropdownIcon } from \"../DropdownIcon/DropdownIcon\";\nimport { classNames } from \"../../lib/classNames\";\nimport { ChipOption, ChipValue, RenderChip } from \"../Chip/Chip\";\nimport { ChipsInputProps } from \"../ChipsInput/ChipsInput\";\nimport {\n  ChipsInputBase,\n  chipsInputDefaultProps,\n} from \"../ChipsInputBase/ChipsInputBase\";\nimport {\n  CustomSelectOption,\n  CustomSelectOptionProps,\n} from \"../CustomSelectOption/CustomSelectOption\";\nimport { useChipsSelect } from \"../../hooks/useChipsSelect\";\nimport { noop } from \"../../lib/utils\";\nimport { useDOM } from \"../../lib/dom\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { prefixClass } from \"../../lib/prefixClass\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { defaultFilterFn } from \"../../lib/select\";\nimport { Placement } from \"../Popper/Popper\";\nimport { CustomSelectDropdown } from \"../CustomSelectDropdown/CustomSelectDropdown\";\nimport { FormField } from \"../FormField/FormField\";\nimport { IconButton } from \"../IconButton/IconButton\";\nimport \"./ChipsSelect.css\";\n\nexport interface ChipsSelectProps<Option extends ChipOption>\n  extends Omit<ChipsInputProps<Option>, \"after\"> {\n  popupDirection?: \"top\" | \"bottom\";\n  options?: Option[];\n  filterFn?:\n    | false\n    | ((\n        value?: string,\n        option?: Option,\n        getOptionLabel?: Pick<\n          ChipsInputProps<Option>,\n          \"getOptionLabel\"\n        >[\"getOptionLabel\"]\n      ) => boolean);\n  /**\n   * Возможность создавать чипы которых нет в списке (по enter или с помощью пункта в меню, см creatableText)\n   */\n  creatable?: boolean;\n  /**\n   * Отрисовка лоадера вместо списка опций в выпадающем списке\n   */\n  fetching?: boolean;\n  renderOption?: (props: CustomSelectOptionProps) => React.ReactNode;\n  /**\n   * Показывать или скрывать уже выбранные опции\n   */\n  showSelected?: boolean;\n  /**\n   * Текст для пункта создающего чипы при клике, так же отвечает за то будет ли показан этот пункт (показывается после того как в списке не отсанется опций)\n   */\n  creatableText?: string;\n  /**\n   * Текст который показывается если список опций пуст\n   */\n  emptyText?: string;\n  /**\n   * Событие срабатывающее перед onChange\n   */\n  onChangeStart?: (\n    e: React.MouseEvent | React.KeyboardEvent,\n    option: Option\n  ) => void;\n  /**\n   * Закрытие выпадающего списка после выбора элемента\n   */\n  closeAfterSelect?: boolean;\n  fixDropdownWidth?: boolean;\n  forceDropdownPortal?: boolean;\n}\n\ntype FocusActionType = \"next\" | \"prev\";\n\nconst FOCUS_ACTION_NEXT: FocusActionType = \"next\";\nconst FOCUS_ACTION_PREV: FocusActionType = \"prev\";\n\nconst chipsSelectDefaultProps: ChipsSelectProps<any> = {\n  ...chipsInputDefaultProps,\n  emptyText: \"Ничего не найдено\",\n  creatableText: \"Создать значение\",\n  onChangeStart: noop,\n  creatable: false,\n  fetching: false,\n  showSelected: true,\n  closeAfterSelect: true,\n  options: [],\n  filterFn: defaultFilterFn,\n  renderOption({ option, ...restProps }) {\n    return <CustomSelectOption {...restProps} />;\n  },\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ChipsSelect\n */\nexport const ChipsSelect = <Option extends ChipOption>(\n  props: ChipsSelectProps<Option>\n) => {\n  const propsWithDefault = { ...chipsSelectDefaultProps, ...props };\n  const {\n    style,\n    onFocus,\n    onKeyDown,\n    className,\n    fetching,\n    renderOption,\n    emptyText,\n    getRef,\n    getRootRef,\n    disabled,\n    placeholder,\n    tabIndex,\n    getOptionValue,\n    getOptionLabel,\n    showSelected,\n    getNewOptionData,\n    renderChip,\n    popupDirection,\n    creatable,\n    filterFn,\n    inputValue,\n    creatableText,\n    closeAfterSelect,\n    onChangeStart,\n    before,\n    options,\n    fixDropdownWidth,\n    forceDropdownPortal,\n    ...restProps\n  } = propsWithDefault;\n\n  const { document } = useDOM();\n\n  const [popperPlacement, setPopperPlacement] = React.useState<\n    Placement | undefined\n  >(undefined);\n\n  const scrollBoxRef = React.useRef<HTMLDivElement>(null);\n  const rootRef = useExternRef(getRef);\n  const {\n    fieldValue,\n    selectedOptions = [],\n    opened,\n    setOpened,\n    addOptionFromInput,\n    filteredOptions,\n    addOption,\n    handleInputChange,\n    clearInput,\n    focusedOption,\n    setFocusedOption,\n    focusedOptionIndex,\n    setFocusedOptionIndex,\n  } = useChipsSelect(propsWithDefault);\n\n  const showCreatable = Boolean(\n    creatable && creatableText && !filteredOptions.length && fieldValue\n  );\n\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    setOpened(true);\n    setFocusedOptionIndex(0);\n    onFocus!(e);\n  };\n\n  const handleClickOutside = (e: MouseEvent) => {\n    if (\n      e.target !== rootRef.current &&\n      !rootRef.current?.contains(e.target as Node)\n    ) {\n      setOpened(false);\n    }\n  };\n\n  const chipsSelectOptions = React.useRef<HTMLElement[]>([]).current;\n\n  const scrollToElement = (index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const item = chipsSelectOptions[index];\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  };\n\n  const focusOptionByIndex = (index: number, oldIndex: number) => {\n    const { length } = filteredOptions;\n\n    if (index < 0) {\n      index = length - 1;\n    } else if (index >= length) {\n      index = 0;\n    }\n\n    if (index === oldIndex) {\n      return;\n    }\n\n    scrollToElement(index);\n    setFocusedOptionIndex(index);\n  };\n\n  const focusOption = (nextIndex: number | null, type: FocusActionType) => {\n    let index = typeof nextIndex !== \"number\" ? -1 : nextIndex;\n\n    if (type === FOCUS_ACTION_NEXT) {\n      index = index + 1;\n    } else if (type === FOCUS_ACTION_PREV) {\n      index = index - 1;\n    }\n\n    if (focusedOptionIndex != null) {\n      focusOptionByIndex(index, focusedOptionIndex);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown!(e);\n\n    if (e.key === \"ArrowUp\" && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_PREV);\n      }\n    }\n\n    if (e.key === \"ArrowDown\" && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_NEXT);\n      }\n    }\n\n    if (\n      e.key === \"Enter\" &&\n      !e.defaultPrevented &&\n      opened &&\n      focusedOptionIndex != null\n    ) {\n      const option = filteredOptions[focusedOptionIndex];\n\n      if (option) {\n        onChangeStart!(e, option);\n\n        if (!e.defaultPrevented) {\n          addOption(option);\n          setFocusedOptionIndex(null);\n          clearInput();\n          closeAfterSelect && setOpened(false);\n          e.preventDefault();\n        }\n      } else if (!creatable) {\n        e.preventDefault();\n      }\n    }\n\n    if ([\"Escape\", \"Tab\"].includes(e.key) && !e.defaultPrevented && opened) {\n      setOpened(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (focusedOptionIndex != null && filteredOptions[focusedOptionIndex]) {\n      setFocusedOption(filteredOptions[focusedOptionIndex]);\n    } else if (focusedOptionIndex === null || focusedOptionIndex === 0) {\n      setFocusedOption(null);\n    }\n  }, [focusedOptionIndex, filteredOptions, setFocusedOption]);\n\n  React.useEffect(() => {\n    const index = focusedOption\n      ? filteredOptions.findIndex(({ value }) => value === focusedOption.value)\n      : -1;\n\n    if (\n      index === -1 &&\n      !!filteredOptions.length &&\n      !showCreatable &&\n      closeAfterSelect\n    ) {\n      setFocusedOption(filteredOptions[0]);\n    }\n  }, [\n    filteredOptions,\n    focusedOption,\n    showCreatable,\n    closeAfterSelect,\n    setFocusedOption,\n  ]);\n\n  useGlobalEventListener(document, \"click\", handleClickOutside);\n\n  const renderChipWrapper = (\n    renderChipProps: RenderChip<Option> | undefined\n  ) => {\n    if (renderChipProps === undefined) {\n      return null;\n    }\n    const onRemoveWrapper = (\n      e: React.MouseEvent | undefined,\n      value: ChipValue | undefined\n    ) => {\n      e?.preventDefault();\n      e?.stopPropagation();\n\n      renderChipProps.onRemove?.(e, value);\n    };\n\n    return renderChip!({\n      ...renderChipProps,\n      onRemove: onRemoveWrapper,\n    });\n  };\n\n  const isPopperDirectionTop = popperPlacement?.includes(\"top\");\n\n  const onPlacementChange = React.useCallback(\n    (placement?: Placement) => {\n      setPopperPlacement(placement);\n    },\n    [setPopperPlacement]\n  );\n\n  const onDropdownMouseLeave = React.useCallback(() => {\n    setFocusedOptionIndex(null);\n  }, [setFocusedOptionIndex]);\n\n  const observableRefs = React.useMemo(\n    () => [scrollBoxRef, rootRef],\n    [rootRef, scrollBoxRef]\n  );\n\n  const toggleOpened = () => {\n    setOpened((prevOpened) => !prevOpened);\n  };\n\n  return (\n    <React.Fragment>\n      <FormField\n        vkuiClass={classNames(\n          \"ChipsSelect\",\n          opened && \"Select--open\",\n          opened &&\n            (isPopperDirectionTop ? \"Select--pop-up\" : \"Select--pop-down\")\n        )}\n        getRootRef={rootRef}\n        style={style}\n        className={className}\n        disabled={disabled}\n        role=\"application\"\n        aria-disabled={disabled}\n        aria-readonly={restProps.readOnly}\n        after={\n          <IconButton\n            vkuiClass=\"ChipsSelect__dropdown\"\n            activeMode=\"\"\n            hoverMode=\"\"\n            // TODO: add label customization\n            aria-label={opened ? \"Скрыть\" : \"Развернуть\"}\n            onClick={toggleOpened}\n          >\n            <DropdownIcon vkuiClass=\"ChipsSelect__icon\" opened={opened} />\n          </IconButton>\n        }\n        before={before}\n      >\n        <ChipsInputBase\n          {...restProps}\n          tabIndex={tabIndex}\n          value={selectedOptions}\n          inputValue={fieldValue}\n          getNewOptionData={getNewOptionData}\n          getOptionLabel={getOptionLabel}\n          getOptionValue={getOptionValue}\n          renderChip={renderChipWrapper}\n          onFocus={handleFocus}\n          onKeyDown={handleKeyDown}\n          placeholder={placeholder}\n          getRef={getRef}\n          disabled={disabled}\n          onInputChange={handleInputChange}\n        />\n      </FormField>\n      {opened && (\n        <CustomSelectDropdown\n          targetRef={rootRef}\n          placement={popupDirection}\n          scrollBoxRef={scrollBoxRef}\n          observableRefs={observableRefs}\n          onPlacementChange={onPlacementChange}\n          onMouseLeave={onDropdownMouseLeave}\n          fetching={fetching}\n          vkuiClass=\"ChipsSelect__options\"\n          sameWidth={fixDropdownWidth}\n          forcePortal={forceDropdownPortal}\n        >\n          {showCreatable && (\n            <CustomSelectOption\n              hovered={focusedOptionIndex === 0}\n              onMouseDown={addOptionFromInput}\n              onMouseEnter={() => setFocusedOptionIndex(0)}\n            >\n              {creatableText}\n            </CustomSelectOption>\n          )}\n          {!filteredOptions?.length && !showCreatable && emptyText ? (\n            <Caption vkuiClass=\"ChipsSelect__empty\">{emptyText}</Caption>\n          ) : (\n            filteredOptions.map((option: Option, index: number) => {\n              const label = getOptionLabel!(option);\n              const hovered =\n                focusedOption &&\n                getOptionValue!(option) === getOptionValue!(focusedOption);\n              const selected = selectedOptions.find(\n                (selectedOption: Option) => {\n                  return (\n                    getOptionValue!(selectedOption) === getOptionValue!(option)\n                  );\n                }\n              );\n              const value = getOptionValue!(option);\n\n              return (\n                <React.Fragment key={`${typeof value}-${value}`}>\n                  {renderOption!({\n                    className: prefixClass(\"ChipsSelect__option\"),\n                    option,\n                    hovered: Boolean(hovered),\n                    children: label,\n                    selected: !!selected,\n                    getRootRef: (e) => {\n                      if (e) {\n                        return (chipsSelectOptions[index] = e);\n                      }\n                      return undefined;\n                    },\n                    onMouseDown: (e: React.MouseEvent<HTMLDivElement>) => {\n                      onChangeStart?.(e, option);\n\n                      if (!e.defaultPrevented) {\n                        closeAfterSelect && setOpened(false);\n                        addOption(option);\n                        clearInput();\n                      }\n                    },\n                    onMouseEnter: () => setFocusedOptionIndex(index),\n                  })}\n                </React.Fragment>\n              );\n            })\n          )}\n        </CustomSelectDropdown>\n      )}\n    </React.Fragment>\n  );\n};\n"],"file":"ChipsSelect.js"}