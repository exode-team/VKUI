{"version":3,"sources":["../../../src/components/Gallery/Gallery.tsx"],"names":["React","clamp","useTimeout","BaseGallery","Gallery","initialSlideIndex","children","timeout","onChange","bullets","props","useState","localSlideIndex","setSlideIndex","isControlled","slideIndex","isDraggable","Boolean","slides","useMemo","Children","toArray","filter","item","childCount","length","handleChange","useCallback","current","autoplay","useEffect","set","clear","safeSlideIndex"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT;AACA,SAASC,UAAT;AACA,SAASC,WAAT;;AAQA;AACA;AACA;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAOH;AAAA;;AAAA,mCANlBC,iBAMkB;AAAA,MANlBA,iBAMkB,sCANE,CAMF;AAAA,MALlBC,QAKkB,QALlBA,QAKkB;AAAA,0BAJlBC,OAIkB;AAAA,MAJlBA,OAIkB,6BAJR,CAIQ;AAAA,MAHlBC,QAGkB,QAHlBA,QAGkB;AAAA,MAFlBC,OAEkB,QAFlBA,OAEkB;AAAA,MADfC,KACe;;AAClB,wBAAyCV,KAAK,CAACW,QAAN,CAAeN,iBAAf,CAAzC;AAAA;AAAA,MAAOO,eAAP;AAAA,MAAwBC,aAAxB;;AACA,MAAMC,YAAY,GAAG,OAAOJ,KAAK,CAACK,UAAb,KAA4B,QAAjD;AACA,MAAMA,UAAU,GAAGD,YAAY,wBAAGJ,KAAK,CAACK,UAAT,iEAAuB,CAAvB,GAA2BH,eAA1D;AACA,MAAMI,WAAW,GAAG,CAACF,YAAD,IAAiBG,OAAO,CAACT,QAAD,CAA5C;AACA,MAAMU,MAAM,GAAGlB,KAAK,CAACmB,OAAN,CACb;AAAA,WAAMnB,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBf,QAAvB,EAAiCgB,MAAjC,CAAwC,UAACC,IAAD;AAAA,aAAUN,OAAO,CAACM,IAAD,CAAjB;AAAA,KAAxC,CAAN;AAAA,GADa,EAEb,CAACjB,QAAD,CAFa,CAAf;AAIA,MAAMkB,UAAU,GAAGN,MAAM,CAACO,MAA1B;AAEA,MAAMC,YAAsC,GAAG1B,KAAK,CAAC2B,WAAN,CAC7C,UAACC,OAAD,EAAa;AACX,QAAIA,OAAO,KAAKb,UAAhB,EAA4B;AAC1B;AACD;;AACD,KAACD,YAAD,IAAiBD,aAAa,CAACe,OAAD,CAA9B;AACApB,IAAAA,QAAQ,IAAIA,QAAQ,CAACoB,OAAD,CAApB;AACD,GAP4C,EAQ7C,CAACd,YAAD,EAAeN,QAAf,EAAyBO,UAAzB,CAR6C,CAA/C;AAWA,MAAMc,QAAQ,GAAG3B,UAAU,CACzB;AAAA,WAAMwB,YAAY,CAAC,CAACX,UAAU,GAAG,CAAd,IAAmBS,UAApB,CAAlB;AAAA,GADyB,EAEzBjB,OAFyB,CAA3B;AAIAP,EAAAA,KAAK,CAAC8B,SAAN,CACE;AAAA,WAAOvB,OAAO,GAAGsB,QAAQ,CAACE,GAAT,EAAH,GAAoBF,QAAQ,CAACG,KAAT,EAAlC;AAAA,GADF,EAEE,CAACzB,OAAD,EAAUQ,UAAV,EAAsBc,QAAtB,CAFF,EA1BkB,CA+BlB;AACA;;AACA,MAAMI,cAAc,GAClBT,UAAU,GAAG,CAAb,GAAiBvB,KAAK,CAACc,UAAD,EAAa,CAAb,EAAgBS,UAAU,GAAG,CAA7B,CAAtB,GAAwDT,UAD1D,CAjCkB,CAmClB;;AACAf,EAAAA,KAAK,CAAC8B,SAAN,CAAgB,YAAM;AACpB,QAAItB,QAAQ,IAAIyB,cAAc,KAAKlB,UAAnC,EAA+C;AAC7CP,MAAAA,QAAQ,CAACyB,cAAD,CAAR;AACD;AACF,GAJD,EAIG,CAACzB,QAAD,EAAWyB,cAAX,EAA2BlB,UAA3B,CAJH;AAMA,SACE,oBAAC,WAAD;AACE,IAAA,WAAW,EAAEC;AADf,KAEMN,KAFN;AAGE,IAAA,OAAO,EAAEc,UAAU,GAAG,CAAb,IAAkBf,OAH7B;AAIE,IAAA,UAAU,EAAEwB,cAJd;AAKE,IAAA,QAAQ,EAAEP;AALZ,MAOGR,MAPH,CADF;AAWD,CA5DM","sourcesContent":["import * as React from \"react\";\nimport { clamp } from \"../../helpers/math\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { BaseGallery } from \"../BaseGallery/BaseGallery\";\nimport { BaseGalleryProps } from \"../BaseGallery/types\";\n\nexport interface GalleryProps extends BaseGalleryProps {\n  initialSlideIndex?: number;\n  timeout?: number;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Gallery\n */\nexport const Gallery = ({\n  initialSlideIndex = 0,\n  children,\n  timeout = 0,\n  onChange,\n  bullets,\n  ...props\n}: GalleryProps) => {\n  const [localSlideIndex, setSlideIndex] = React.useState(initialSlideIndex);\n  const isControlled = typeof props.slideIndex === \"number\";\n  const slideIndex = isControlled ? props.slideIndex ?? 0 : localSlideIndex;\n  const isDraggable = !isControlled || Boolean(onChange);\n  const slides = React.useMemo(\n    () => React.Children.toArray(children).filter((item) => Boolean(item)),\n    [children]\n  );\n  const childCount = slides.length;\n\n  const handleChange: GalleryProps[\"onChange\"] = React.useCallback(\n    (current) => {\n      if (current === slideIndex) {\n        return;\n      }\n      !isControlled && setSlideIndex(current);\n      onChange && onChange(current);\n    },\n    [isControlled, onChange, slideIndex]\n  );\n\n  const autoplay = useTimeout(\n    () => handleChange((slideIndex + 1) % childCount),\n    timeout\n  );\n  React.useEffect(\n    () => (timeout ? autoplay.set() : autoplay.clear()),\n    [timeout, slideIndex, autoplay]\n  );\n\n  // prevent invalid slideIndex\n  // any slide index is invalid with no slides, just keep it as is\n  const safeSlideIndex =\n    childCount > 0 ? clamp(slideIndex, 0, childCount - 1) : slideIndex;\n  // notify parent in controlled mode\n  React.useEffect(() => {\n    if (onChange && safeSlideIndex !== slideIndex) {\n      onChange(safeSlideIndex);\n    }\n  }, [onChange, safeSlideIndex, slideIndex]);\n\n  return (\n    <BaseGallery\n      isDraggable={isDraggable}\n      {...props}\n      bullets={childCount > 0 && bullets}\n      slideIndex={safeSlideIndex}\n      onChange={handleChange}\n    >\n      {slides}\n    </BaseGallery>\n  );\n};\n"],"file":"Gallery.js"}