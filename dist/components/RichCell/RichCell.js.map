{"version":3,"sources":["../../../src/components/RichCell/RichCell.tsx"],"names":["classNames","usePlatform","getClassName","Tappable","hasReactNode","Paragraph","Subhead","withAdaptivity","RichCellComponent","children","text","caption","before","after","bottom","actions","multiline","sizeY","restProps","platform","RichCell","displayName"],"mappings":";;;;AACA,SAASA,UAAT;AACA,SAASC,WAAT;AACA,SAASC,YAAT;AACA,SAAwBC,QAAxB;AACA,SAASC,YAAT;AACA,SAASC,SAAT;AACA,SAASC,OAAT;AACA,SAASC,cAAT;;AA4CA,IAAMC,iBAA0C,GAAG,SAA7CA,iBAA6C,OAW7C;AAAA,MAVJC,QAUI,QAVJA,QAUI;AAAA,MATJC,IASI,QATJA,IASI;AAAA,MARJC,OAQI,QARJA,OAQI;AAAA,MAPJC,MAOI,QAPJA,MAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADDC,SACC;;AACJ,MAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,SACE,oBAAC,QAAD,eACMiB,SADN;AAEE;AACA,IAAA,SAAS,EAAElB,UAAU,CACnBE,YAAY,CAAC,UAAD,EAAaiB,QAAb,CADO,EAEnB;AACE,wBAAkBH;AADpB,KAFmB,4BAKAC,KALA;AAHvB,MAWGL,MAXH,EAYE;AAAK,IAAA,SAAS,EAAC;AAAf,KAEGC,KAFH,EAGE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAC;AAAhC,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAqCJ,QAArC,CADF,EAEGL,YAAY,CAACS,KAAD,CAAZ,IACC;AAAK,IAAA,SAAS,EAAC;AAAf,KAAkCA,KAAlC,CAHJ,CAHF,EASGT,YAAY,CAACM,IAAD,CAAZ,IACC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC;AAArB,KAAuCA,IAAvC,CAVJ,EAYGN,YAAY,CAACO,OAAD,CAAZ,IACC,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAC;AAApC,KACGA,OADH,CAbJ,EAiBGP,YAAY,CAACU,MAAD,CAAZ,IACC;AAAK,IAAA,SAAS,EAAC;AAAf,KAAmCA,MAAnC,CAlBJ,EAoBGV,YAAY,CAACW,OAAD,CAAZ,IACC;AAAK,IAAA,SAAS,EAAC;AAAf,KAAoCA,OAApC,CArBJ,CAZF,CADF;AAuCD,CArDD;AAuDA;AACA;AACA;;;AACA,OAAO,IAAMK,QAAQ,GAAGb,cAAc,CAACC,iBAAD,EAAoB;AAAES,EAAAA,KAAK,EAAE;AAAT,CAApB,CAA/B;AAEPG,QAAQ,CAACC,WAAT,GAAuB,UAAvB","sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { TappableProps, Tappable } from \"../Tappable/Tappable\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { Paragraph } from \"../Typography/Paragraph/Paragraph\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport \"./RichCell.css\";\n\nexport interface RichCellProps extends TappableProps {\n  /**\n   * Контейнер для текста под `children`.\n   */\n  text?: React.ReactNode;\n  /**\n   * Контейнер для текста под `text`.\n   */\n  caption?: React.ReactNode;\n  /**\n   * Контейнер для контента под `caption`. Например `<UsersStack size=\"s\" />`\n   */\n  bottom?: React.ReactNode;\n  /**\n   * Кнопки-действия.\n   *\n   * Рекомендуется использовать [Button](#/Button) с параметрами:\n   *\n   * - `mode=\"primary\" size=\"s\"`\n   * - `mode=\"secondary\" size=\"s\"`\n   *\n   * Для набора кнопок следует использовать [ButtonGroup](#/ButtonGroup) с параметрами:\n   *\n   * - `mode=\"horizontal\" gap=\"s\" stretched`\n   */\n  actions?: React.ReactNode;\n  /**\n   * `<Avatar size={48|72} />`\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка 28 или текст\n   */\n  after?: React.ReactNode;\n  /**\n   * Убирает анимацию нажатия\n   */\n  disabled?: boolean;\n  multiline?: boolean;\n}\n\nconst RichCellComponent: React.FC<RichCellProps> = ({\n  children,\n  text,\n  caption,\n  before,\n  after,\n  bottom,\n  actions,\n  multiline,\n  sizeY,\n  ...restProps\n}) => {\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      {...restProps}\n      // eslint-disable-next-line vkui/no-object-expression-in-arguments\n      vkuiClass={classNames(\n        getClassName(\"RichCell\", platform),\n        {\n          \"RichCell--mult\": multiline,\n        },\n        `RichCell--sizeY-${sizeY}`\n      )}\n    >\n      {before}\n      <div vkuiClass=\"RichCell__in\">\n        {/* Этот after будет скрыт из верстки. Он нужен для CSS */}\n        {after}\n        <Paragraph weight=\"2\" vkuiClass=\"RichCell__content\">\n          <div vkuiClass=\"RichCell__children\">{children}</div>\n          {hasReactNode(after) && (\n            <div vkuiClass=\"RichCell__after\">{after}</div>\n          )}\n        </Paragraph>\n        {hasReactNode(text) && (\n          <Paragraph vkuiClass=\"RichCell__text\">{text}</Paragraph>\n        )}\n        {hasReactNode(caption) && (\n          <Subhead Component=\"span\" vkuiClass=\"RichCell__caption\">\n            {caption}\n          </Subhead>\n        )}\n        {hasReactNode(bottom) && (\n          <div vkuiClass=\"RichCell__bottom\">{bottom}</div>\n        )}\n        {hasReactNode(actions) && (\n          <div vkuiClass=\"RichCell__actions\">{actions}</div>\n        )}\n      </div>\n    </Tappable>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/RichCell\n */\nexport const RichCell = withAdaptivity(RichCellComponent, { sizeY: true });\n\nRichCell.displayName = \"RichCell\";\n"],"file":"RichCell.js"}