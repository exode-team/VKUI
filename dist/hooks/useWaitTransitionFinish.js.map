{"version":3,"sources":["../../src/hooks/useWaitTransitionFinish.ts"],"names":["React","useDOM","noop","transitionEvent","useWaitTransitionFinish","timeoutRef","useRef","document","detach","remove","useCallback","current","waitTransitionFinish","element","eventHandler","durationFallback","hidden","supported","name","addEventListener","removeEventListener","clearTimeout","setTimeout"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT;AACA,SAASC,IAAT;AACA,SAASC,eAAT;AAEA,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAC3C,MAAMC,UAAU,GAAGL,KAAK,CAACM,MAAN,CAAmD,IAAnD,CAAnB;;AACA,gBAAqBL,MAAM,EAA3B;AAAA,MAAQM,QAAR,WAAQA,QAAR;;AACA,MAAMC,MAAM,GAAGR,KAAK,CAACM,MAAN,CAAaJ,IAAb,CAAf;AAEA,MAAMO,MAAM,GAAGT,KAAK,CAACU,WAAN,CAAkB,YAAM;AACrCF,IAAAA,MAAM,CAACG,OAAP;AACAH,IAAAA,MAAM,CAACG,OAAP,GAAiBT,IAAjB;AACD,GAHc,EAGZ,EAHY,CAAf;AAKA,MAAMU,oBAAoB,GAAGZ,KAAK,CAACU,WAAN,CAC3B,UACEG,OADF,EAEEC,YAFF,EAGEC,gBAHF,EAIK;AACH,QAAIF,OAAJ,EAAa;AACX,UACE,EAACN,QAAD,aAACA,QAAD,eAACA,QAAQ,CAAES,MAAX,KACAb,eAAe,CAACc,SADhB,IAEAd,eAAe,CAACe,IAHlB,EAIE;AACAT,QAAAA,MAAM;AACNI,QAAAA,OAAO,CAACM,gBAAR,CAAyBhB,eAAe,CAACe,IAAzC,EAA+CJ,YAA/C;;AACAN,QAAAA,MAAM,CAACG,OAAP,GAAiB,YAAM;AACrB,cAAIR,eAAe,CAACe,IAApB,EAA0B;AACxBL,YAAAA,OAAO,CAACO,mBAAR,CAA4BjB,eAAe,CAACe,IAA5C,EAAkDJ,YAAlD;AACD;AACF,SAJD;AAKD,OAZD,MAYO;AACL,YAAIT,UAAJ,aAAIA,UAAJ,eAAIA,UAAU,CAAEM,OAAhB,EAAyB;AACvBU,UAAAA,YAAY,CAAChB,UAAU,CAACM,OAAZ,CAAZ;AACD;;AACDN,QAAAA,UAAU,CAACM,OAAX,GAAqBW,UAAU,CAACR,YAAD,EAAeC,gBAAf,CAA/B;AACD;AACF;AACF,GA1B0B,EA2B3B,CAACR,QAAD,EAAWE,MAAX,EAAmBJ,UAAnB,CA3B2B,CAA7B;AA8BA,SAAO;AACLO,IAAAA,oBAAoB,EAApBA;AADK,GAAP;AAGD,CA3CM","sourcesContent":["import * as React from \"react\";\nimport { useDOM } from \"../lib/dom\";\nimport { noop } from \"../lib/utils\";\nimport { transitionEvent } from \"../lib/supportEvents\";\n\nexport const useWaitTransitionFinish = () => {\n  const timeoutRef = React.useRef<ReturnType<typeof setTimeout> | null>(null);\n  const { document } = useDOM();\n  const detach = React.useRef(noop);\n\n  const remove = React.useCallback(() => {\n    detach.current();\n    detach.current = noop;\n  }, []);\n\n  const waitTransitionFinish = React.useCallback(\n    (\n      element: HTMLElement | null,\n      eventHandler: VoidFunction,\n      durationFallback: number\n    ) => {\n      if (element) {\n        if (\n          !document?.hidden &&\n          transitionEvent.supported &&\n          transitionEvent.name\n        ) {\n          remove();\n          element.addEventListener(transitionEvent.name, eventHandler);\n          detach.current = () => {\n            if (transitionEvent.name) {\n              element.removeEventListener(transitionEvent.name, eventHandler);\n            }\n          };\n        } else {\n          if (timeoutRef?.current) {\n            clearTimeout(timeoutRef.current);\n          }\n          timeoutRef.current = setTimeout(eventHandler, durationFallback);\n        }\n      }\n    },\n    [document, remove, timeoutRef]\n  );\n\n  return {\n    waitTransitionFinish,\n  };\n};\n"],"file":"useWaitTransitionFinish.js"}